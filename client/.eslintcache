[{"/Users/mac/Documents/mern stack/photoShare/client/src/index.js":"1","/Users/mac/Documents/mern stack/photoShare/client/src/App.js":"2","/Users/mac/Documents/mern stack/photoShare/client/src/reportWebVitals.js":"3","/Users/mac/Documents/mern stack/photoShare/client/src/redux/store.js":"4","/Users/mac/Documents/mern stack/photoShare/client/src/redux/reducers/rootReducer.js":"5","/Users/mac/Documents/mern stack/photoShare/client/src/redux/reducers/userReducer.js":"6","/Users/mac/Documents/mern stack/photoShare/client/src/redux/actions/user/user.types.js":"7","/Users/mac/Documents/mern stack/photoShare/client/src/redux/actions/user/user.actions.js":"8","/Users/mac/Documents/mern stack/photoShare/client/src/redux/utils.js":"9","/Users/mac/Documents/mern stack/photoShare/client/src/components/auth/Login/index.js":"10","/Users/mac/Documents/mern stack/photoShare/client/src/components/mainContent/index.js":"11","/Users/mac/Documents/mern stack/photoShare/client/src/redux/reducers/posts/postReducer.js":"12","/Users/mac/Documents/mern stack/photoShare/client/src/redux/actions/post/post.types.js":"13","/Users/mac/Documents/mern stack/photoShare/client/src/components/feeds/index.js":"14","/Users/mac/Documents/mern stack/photoShare/client/src/redux/actions/post/post.actions.js":"15","/Users/mac/Documents/mern stack/photoShare/client/src/components/DisplayPosts/DisplayPosts.js":"16","/Users/mac/Documents/mern stack/photoShare/client/src/pages/mainPage/index.js":"17","/Users/mac/Documents/mern stack/photoShare/client/src/components/sideMenu/index.js":"18","/Users/mac/Documents/mern stack/photoShare/client/src/components/comment/commentForm/index.js":"19","/Users/mac/Documents/mern stack/photoShare/client/src/components/comment/commentList/index.js":"20"},{"size":778,"mtime":1612035138043,"results":"21","hashOfConfig":"22"},{"size":711,"mtime":1612363471775,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607704375232,"results":"24","hashOfConfig":"22"},{"size":350,"mtime":1610053256490,"results":"25","hashOfConfig":"22"},{"size":220,"mtime":1609183441018,"results":"26","hashOfConfig":"22"},{"size":1918,"mtime":1609756804728,"results":"27","hashOfConfig":"22"},{"size":340,"mtime":1609547953035,"results":"28","hashOfConfig":"22"},{"size":2514,"mtime":1610551292898,"results":"29","hashOfConfig":"22"},{"size":254,"mtime":1609182578034,"results":"30","hashOfConfig":"22"},{"size":4910,"mtime":1610442136765,"results":"31","hashOfConfig":"22"},{"size":5454,"mtime":1612101127124,"results":"32","hashOfConfig":"22"},{"size":2376,"mtime":1612100504538,"results":"33","hashOfConfig":"22"},{"size":363,"mtime":1612077997941,"results":"34","hashOfConfig":"22"},{"size":1371,"mtime":1610552410443,"results":"35","hashOfConfig":"22"},{"size":7649,"mtime":1612113588649,"results":"36","hashOfConfig":"22"},{"size":6703,"mtime":1612113849316,"results":"37","hashOfConfig":"22"},{"size":1583,"mtime":1610551927568,"results":"38","hashOfConfig":"22"},{"size":4336,"mtime":1612114210399,"results":"39","hashOfConfig":"22"},{"size":1290,"mtime":1612052765447,"results":"40","hashOfConfig":"22"},{"size":1180,"mtime":1612113890690,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1rmy7s4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},"/Users/mac/Documents/mern stack/photoShare/client/src/index.js",[],["88","89"],"/Users/mac/Documents/mern stack/photoShare/client/src/App.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/reportWebVitals.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/store.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/reducers/rootReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/reducers/userReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/actions/user/user.types.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/actions/user/user.actions.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/utils.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/components/auth/Login/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/components/mainContent/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/reducers/posts/postReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/actions/post/post.types.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/components/feeds/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/actions/post/post.actions.js",["90"],"import { PostTypes } from '../../actions/post/post.types';\nimport axios from 'axios'\nimport setToken from '../../utils';\nimport { toast } from 'react-toastify';\n\nimport cogoToast from 'cogo-toast';\nimport Pusher from 'pusher-js'\n\nconst pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n    encoded: true,\n    cluster: 'mt1'\n});\nconst channel = pusher.subscribe('flash-comments');\n\nconst url = \"http://localhost:8000\"\n\n/**\n * @description getall posts\n */\nexport const getposts = () => {\n    return async (dispatch) => {\n        try {\n\n            const CancelToken = axios.CancelToken;\n            const source = CancelToken.source();\n            const res = await axios.get(`${url}/api/route/post/allposts`, {\n                source\n            });\n\n            dispatch({ type: PostTypes.GET_POSTS, payload: res.data })\n        } catch (err) {\n\n            if (err) {\n                dispatch({\n                    type: PostTypes.POST_ERROR, payload: err\n                })\n            }\n        }\n    }\n};\n\n/**\n * @description Add Post\n */\nexport const createPost = (formData) => {\n    return async (dispatch) => {\n\n        const { authToken } = localStorage;\n        if (authToken) {\n            setToken(authToken);\n        }\n\n        try {\n            const config = {\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"multipart/form-data\"\n                }\n            }\n\n            const res = await axios.post(`${url}/api/route/post`, formData, config);\n            await dispatch({ type: PostTypes.ADD_POST, payload: res.data });\n\n            toast.success('success', {\n                position: \"top-right\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n\n            });\n\n\n\n\n\n        } catch (err) {\n            if (err) {\n                dispatch({\n                    type: PostTypes.POST_ERROR,\n                    payload: {\n                        msg: err.message\n                    },\n                });\n            }\n        }\n    }\n};\n\n/**\n * @description like a post \n */\n\nexport const addLike = (id) => {\n    return async (dispatch) => {\n        try {\n            const { authToken } = localStorage;\n            if (authToken) {\n                await setToken(authToken);\n            };\n\n            const res = await axios.put(`${url}/api/route/post/like/:${id}`);\n            dispatch({\n                type: PostTypes.UPDATE_LIKES, payload: {\n                    id, likes: res.data\n                }\n            })\n        } catch (err) {\n            if (err) {\n                dispatch({\n                    type: PostTypes.POST_ERROR,\n                    payload: {\n                        msg:\n                            err.response.statusText +\n                            \" - UPDATE_LIKES error - addLike\" +\n                            \" \" +\n                            (id && id),\n                        status: err.response.status,\n                    },\n                })\n            }\n        }\n    }\n};\n\n/**\n * @description remove like\n */\n\nexport const removeLike = (id) => {\n    return async (dispatch) => {\n        try {\n            const { authToken } = localStorage;\n            if (authToken) {\n                await setToken(authToken);\n            };\n            const res = axios.put(`${url}/api/route/post/unlike/:${id}`);\n            dispatch({\n                type: PostTypes.UPDATE_LIKES, payload: {\n                    id, likes: res.data\n                }\n            });\n        } catch (err) {\n            if (err) {\n                dispatch({\n                    type: PostTypes.POST_ERROR,\n                    payload: {\n                        msg: err.response.statusText + \" - UPDATE_LIKES error - removeLike\",\n                        status: err.response.status,\n                    },\n                });\n            }\n        }\n    }\n};\n\n/**\n * @description Add comment\n */\n\n\nexport const addComment = (id, formData) => {\n    return async (dispatch) => {\n        const { authToken } = localStorage;\n        if (authToken) {\n            await setToken(authToken);\n        };\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            params: {\n                id\n            }\n        };\n        try {\n            cogoToast.loading('adding comment')\n            const res = await axios.post(`${url}/api/route/post/comment/${id}`, formData, config);\n            const data = await res.data;\n            // channel.bind('new-comment', function (data) {\n            //     alert('An event was triggered with message: ' + data.message);\n            //     console.log(data);\n            // });\n            dispatch({ type: PostTypes.ADD_COMMENT, payload: data })\n            cogoToast.success('comment added');\n        } catch (err) {\n            cogoToast.error(`${err.message}`);\n            dispatch({\n                type: PostTypes.POST_ERROR,\n                payload: {\n                    msg: err.response.statusText + \" - ADD_COMMENT error - addComment\",\n                    status: err.response.status,\n                },\n            });\n        }\n    }\n};\n/**\n * @description GET COMMENTS\n */\n\nexport const getComments = () => {\n    return async (dispatch) => {\n        const { authToken } = localStorage;\n        if (authToken) {\n            await setToken(authToken);\n        };\n\n        try {\n\n            const res = await axios.get(`${url}/api/route/post/comments/all-comments`);\n            dispatch({ type: PostTypes.GET_COMMENTS, payload: res.data })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n/**\n * @description Get User post\n */\n\nexport const post = (id) => {\n    return async (dispatch) => {\n\n        const { authToken } = localStorage;\n        if (authToken) {\n            await setToken(authToken);\n        };\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        try {\n\n            const res = await axios.get(`{url}/api/route/post/${id}`, config);\n\n            dispatch({\n                type: PostTypes.GET_POST,\n                payload: res.data,\n            });\n        } catch (err) {\n\n            dispatch({\n                type: PostTypes.POST_ERROR,\n                payload: {\n                    msg:\n                        err.response.statusText +\n                        \" - GET_POST error - getPost - \" +\n                        \"Post Id: \" +\n                        id,\n                    status: err.response.status,\n                },\n            });\n        }\n    }\n}\n\n/**\n * @description delete User post by Id\n */\n\n\nexport const deletePost = (id) => {\n    return async (dispatch) => {\n\n        const { authToken } = localStorage;\n        if (authToken) {\n            await setToken(authToken);\n        };\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        };\n        try {\n            await axios.delete(`{url}/api/route/post/${id}`, config);\n\n            dispatch({\n                type: PostTypes.DELETE_POST,\n                payload: id,\n            });\n\n\n        } catch (err) {\n            dispatch({\n                type: PostTypes.POST_ERROR, payload: {\n                    msg: err.response.statusText + \" - DELETE_POST error - deletePost\",\n                    status: err.response.status,\n                }\n            })\n        }\n    }\n}","/Users/mac/Documents/mern stack/photoShare/client/src/components/DisplayPosts/DisplayPosts.js",["91"],"import React, { Fragment, useState, useEffect } from 'react';\n\n// import moment from \"moment\";\nimport Avatar from '../../../src/assets/images/Avatar.png'\nimport './style.scss';\n// import Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport { IconContext } from \"react-icons\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom'\n//icons \n\n\nimport { BsHeart } from 'react-icons/bs'\nimport { FaRegComment } from 'react-icons/fa';\nimport { addComment, getposts } from '../../redux/actions/post/post.actions';\nimport CommentForm from '../comment/commentForm';\nimport CommentList from '../comment/commentList';\nimport Pusher from 'pusher-js';\n\nconst DisplayPosts = ({ posts, postLoading, user, comments }) => {\n\n\n\n    const [liked, setLiked] = useState(false);\n    // // const [comments, setComments] = useState(() => {\n    // //     posts.comments.filter((comment) => {\n\n    // //     })\n    // // });\n\n\n\n\n\n    // const handlePostImgLoading = () => {\n    //     // setImgLoaded(true)\n\n    // };\n\n    const handleCommentIconClick = () => {\n        console.log('icon clicked')\n    };\n    const handleLiked = () => {\n        setLiked(true)\n\n    };\n    useEffect(() => {\n        const pusher = new Pusher(process.env.REACT_APP_PUSHER_KEY, {\n            encoded: true,\n            cluster: 'mt1'\n        });\n\n        const channel = pusher.subscribe('messages');\n        channel.bind('flash-comments', (data) => {\n            alert(JSON.stringify(data));\n        });\n\n        return () => {\n            channel.unbind_all();\n            channel.unsubscribe();\n        };\n    }, []);\n    return (\n\n        <Fragment>\n\n            <div className=\"displayPosts-container\">\n                {\n\n                    !posts.length && postLoading ? <h1> Loading </h1>\n                        : (\n                            <div className=\"postsLoaded-Conatainer\">\n                                {\n                                    posts.map((post) => {\n                                        return (\n                                            <div key={post._id} className=\"postWrapper\">\n                                                <div className=\"card-header\">\n                                                    <div className=\"headerimg-wrapper\">\n                                                        <img\n                                                            src={user.profileImg ? user.profileImg : Avatar}\n                                                            alt=\"profile\"\n                                                            width=\"40px\"\n                                                            height=\"40px\"\n                                                        />\n\n                                                    </div>\n                                                    <h5 className=\"header-username\">{post.postedBy.username ? post.postedBy.username : \"username\"}</h5>\n                                                </div>\n                                                <div className=\"post-picture\">\n                                                    <img\n                                                        loading=\"lazy\"\n                                                        src={post.postImg}\n                                                        alt=\"postimg\"\n\n                                                        width=\"30px\"\n                                                        height=\"30px\"\n                                                    />\n\n\n\n                                                </div>\n                                                <div className=\"iconsWrapper\">\n                                                    <h5>\n                                                        <IconContext.Provider value={{ className: \"likesIcon\", style: { fill: \"red\" } }}>\n\n                                                            <BsHeart onClick={handleLiked} /> {post.likes.length === 0 ? 0 : post.likes.length}\n                                                        </IconContext.Provider>\n                                                    </h5>\n                                                    <h5>\n                                                        <IconContext.Provider value={{ className: \"commentIcon\" }}>\n                                                            <FaRegComment onClick={handleCommentIconClick} />\n                                                            {comments.length && comments.filter((comment) => {\n                                                                return comment.postId === post._id\n                                                            }).length}\n                                                        </IconContext.Provider>\n                                                    </h5>\n\n                                                </div>\n                                                <div className=\"caption-Wrapper\">\n                                                    <p>\n                                                        <span className=\"username\"> {user.username}</span>\n                                                        <span className=\"caption\"> {post.caption ? post.caption : null}</span>\n\n                                                    </p>\n\n                                                </div>\n                                                <CommentForm post={post} postId={post._id} />\n                                                {comments.filter((comment) => {\n                                                    return comment.postId === post._id\n                                                }).map((comment) => {\n                                                    return (\n                                                        <CommentList key={comment._id} author={comment.author} comments={comment} commentId={comment._id} />\n\n                                                    )\n                                                })}\n                                            </div>\n                                        )\n                                    })\n\n\n                                }\n\n\n\n                            </div>\n                        )\n\n\n                }\n            </div>\n        </Fragment>\n    )\n\n}\n\n\nconst mapStateToProps = ({ post, user }) => {\n    return {\n\n        posts: post.posts,\n        comments: post.comments,\n        postLoading: post.loading,\n        user: user.currentUser\n    }\n\n}\nexport default connect(mapStateToProps, { addComment, getposts })(withRouter(DisplayPosts));","/Users/mac/Documents/mern stack/photoShare/client/src/pages/mainPage/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/components/sideMenu/index.js",["92","93"],"import React from 'react';\nimport './style.scss';\nimport { connect } from 'react-redux';\nimport { LogOut } from '../../redux/actions/user/user.actions';\n//icons imports \nimport { FaServer } from 'react-icons/fa'\nimport { BsSearch } from 'react-icons/bs'\nimport { BsBellFill } from 'react-icons/bs'\nimport { FiSettings } from 'react-icons/fi'\nimport { IconContext } from \"react-icons\";\nimport { FiLogOut } from 'react-icons/fi'\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify'\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { withRouter } from 'react-router-dom';\nimport Avatar from '../../assets/images/Avatar.png'\n\nconst SideMenu = ({ user, history, LogOut }) => {\n\n    const handleLogOut = async () => {\n        try {\n            await LogOut(history);\n            history.push('/')\n        } catch (error) {\n            console.log(error);\n            toast.error(`${error}`, {\n                autoClose: 1000\n            })\n        }\n    }\n    const { username, followers, name, Fllowing } = user;\n    return (\n        <div className=\"side-menu\">\n\n            <section className=\"logo-section\">\n                <div className=\"logo-name\">\n                    <h3> Photogram</h3>\n\n                </div>\n\n            </section>\n            <section className=\"profile-info\">\n                <div className=\"profile-img\">\n\n                    <img src={user.displayPicture ? user.displayPicture : Avatar} alt=\"profile\" />\n                </div>\n                <div className=\"profile-names\">\n                    <p className=\"profileName\"> {name}</p>\n                    <p className=\"username\"> @{username ? username : \"kelsdman\"}</p>\n                </div>\n\n            </section>\n            <section className=\"post\">\n                <div className=\"posts\">\n                    <span> 46</span><span> Posts</span>\n                </div>\n                <div className=\"Followers\"> <span>2.67k</span> <span>Followers</span> </div>\n                <div className=\"Following\">\n                    <span>526</span><span>Following</span></div>\n            </section>\n            <section className=\"menu-list\">\n                <ul>\n\n                    <li className=\"feeds\">\n                        <IconContext.Provider value={{ size: \"1.3em\", className: \"icon\" }}>\n                            <div>\n                                <FaServer />\n                            </div>\n                        </IconContext.Provider>\n                        <span>Feed</span>\n                    </li>\n                    <li className=\"Explore\">\n                        <IconContext.Provider value={{ size: \"1.3em\", className: \"icon\" }}>\n                            <div>\n                                <BsSearch />\n                            </div>\n                        </IconContext.Provider>\n                        <span>Explore</span>\n                    </li>\n                    <li className=\"notofications\">\n                        <IconContext.Provider value={{ size: \"1.3em\", className: \"icon\" }}>\n                            <div>\n                                <BsBellFill />\n                            </div>\n                        </IconContext.Provider>\n                        <span>Notifications</span>\n                    </li>\n                    <li className=\"settings\">\n                        <IconContext.Provider value={{ size: \"1.3em\", className: \"icon\" }}>\n                            <div>\n                                <FiSettings />\n                            </div>\n                        </IconContext.Provider>\n                        <span>Settings</span>\n                    </li>\n\n\n                    <div className=\"break\"> </div>\n\n                    <li className=\"logout\" onClick={handleLogOut}>\n                        <IconContext.Provider value={{ size: \"1.3em\", className: \"icon\" }}>\n                            <div>\n                                <FiLogOut />\n                            </div>\n                        </IconContext.Provider>\n                        <span>Logout</span>\n                    </li>\n                </ul>\n            </section>\n\n            <ToastContainer />\n        </div>\n    )\n};\n\nconst mapDispatchToProps = {\n    LogOut\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(SideMenu));","/Users/mac/Documents/mern stack/photoShare/client/src/components/comment/commentForm/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/components/comment/commentList/index.js",["94"],"import React, { Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport Avatar from '../../../assets/images/Avatar.png'\nimport './style.scss';\n\n\nfunction formatDate(date) {\n    return new Intl.DateTimeFormat().format(new Date(date));\n}\n\n\n\nconst CommentList = ({ commentId, comments, }) => {\n\n    const { text, date, authorId, authorName, authorPicture, } = comments\n    // const { username, dipslayPicture } = a\n    // // eslint-disable-next-line no-unused-vars\n\n    return (\n        <Fragment >\n\n            <div key={commentId} className=\"comment-wrapper\">\n                <img\n                    src={authorPicture ? authorPicture : Avatar}\n                    alt=\"profile\" />\n                <p> {authorName}</p>\n                <p>\n                    {text}\n                    <span>\n                        posted on {formatDate(date)}\n                    </span>\n                </p>\n\n\n\n\n            </div>\n        </Fragment>\n\n\n\n    )\n};\n\nconst mapStateToProps = ({ post, user }) => {\n    return {\n        posts: post.posts,\n        postLoading: post.loading,\n        user: user.currentUser\n\n    }\n}\n\nexport default connect(mapStateToProps)(CommentList);",["95","96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":13,"column":7,"nodeType":"103","messageId":"104","endLine":13,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":25,"column":12,"nodeType":"103","messageId":"104","endLine":25,"endColumn":17},{"ruleId":"101","severity":1,"message":"106","line":31,"column":23,"nodeType":"103","messageId":"104","endLine":31,"endColumn":32},{"ruleId":"101","severity":1,"message":"107","line":31,"column":40,"nodeType":"103","messageId":"104","endLine":31,"endColumn":48},{"ruleId":"101","severity":1,"message":"108","line":15,"column":25,"nodeType":"103","messageId":"104","endLine":15,"endColumn":33},{"ruleId":"97","replacedBy":"109"},{"ruleId":"99","replacedBy":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'channel' is assigned a value but never used.","Identifier","unusedVar","'liked' is assigned a value but never used.","'followers' is assigned a value but never used.","'Fllowing' is assigned a value but never used.","'authorId' is assigned a value but never used.",["111"],["112"],"no-global-assign","no-unsafe-negation"]