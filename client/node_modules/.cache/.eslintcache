[{"/Users/mac/Documents/mern stack/photoShare/client/src/index.js":"1","/Users/mac/Documents/mern stack/photoShare/client/src/App.js":"2","/Users/mac/Documents/mern stack/photoShare/client/src/reportWebVitals.js":"3","/Users/mac/Documents/mern stack/photoShare/client/src/component/auth/LogInForm/LogInForm.js":"4","/Users/mac/Documents/mern stack/photoShare/client/src/screens/LoginScreen/index.js":"5","/Users/mac/Documents/mern stack/photoShare/client/src/screens/SignUpScreen/index.js":"6","/Users/mac/Documents/mern stack/photoShare/client/src/component/auth/SignUpForm/SignUpForm.js":"7","/Users/mac/Documents/mern stack/photoShare/client/src/screens/Error404Screen/index.js":"8","/Users/mac/Documents/mern stack/photoShare/client/src/redux/store.js":"9","/Users/mac/Documents/mern stack/photoShare/client/src/redux/rootReducer.js":"10","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Reducers/userReducer.js":"11","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Constants/userConstants.js":"12","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Actions/userActions.js":"13","/Users/mac/Documents/mern stack/photoShare/client/src/utils.js":"14","/Users/mac/Documents/mern stack/photoShare/client/src/screens/Home/HomeScreen.js":"15","/Users/mac/Documents/mern stack/photoShare/client/src/component/routes.js":"16","/Users/mac/Documents/mern stack/photoShare/client/src/screens/Explore/index.js":"17","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Reducers/postReducer.js":"18","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Constants/postConstants.js":"19","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Actions/postActions.js":"20","/Users/mac/Documents/mern stack/photoShare/client/src/component/MobileTabMenu/index.js":"21","/Users/mac/Documents/mern stack/photoShare/client/src/component/Explorepostcard/PostCard.js":"22","/Users/mac/Documents/mern stack/photoShare/client/src/component/Loader/index.js":"23","/Users/mac/Documents/mern stack/photoShare/client/src/component/SearchBox/SearchBox.js":"24","/Users/mac/Documents/mern stack/photoShare/client/src/screens/PostPage/index.js":"25","/Users/mac/Documents/mern stack/photoShare/client/src/component/ErrorBounday/index.js":"26","/Users/mac/Documents/mern stack/photoShare/client/src/component/MenuButtons/index.js":"27","/Users/mac/Documents/mern stack/photoShare/client/src/component/ProfileIcon/index.js":"28","/Users/mac/Documents/mern stack/photoShare/client/src/component/NavigationHeader/index.js":"29","/Users/mac/Documents/mern stack/photoShare/client/src/component/SideBar/index.js":"30","/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/index.js":"31","/Users/mac/Documents/mern stack/photoShare/client/src/component/SuggestionsFollow/index.js":"32","/Users/mac/Documents/mern stack/photoShare/client/src/component/Profile/index.js":"33","/Users/mac/Documents/mern stack/photoShare/client/src/component/Footer/index.js":"34","/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/Card/index.js":"35","/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/CardMenu/index.js":"36","/Users/mac/Documents/mern stack/photoShare/client/src/component/CommentList/index.js":"37","/Users/mac/Documents/mern stack/photoShare/client/src/services/socketService.js":"38","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Socket/socketReducer.js":"39","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Socket/socketTypes.js":"40","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Socket/socketActions.js":"41","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Helpers.js":"42","/Users/mac/Documents/mern stack/photoShare/client/src/component/ExplorePostCardMenu/index.js":"43","/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedReducer.js":"44","/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedTypes.js":"45","/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedAction.js":"46","/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostButton/index.js":"47","/Users/mac/Documents/mern stack/photoShare/client/src/screens/NewPost/index.js":"48","/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPost.js":"49","/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostModal/index.js":"50","/Users/mac/Documents/mern stack/photoShare/client/src/redux/modal/modalReducer.js":"51","/Users/mac/Documents/mern stack/photoShare/client/src/redux/modal/modalTypes.js":"52","/Users/mac/Documents/mern stack/photoShare/client/src/redux/modal/modalActions.js":"53","/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/Actions.js":"54","/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/ActionTypes.js":"55","/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/suggestedUsersReducer.js":"56","/Users/mac/Documents/mern stack/photoShare/client/src/component/FollowButton/index.js":"57","/Users/mac/Documents/mern stack/photoShare/client/src/screens/ProfilePage/index.js":"58","/Users/mac/Documents/mern stack/photoShare/client/src/component/changePasswordForm/index.js":"59","/Users/mac/Documents/mern stack/photoShare/client/src/component/EditProfileForm/index.js":"60","/Users/mac/Documents/mern stack/photoShare/client/src/screens/SettingsScreen/index.js":"61","/Users/mac/Documents/mern stack/photoShare/client/src/component/Divider/index.js":"62","/Users/mac/Documents/mern stack/photoShare/client/src/component/UsersPopUpCard/PopUpCard.js":"63"},{"size":518,"mtime":1616586102314,"results":"64","hashOfConfig":"65"},{"size":2877,"mtime":1616684568902,"results":"66","hashOfConfig":"65"},{"size":362,"mtime":1613936790572,"results":"67","hashOfConfig":"65"},{"size":3614,"mtime":1616586102314,"results":"68","hashOfConfig":"65"},{"size":456,"mtime":1616586102314,"results":"69","hashOfConfig":"65"},{"size":396,"mtime":1616586102314,"results":"70","hashOfConfig":"65"},{"size":4080,"mtime":1616687456514,"results":"71","hashOfConfig":"65"},{"size":711,"mtime":1616586102314,"results":"72","hashOfConfig":"65"},{"size":376,"mtime":1616586102314,"results":"73","hashOfConfig":"65"},{"size":588,"mtime":1616586102314,"results":"74","hashOfConfig":"65"},{"size":2045,"mtime":1614466454462,"results":"75","hashOfConfig":"65"},{"size":318,"mtime":1616586102314,"results":"76","hashOfConfig":"65"},{"size":3275,"mtime":1616586102314,"results":"77","hashOfConfig":"65"},{"size":215,"mtime":1616586102315,"results":"78","hashOfConfig":"65"},{"size":1793,"mtime":1616617336956,"results":"79","hashOfConfig":"65"},{"size":399,"mtime":1616586102314,"results":"80","hashOfConfig":"65"},{"size":1685,"mtime":1616709817851,"results":"81","hashOfConfig":"65"},{"size":2588,"mtime":1615829382670,"results":"82","hashOfConfig":"65"},{"size":992,"mtime":1616586102314,"results":"83","hashOfConfig":"65"},{"size":7566,"mtime":1616586102314,"results":"84","hashOfConfig":"65"},{"size":1148,"mtime":1616622009014,"results":"85","hashOfConfig":"65"},{"size":613,"mtime":1616586102313,"results":"86","hashOfConfig":"65"},{"size":280,"mtime":1616586102313,"results":"87","hashOfConfig":"65"},{"size":3007,"mtime":1616688895728,"results":"88","hashOfConfig":"65"},{"size":5294,"mtime":1616586620920,"results":"89","hashOfConfig":"65"},{"size":410,"mtime":1616586102313,"results":"90","hashOfConfig":"65"},{"size":928,"mtime":1616682434474,"results":"91","hashOfConfig":"65"},{"size":775,"mtime":1616586102313,"results":"92","hashOfConfig":"65"},{"size":709,"mtime":1616616818530,"results":"93","hashOfConfig":"65"},{"size":1049,"mtime":1616586102313,"results":"94","hashOfConfig":"65"},{"size":1751,"mtime":1616620884816,"results":"95","hashOfConfig":"65"},{"size":1474,"mtime":1616586102313,"results":"96","hashOfConfig":"65"},{"size":940,"mtime":1616586102313,"results":"97","hashOfConfig":"65"},{"size":582,"mtime":1616586102313,"results":"98","hashOfConfig":"65"},{"size":3921,"mtime":1616618949920,"results":"99","hashOfConfig":"65"},{"size":464,"mtime":1616586102313,"results":"100","hashOfConfig":"65"},{"size":1695,"mtime":1616618428412,"results":"101","hashOfConfig":"65"},{"size":203,"mtime":1616586102315,"results":"102","hashOfConfig":"65"},{"size":579,"mtime":1615001366426,"results":"103","hashOfConfig":"65"},{"size":132,"mtime":1616586102314,"results":"104","hashOfConfig":"65"},{"size":281,"mtime":1616586102314,"results":"105","hashOfConfig":"65"},{"size":188,"mtime":1616586102314,"results":"106","hashOfConfig":"65"},{"size":1256,"mtime":1616586102313,"results":"107","hashOfConfig":"65"},{"size":1578,"mtime":1615759154466,"results":"108","hashOfConfig":"65"},{"size":226,"mtime":1616586102314,"results":"109","hashOfConfig":"65"},{"size":1146,"mtime":1616586102314,"results":"110","hashOfConfig":"65"},{"size":1078,"mtime":1616586102313,"results":"111","hashOfConfig":"65"},{"size":608,"mtime":1616586102314,"results":"112","hashOfConfig":"65"},{"size":199,"mtime":1616586102314,"results":"113","hashOfConfig":"65"},{"size":2898,"mtime":1616586102313,"results":"114","hashOfConfig":"65"},{"size":515,"mtime":1615816122978,"results":"115","hashOfConfig":"65"},{"size":108,"mtime":1616586102314,"results":"116","hashOfConfig":"65"},{"size":232,"mtime":1616586102314,"results":"117","hashOfConfig":"65"},{"size":777,"mtime":1616586102314,"results":"118","hashOfConfig":"65"},{"size":167,"mtime":1616586102314,"results":"119","hashOfConfig":"65"},{"size":574,"mtime":1615896189155,"results":"120","hashOfConfig":"65"},{"size":2485,"mtime":1616586102313,"results":"121","hashOfConfig":"65"},{"size":3940,"mtime":1616683909290,"results":"122","hashOfConfig":"65"},{"size":2137,"mtime":1616614089804,"results":"123","hashOfConfig":"65"},{"size":3975,"mtime":1616623545421,"results":"124","hashOfConfig":"65"},{"size":1916,"mtime":1616614346690,"results":"125","hashOfConfig":"65"},{"size":284,"mtime":1616620256907,"results":"126","hashOfConfig":"65"},{"size":482,"mtime":1616686231025,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1dtynal",{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"130"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"130"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"130"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"130"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"130"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"130"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"130"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"130"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Documents/mern stack/photoShare/client/src/index.js",[],["279","280"],"/Users/mac/Documents/mern stack/photoShare/client/src/App.js",["281","282","283"],"/Users/mac/Documents/mern stack/photoShare/client/src/reportWebVitals.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/auth/LogInForm/LogInForm.js",["284"],"import React, { useState } from 'react';\nimport './style.scss';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signin, loaduser } from '../../../redux/Actions/userActions';\n// import { Formik } from 'formik';\nimport { useFormik } from 'formik';\nimport { AiOutlineLock, AiOutlineMail } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\n// import cogoToast from 'cogo-toast';\n\n// Routes\nimport * as Routes from '../../routes';\n\nimport { useHistory } from 'react-router-dom';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().required('please provide a valid email'),\n  password: Yup.string().required(`password can't be empty`),\n});\n\nconst LogInForm = ({ signin }) => {\n  const history = useHistory();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleFormSubmit = async (values) => {\n    try {\n      setIsSubmitting(true);\n      await signin(values, history);\n      setIsSubmitting(false);\n      // history.push(Routes.Dashboard);\n    } catch (error) {\n      console.log(error.message);\n      values.email = '';\n      values.password = '';\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: handleFormSubmit,\n  });\n\n  const { values, errors, handleChange, handleSubmit } = formik;\n  return (\n    <div>\n      {/* <h1 className=\"logo\">Photogram</h1> */}\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <h2> Log in</h2>\n        <div>\n          <div className=\"email-container\">\n            <IconContext.Provider value={{ className: 'react-icons' }}>\n              <AiOutlineMail />\n            </IconContext.Provider>\n            <input\n              className=\"email-input\"\n              type=\"email\"\n              name=\"email\"\n              value={formik.values.email}\n              onChange={handleChange}\n              placeholder=\"email\"\n            />\n          </div>\n          {errors.email && (\n            <small className=\"error\" style={{ color: 'red', opacity: 0.7 }}>\n              {' '}\n              {errors.email}\n            </small>\n          )}\n        </div>\n        <div>\n          <div className=\"password-container\">\n            <IconContext.Provider value={{ className: 'react-icons' }}>\n              <AiOutlineLock />\n            </IconContext.Provider>\n            <input\n              className=\"password-input\"\n              type=\"password\"\n              name=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              placeholder=\"password\"\n            />\n          </div>\n          {errors.password && (\n            <small className=\"error\" style={{ color: 'red', opacity: 0.7 }}>\n              {' '}\n              {errors.password}\n            </small>\n          )}\n        </div>\n        <Link className=\"password-reset-link reset-password\" to=\"/accounts/password/reset\">\n          Forgot your password?{' '}\n        </Link>\n\n        <button type=\"submit\" className=\"submit-btn\" disabled={isSubmitting ? true : false}>\n          {isSubmitting ? 'Signing in..' : 'Log in'}\n        </button>\n      </form>\n      <p>\n        {' '}\n        Don't have an account?{' '}\n        <Link className=\"password-reset-link\" to=\"/accounts/signup\">\n          {' '}\n          Sign up\n        </Link>\n      </p>\n    </div>\n  );\n};\nconst mapStateToProps = ({ user }) => {\n  return {\n    loadUserErrorr: user.authError.loadUserError,\n  };\n};\nexport default connect(mapStateToProps, { signin, loaduser })(LogInForm);\n","/Users/mac/Documents/mern stack/photoShare/client/src/screens/LoginScreen/index.js",["285"],"import React, { useState } from 'react';\nimport LogInForm from '../../component/auth/LogInForm/LogInForm';\nimport './style.scss';\n\nimport people from '../../assets/OBJECTS.png';\nconst LoginScreen = () => {\n  return (\n    <div className=\"login-screen\">\n      <div className=\"svg\">\n        <img src={people} alt=\"people\" />\n        <p> Share images and videos with Friends</p>\n      </div>\n      <LogInForm />\n    </div>\n  );\n};\n\nexport default LoginScreen;\n","/Users/mac/Documents/mern stack/photoShare/client/src/screens/SignUpScreen/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/auth/SignUpForm/SignUpForm.js",["286","287"],"/Users/mac/Documents/mern stack/photoShare/client/src/screens/Error404Screen/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/store.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/rootReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Reducers/userReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Constants/userConstants.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Actions/userActions.js",["288","289"],"import { userActionTypes } from '../Constants/userConstants';\nimport { setToken } from '../../utils';\nimport { Redirect } from 'react-router-dom';\n\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport * as Routes from '../../component/routes';\n\nconst baseUrl = process.env.REACT_APP_BASE_URL || 'http://localhost:9000';\n\nexport const signup = (data, history) => {\n  return async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      cogoToast.loading('Registering....');\n      const response = await axios.post(`/api/route/user/register`, config, data);\n      if (response) {\n        await dispatch({ type: userActionTypes.SIGN_UP_SUCESS, payload: response.data });\n        cogoToast.success('Register successfully');\n        history.push('/');\n      }\n    } catch (error) {\n      console.log(error.message);\n      if (error.response) {\n        await dispatch({ type: userActionTypes.SIGN_UP_FAIL, payload: error.response.data });\n        cogoToast.error(`${error.response.data.msg}`);\n      }\n    }\n  };\n};\n\nexport const signin = (data, history) => {\n  return async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const response = await axios.post(`/api/route/user/login`, data, config);\n      if (response) {\n        await dispatch({ type: userActionTypes.LOG_IN_SUCCESS, payload: response.data });\n        await localStorage.setItem('authToken', response.data.jwtToken);\n        await cogoToast.success('sign in success', { position: 'bottom-right' });\n        history.push(Routes.Dashboard);\n      }\n    } catch (error) {\n      if (error.response) {\n        await dispatch({ type: userActionTypes.LOG_IN_FAIL, payload: error.response.data });\n        cogoToast.error(`${error.response.data.msg}`);\n      }\n    }\n  };\n};\n\nexport const loaduser = (history) => {\n  return async (dispatch) => {\n    const token = localStorage.getItem('authToken');\n\n    try {\n      if (token) {\n        setToken(token);\n      }\n      const response = await axios.get('/api/route/user/getUser');\n      if (response) {\n        await dispatch({ type: userActionTypes.LOAD_USER_SUCCESS, payload: response.data.user[0] });\n      }\n    } catch (error) {\n      if (error.response) {\n        await dispatch({ type: userActionTypes.LOAD_USER_FAIL, payload: error.response.data });\n        cogoToast.warn(`${error.response.data.msg}`, { position: 'top-right' });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          history.push('/');\n          localStorage.removeItem('authToken');\n          cogoToast.info('session expired');\n        }\n      }\n    }\n  };\n};\n\nexport const LogOut = (history) => {\n  return async (dispatch) => {\n    try {\n      await localStorage.removeItem('authToken');\n      dispatch({ type: userActionTypes.LOG_OUT_SUCCESS, payload: 'sign out sucessful' });\n      history.push(Routes.Login);\n      cogoToast.success('Sign out success');\n    } catch (error) {\n      console.log(error.message);\n      dispatch({ type: userActionTypes.LOG_OUT_FAIL, payload: error.message });\n    }\n  };\n};\n","/Users/mac/Documents/mern stack/photoShare/client/src/utils.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/screens/Home/HomeScreen.js",["290","291","292"],"import React, { useEffect } from 'react';\nimport './style.scss';\n\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { loaduser } from '../../redux/Actions/userActions';\nimport { retrieveFeedPosts } from '../../redux/Actions/postActions';\nimport { retrieveFeedPostsStart } from '../../redux/feed/feedAction';\n\n// import Header from '../../component/Header';\n\nimport Menu from '../../component/MenuButtons';\nimport NavigationHeader from '../../component/NavigationHeader';\nimport SideBar from '../../component/SideBar';\nimport Cards from '../../component/Cards';\nimport Loader from '../../component/Loader';\n\nconst token = localStorage.getItem('authToken');\n\nconst HomeScreen = ({\n  loaduser,\n  currentUser,\n  retrieveFeedPosts,\n  retrieveFeedPostsStart,\n  posts,\n}) => {\n  const [isFetching, setIsFetching] = React.useState(true);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    let subscribe = true;\n    const retrivefeed = async () => {\n      await retrieveFeedPostsStart(history);\n      setIsFetching(false);\n    };\n    if (subscribe) {\n      retrivefeed();\n    }\n    return () => (subscribe = null);\n  }, [retrieveFeedPostsStart]);\n\n  if (!posts && isFetching === true) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"homeScreen\">\n      {/*  the navigation Header */}\n      <NavigationHeader />\n\n      {/* main */}\n      <main>\n        <div className=\"container\">\n          <Cards isFetching={isFetching} />\n          <SideBar />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user, post, feed }) => {\n  return {\n    currentUser: user.currentUser,\n    posts: feed.posts,\n  };\n};\n\nexport default connect(mapStateToProps, { loaduser, retrieveFeedPosts, retrieveFeedPostsStart })(\n  HomeScreen,\n);\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/routes.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/screens/Explore/index.js",["293","294","295","296"],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Reducers/postReducer.js",["297"],"import * as postActionTypes from '../Constants/postConstants'\nimport { updateComment } from '../Helpers';\nconst initState = {\n    isLoading: true,\n    post: null,\n    posts: null,\n    myposts: [],\n    feeds: null,\n    error: {\n        getError: '',\n        postError: '',\n        commentError: '',\n        likeError: '',\n        deleteCommentError: '',\n        createPostError: '',\n    }\n};\n\n\nconst postReducer = (state = initState, { type, payload }) => {\n\n    switch (type) {\n\n        case postActionTypes.GET_POSTS_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                posts: payload\n            }\n        case postActionTypes.GET_POSTS_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    getError: payload\n                }\n            };\n\n        case postActionTypes.LIKE_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: {\n                    ...state.post,\n                    likes: payload.likes\n                }\n            }\n        case postActionTypes.LIKE_POST_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    likeError: payload\n                }\n            }\n        case postActionTypes.COMMENT_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: {\n                    ...state.post,\n                    comments: payload.comments\n                }\n            }\n        case postActionTypes.COMMENT_POST_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    commentError: payload\n                }\n            }\n\n        case postActionTypes.DELETE_COMMENT_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: {\n                    ...state.post,\n                    comments: payload.comments\n                },\n\n\n            }\n\n        case postActionTypes.DELETE_COMMENT_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                deleteCommentError: payload\n            }\n\n\n        case postActionTypes.GET_SINGLE_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: payload\n            }\n\n\n        default:\n            return state;\n\n\n    }\n};\n\nexport default postReducer;","/Users/mac/Documents/mern stack/photoShare/client/src/redux/Constants/postConstants.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Actions/postActions.js",["298","299","300"],"import * as postActionTypes from '../Constants/postConstants';\nimport { setToken } from '../../utils';\n\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport * as Routes from '../../component/routes';\n\nconst token = localStorage.getItem('authToken');\n\nconst baseUrl = process.env.REACT_APP_BASE_URL || 'http://localhost:9000';\n\n// @create post\n\nexport const createPostFunc = (data, history) => {\n  const token = localStorage.getItem('authToken');\n  return async (dispatch) => {\n    try {\n      if (token) {\n        await setToken(token);\n      }\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n      cogoToast.loading('posting');\n      const response = await axios.post('/api/route/post/createPost', data, config);\n      if (response) {\n        await dispatch({ type: postActionTypes.CREATE_POST_SUCCESS, payload: response.data.msg });\n        cogoToast.success('post created');\n      }\n    } catch (error) {\n      if (error.response) {\n        cogoToast.error(`${error.response.data.msg}`);\n        await dispatch({ type: postActionTypes.CREATE_POST_FAIL, payload: error.response.data });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          history.push('/');\n          localStorage.removeItem('authToken');\n          cogoToast.info('session expired');\n        }\n      }\n    }\n  };\n};\n\n//  load explore posts\nexport const getPosts = (history) => {\n  return async (dispatch) => {\n    const token = localStorage.getItem('authToken');\n    try {\n      if (token) {\n        await setToken(token);\n      }\n\n      const response = await axios.get(`/api/route/post/retrieveExplorePost`);\n      if (response) {\n        dispatch({ type: postActionTypes.GET_POSTS_SUCCESS, payload: response.data.posts });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        await dispatch({ type: postActionTypes.GET_POSTS_FAIL, payload: error.response.data });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          localStorage.removeItem('authToken');\n          history.push('/');\n        }\n        // cogoToast.error(`${error.response.data.msg}`, { position: \"top-right\" })\n      }\n    }\n  };\n};\n\n//  @comment on a post with a given post id passed as a param to the url\nexport const commentPost = (postId, commentText, socket, history) => {\n  return async (dispatch) => {\n    if (token) {\n      await setToken(token);\n    }\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const response = await axios.post(`/api/route/post/comment/${postId}`, { commentText });\n      if (response) {\n        dispatch({ type: postActionTypes.COMMENT_POST_SUCCESS, payload: response.data.data });\n        console.log(response.data.data);\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        await dispatch({\n          type: postActionTypes.COMMENT_POST_FAIL,\n          payload: error.response.data.msg,\n        });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          localStorage.removeItem('authToken');\n          history.push('/');\n        }\n        // cogoToast.error(`${error.response.data.msg}`, { position: \"top-right\" })\n      }\n    }\n  };\n};\n\n// @delete a commment\n\nexport const deleteComment = (postid, commentid, history) => async (dispatch) => {\n  try {\n    if (token) {\n      await setToken(token);\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const response = await axios.put(\n      `/api/route/post/deleteComment/${postid}/${commentid}`,\n      config,\n    );\n    if (response) {\n      console.log(response.data);\n      dispatch({ type: postActionTypes.DELETE_COMMENT_SUCCESS, payload: response.data.data });\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      await dispatch({\n        type: postActionTypes.DELETE_COMMENT_FAIL,\n        payload: error.response.data.msg,\n      });\n      if (\n        error.response.data.msg === 'jwt expired' ||\n        error.response.data.msg === `you're not authorised`\n      ) {\n        localStorage.removeItem('authToken');\n        history.push('/');\n      }\n    }\n  }\n};\n\nexport const getSinglePost = (postId, history) => {\n  return async (dispatch) => {\n    if (token) {\n      await setToken(token);\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const response = await axios.get(`/api/route/post/singlePost/${postId}`, config);\n      if (response) {\n        dispatch({ type: postActionTypes.GET_SINGLE_POST_SUCCESS, payload: response.data.post[0] });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        await dispatch({\n          type: postActionTypes.GET_SINGLE_POST_FAIL,\n          payload: error.response.data.msg,\n        });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          localStorage.removeItem('authToken');\n          history.push('/');\n        }\n      }\n    }\n  };\n};\n\n//  like & unlike  a post\n\nexport const likePost = (postId, socket, history) => {\n  return async (dispatch) => {\n    const token = localStorage.getItem('authToken');\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    if (token) {\n      await setToken(token);\n    }\n    try {\n      const response = await axios.put(`/api/route/post/likePost/${postId}`, config);\n      if (response) {\n        dispatch({ type: postActionTypes.LIKE_POST_SUCCESS, payload: response.data.data });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        await dispatch({ type: postActionTypes.LIKE_POST_FAIL, payload: error.response.data.msg });\n        cogoToast.info(`${error.response.data.msg}`, { position: 'top-center' });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          localStorage.removeItem('authToken');\n          history.push('/');\n        }\n      }\n    }\n  };\n};\n\n//  load feed posts\n\nexport const retrieveFeedPosts = (history) => async (dispatch) => {\n  const token = localStorage.getItem('authToken');\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  if (token) {\n    await setToken(token);\n  }\n  try {\n    const response = await axios.get(`api/route/post/retrieveFeedPosts`, config);\n    if (response) {\n      console.log(response.data);\n      dispatch({ type: postActionTypes.GET_FEEDS_SUCCESS, payload: response.data.posts });\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      await dispatch({ type: postActionTypes.GET_FEEDS_FAIL, payload: error.response.data.msg });\n      cogoToast.info(`${error.response.data.msg}`, { position: 'top-center' });\n      if (\n        error.response.data.msg === 'jwt expired' ||\n        error.response.data.msg === `you're not authorised`\n      ) {\n        history.push('/');\n        localStorage.removeItem('authToken');\n      }\n    }\n  }\n};\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/MobileTabMenu/index.js",["301","302"],"import React from 'react';\nimport './style.scss';\nimport * as Icon from 'react-feather';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport * as Routes from '../routes';\nimport NewPostButton from '../NewPost/NewPostButton'\n\n\nconst MobileTabMenu = ({ user }) => {\n  const history = useHistory();\n  // console.log(history);\n  const { location } = history;\n  return (\n    <nav className=\"mobile__nav\">\n      <Link to={Routes.Dashboard}>\n        <Icon.Home size={26} />\n      </Link>\n      <Link to={Routes.Explore}>\n        <Icon.Search className=\"icon__search\" size={26} />\n      </Link>\n\n      <NewPostButton />\n\n\n      <Icon.Heart className=\"icon__heart\" fill={'black'} size={26} />\n\n      {user && user.avatar && (\n        <Link to={Routes.ProfilePage + `/${user.username}`}>\n          <img src={user.avatar} alt=\"avatar\" width=\"26px\" height=\"26px\" />\n        </Link>\n      )}\n    </nav>\n  );\n};\n\nconst mapStateTOProps = ({ user }) => ({\n  user: user.currentUser,\n});\nexport default connect(mapStateTOProps)(MobileTabMenu);\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/Explorepostcard/PostCard.js",["303","304"],"import React from 'react';\nimport styled from 'styled-components';\nimport * as Icon from 'react-feather';\n\nimport { useHistory, Link } from 'react-router-dom';\nimport * as Routes from '../../component/routes';\n\nconst Media = styled.embed`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 2px;\n`;\n\nfunction PostCard({ post }) {\n  const history = useHistory();\n  return (\n    <React.Fragment>\n      <Media\n        alt=\"\"\n        src={post.postMedia}\n        onClick={() => history.push(Routes.PostPage + `/${post._id}`, { post })}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default PostCard;\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/Loader/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/SearchBox/SearchBox.js",["305"],"/Users/mac/Documents/mern stack/photoShare/client/src/screens/PostPage/index.js",["306","307","308","309","310","311"],"import React, { useRef, useState, useEffect, useCallback } from 'react';\n\nimport './style.scss';\nimport { useHistory, useParams, withRouter } from 'react-router-dom';\n\n// componnets\nimport NavigationHeader from '../../component/NavigationHeader';\nimport CommentList from '../../component/CommentList';\nimport Profile from '../../component/Profile';\nimport ExploreCardMenu from '../../component/ExplorePostCardMenu';\nimport MobileTabMenu from '../../component/MobileTabMenu';\nimport Card from '../../component/Cards/Card';\n\n// external liberires\nimport * as Icon from 'react-feather';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\n// redux imports\nimport { commentPost, getPosts, getSinglePost, likePost } from '../../redux/Actions/postActions';\nimport { connect } from 'react-redux';\n\nfunction PostPage({ commentPost, socket, user, userpost, getSinglePost, history, likePost }) {\n  //    get postId from params\n  const { postId } = useParams();\n\n  //  states\n  const [commentText, setCommentText] = React.useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  // const [isLikedButtonClicked, setIsLikedButtonClicked] = useState(false)\n  const inputRef = useRef();\n\n  const focus = () => {\n    inputRef.current.focus();\n  };\n\n  useEffect(() => {\n    let subscribe = true;\n    if (subscribe) {\n      (async function () {\n        try {\n          await getSinglePost(postId, history);\n          await setIsLoading(false);\n        } catch (error) {\n          console.log(error.message);\n        }\n      }())\n\n    }\n    return () => (subscribe = null);\n  }, [getSinglePost, postId]);\n\n  //  @ functions  all functions defined here\n\n  const likeFunc = async () => {\n    try {\n      await likePost(userpost._id, socket, history);\n      // setIsLikedButtonClicked(true)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleCommentPost = async (event) => {\n    event.preventDefault();\n    console.info('submitting btn');\n    try {\n      await commentPost(userpost._id, commentText, history);\n      setCommentText('');\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  // const { location: { pathname, state } } = history;\n\n  const handleCommentTextChange = (e) => {\n    setCommentText(e.target.value);\n  };\n\n  if (isLoading && !userpost) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div className=\"post-page\">\n      <header>\n        <NavigationHeader />\n      </header>\n\n      <main>\n        <div className=\"post_content\">\n          <div className=\"post_image\">\n            <img src={userpost.postMedia} alt=\"image\" />\n          </div>\n          <div className=\"post_details\">\n            <div className=\"profile\">\n              <Profile\n                image={userpost.author.avatar}\n                iconSize=\"medium\"\n                username={userpost.author.username}\n              />\n              <Icon.MoreHorizontal className=\"more-icon\" size={26} />\n            </div>\n\n            {/* comment section */}\n            <div className=\"comment-section\">\n              {userpost.comments &&\n                userpost.comments.map((comment) => (\n                  <CommentList\n                    key={uuidv4()}\n                    commentId={comment._id}\n                    commentuser={comment._user}\n                    commentText={comment.commentText}\n                    userpost={userpost}\n                    accountName={comment.username}\n                    comment={comment.commentText}\n                    commentImage={comment.avatar}\n                    commentTime={comment.commentDate}\n                  />\n                ))}\n            </div>\n\n            {/* icons*/}\n            <div className=\"card_icon_menu\">\n              <div className=\"card-menu\">\n                <ExploreCardMenu\n                  userpost={userpost}\n                  focus={focus}\n                  likeFunc={likeFunc}\n                // isLiked={isLikedButtonClicked}\n                />\n              </div>\n              {!userpost.likes ? (\n                <small className=\"like-title\">\n                  {' '}\n                  Be the first to <b>like this</b>\n                </small>\n              ) : (\n                <small>{userpost.likes.length} Likes</small>\n              )}\n\n              <small className=\"post-date\">{moment(userpost.date).format('MMM D')}</small>\n            </div>\n\n            {/*  add a comment form */}\n            <form className=\"addComment\" onSubmit={handleCommentPost}>\n              <input\n                ref={inputRef}\n                value={commentText}\n                onChange={handleCommentTextChange}\n                type=\"text\"\n                placeholder=\"Add a comment...\"\n                className=\"commentText\"\n                name=\"commentText\"\n              />\n              <button disabled={commentText ? false : true} type=\"submit\" className=\"postText-btn\">\n                Post\n              </button>\n            </form>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\nconst mapStateToProps = ({ socket, post, user }) => {\n  return {\n    socket: socket.socket,\n    userpost: post.post,\n    user: user.currentUser,\n  };\n};\nexport default connect(mapStateToProps, { commentPost, getPosts, getSinglePost, likePost })(\n  withRouter(PostPage),\n);\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/ErrorBounday/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/MenuButtons/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/ProfileIcon/index.js",["312"],"import React from 'react';\nimport Avatar from '../../assets/default-avatar.png';\nimport { connect } from 'react-redux';\nimport './style.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport * as Routes from '../routes';\n\nconst ProfileIcon = ({ user, iconSize, storyBorder, image, authorUsername }) => {\n  const history = useHistory();\n  return (\n    <div className={storyBorder ? 'storyBorder' : 'profileIcon'}>\n      <img\n        src={image ? image : Avatar}\n        className={`profileIcon ${iconSize}`}\n        alt=\"\"\n        onClick={() => history.push(Routes.ProfilePage + `/${authorUsername}`)}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user }) => ({\n  user: user.currentUser,\n});\n\nexport default connect(mapStateToProps, null)(ProfileIcon);\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/NavigationHeader/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/SideBar/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/SuggestionsFollow/index.js",["313","314"],"import React, { useEffect } from 'react';\nimport './style.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Profile from '../Profile';\nimport axios from 'axios';\n\nimport { getSuggestedUser } from '../../redux/SuggestedUsers/Actions';\nimport FollowButton from '../FollowButton';\n\nconst Suggestions = () => {\n  const dispatch = useDispatch();\n  const suggestedUsers = useSelector(({ suggestedUsers }) => suggestedUsers.suggestedUsers);\n\n  useEffect(() => {\n    dispatch(getSuggestedUser());\n  }, []);\n\n  if (!suggestedUsers) {\n    return <p> Loading...</p>;\n  }\n  return (\n    <div className=\"suggestions\">\n      <div className=\"titleContainer\">\n        <div className=\"title\">Suggestions For You</div>\n        <a href=\"/\">See All</a>\n      </div>\n\n      {suggestedUsers &&\n        suggestedUsers.map((user) => {\n          return (\n            <div key={user._id} style={{ display: 'flex', width: '100%' }}>\n              <Profile\n                key={user._id}\n                accountName={user.name}\n                caption={user.username}\n                userId={user._id}\n                urlText=\"Follow\"\n                iconSize=\"medium\"\n                captionSize=\"small\"\n                storyBorder={true}\n                image={user.avatar}\n                authorUsername={user.username}\n              />\n\n              <FollowButton userId={user._id} />\n            </div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Suggestions;\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/Profile/index.js",["315","316","317","318"],"import React from 'react';\nimport './style.scss';\nimport ProfileIcon from '../ProfileIcon';\nimport './style.scss';\n\nimport Avatar from '../../assets/default-avatar.png';\n\nconst Profile = (props) => {\n  const {\n    username,\n    caption,\n    urlText,\n    userId,\n    authorUsername,\n    iconSize,\n    captionSize,\n    storyBorder,\n    hideAccountName,\n    image,\n  } = props;\n\n  let accountName = username ? username : null;\n\n  return (\n    <div className=\"profile\">\n      <ProfileIcon\n        iconSize={iconSize}\n        storyBorder={storyBorder}\n        image={image}\n        iconSize=\"medium\"\n        authorUsername={authorUsername}\n      />\n      {(accountName || caption) && !hideAccountName && (\n        <div className=\"textContainer\">\n          <span className=\"accountName\">{accountName}</span>\n          <span className={`caption ${captionSize}`}>{caption}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/Footer/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/Card/index.js",["319","320","321","322","323","324","325"],"import React, { useState, useRef } from 'react';\nimport './style.scss';\nimport { ReactComponent as CardButton } from '../../../assets/cardButton.svg';\nimport CardMenu from '../CardMenu';\nimport CommentList from '../../CommentList';\nimport Profile from '../../Profile';\nimport moment from 'moment';\nimport dayjs from 'dayjs';\nimport ExploreCardMenu from '../../ExplorePostCardMenu';\nimport { commentPost } from '../../../redux/Actions/postActions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { likePost } from '../../../redux/Actions/postActions';\nimport Loader from '../../Loader'\nfunction Card(props) {\n  const [commentText, setCommentText] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n\n  const {\n    storyBorder,\n    feed,\n    image,\n    comments,\n    likedByText,\n    likedByNumber,\n    accountName,\n    avatar,\n    hours,\n  } = props;\n\n  React.useEffect(() => {\n    return () => null;\n  });\n  const handlePost = async (e) => {\n    e.preventDefault();\n    try {\n      setIsSubmitting(true)\n      await dispatch(commentPost(feed._id, commentText, history));\n      setCommentText('');\n      setIsSubmitting(false)\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  const likeFunc = async () => {\n    try {\n      await dispatch(likePost(feed._id, history));\n      // setIsLikedButtonClicked(true)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const focus = () => {\n    inputRef.current.focus();\n  };\n  return (\n    <div className=\"card\">\n      <header>\n        <Profile\n          iconSize=\"medium\"\n          image={avatar}\n          authorUsername={feed.author.username}\n          username={accountName}\n          storyBorder={storyBorder}\n        />\n        <CardButton className=\"cardButton\" />\n      </header>\n      <img className=\"cardImage\" src={image} alt=\"card content\" />\n      {/*  <CardMenu /> */} <ExploreCardMenu focus={focus} likeFunc={likeFunc} userpost={feed} />\n      <div className=\"likedBy\">\n        {/*  <Profile iconSize=\"small\" hideAccountName={true} /> */}\n        {/*  <span>\n                    Liked by <strong>{likedByText}</strong> and{\" \"}\n                    <strong>{likedByNumber} others</strong>\n                </span> */}\n        {!feed.likes ? (\n          <span className=\"like-title\">\n            {' '}\n            Be the first to <b>like this</b>\n          </span>\n        ) : (\n          <span>{feed.likes.length} Likes</span>\n        )}\n      </div>\n      <div className=\"comments\">\n        {comments &&\n          comments.map((comment) => {\n            return (\n              <CommentList\n                key={comment._id}\n                accountName={comment.user}\n                comment={comment}\n                commentId={comment._id}\n                commentuser={comment._user}\n                commentText={comment.commentText}\n                userpost={feed}\n                accountName={comment.username}\n                comment={comment.commentText}\n                commentImage={comment.avatar}\n                commentTime={comment.commentDate}\n              />\n            );\n          })}\n      </div>\n      <div className=\"timePosted\">{moment(feed.date).fromNow()} </div>\n      <form onSubmit={handlePost} className=\"addComment\">\n        <input\n          ref={inputRef}\n          value={commentText}\n          onChange={(e) => setCommentText(e.target.value)}\n          type=\"text\"\n          placeholder=\"Add a comment...\"\n          className=\"commentText\"\n        />\n        {isSubmitting && <Loader />}\n        <button\n          type=\"submit\"\n          disabled={commentText ? false : true}\n          className=\"postText-btn\"\n          onSubmit={handlePost}\n        >\n          Post\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Card;\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/CardMenu/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/CommentList/index.js",["326","327","328"],"import React from 'react';\nimport './style.scss';\nimport ProfileIcon from '../ProfileIcon';\nimport moment from 'moment';\nimport * as Icon from 'react-feather';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteComment } from '../../redux/Actions/postActions';\nimport { useHistory } from 'react-router-dom';\nmoment.relativeTimeThreshold('d', 30 * 12);\nmoment.updateLocale('en', {\n  relativeTime: {\n    dd: '%dd',\n  },\n});\n\nconst CommentList = ({\n  accountName,\n  commentuser,\n  commentImage,\n  commentText,\n  commentId,\n  commentTime,\n  userpost,\n}) => {\n  const userData = useSelector(({ user }) => user.currentUser);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteComment(userpost._id, commentId, history));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <React.Fragment>\n      <div className=\"commentContainer\">\n        {commentImage && (\n          <div className=\"profile-icon\">\n            <img\n              src={commentImage ? commentImage : require('../../assets/default-avatar.png')}\n              alt=\"image\"\n              aria-label=\"poster-iamge\"\n            />\n          </div>\n        )}\n        <div className=\"accountName\">{accountName}</div>\n        <div className=\"comment\">{commentText}</div>\n\n        {userData && commentuser == userData._id && (\n          <span onClick={handleDelete} className=\"deletebtn\">\n            <Icon.Trash2 size={13} />\n          </span>\n        )}\n      </div>\n\n      {/* <h3 className=\"comment-time\"> {moment(commentTime).fromNow(true)}</h3> */}\n    </React.Fragment>\n  );\n};\n\nexport default CommentList;\n","/Users/mac/Documents/mern stack/photoShare/client/src/services/socketService.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Socket/socketReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Socket/socketTypes.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Socket/socketActions.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/Helpers.js",["329","330"],"import socketTypes from './Socket/socketTypes';\n\nexport const updateComment = (post, payload) => {\n  const { comments } = post;\n  comments = [payload, ...comments];\n\n  return comments;\n};\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/ExplorePostCardMenu/index.js",["331","332"],"import React, { useEffect } from 'react';\nimport './style.scss';\nimport * as Icon from 'react-feather';\n\nimport { connect } from 'react-redux';\n\nconst ExploreCardMenu = ({ focus, likeFunc, userpost, user }) => {\n  const [isLiked, setIsLiked] = React.useState(undefined);\n\n  useEffect(() => {\n    let sub = true;\n    if (sub) {\n      if (user && userpost && userpost.likes && userpost.likes.length) {\n        const doesLiked = userpost.likes.find((like) => {\n          return like._user == user._id;\n        });\n        if (doesLiked) {\n          setIsLiked(true);\n        }\n      }\n    }\n    return () => null;\n  }, [likeFunc]);\n\n  return (\n    <div className=\"cardMenu\">\n      <div className=\"interactions\">\n        <Icon.Heart\n          className=\"icon__heart\"\n          onClick={likeFunc}\n          fill={isLiked ? 'tomato' : 'transparent'}\n        />\n        {/*   <Icon.ThumbsDown className=\"icon\" onClick={unlikeFunc} /> */}\n        <Icon.MessageCircle className=\"icon\" onClick={focus} />\n        <Icon.Share className=\"icon\" />\n      </div>\n      <Icon.Bookmark className=\"icon\" />\n    </div>\n  );\n};\n\nfunction mapStateToProps({ user }) {\n  return {\n    user: user.currentUser,\n  };\n}\nexport default connect(mapStateToProps, null)(ExploreCardMenu);\n","/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedTypes.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedAction.js",["333"],"import { setToken } from '../../utils';\n\nimport feedTypes from './feedTypes';\n\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport * as Routes from '../../component/routes';\n\nexport const retrieveFeedPostsStart = (history) => async (dispatch) => {\n  const token = localStorage.getItem('authToken');\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  if (token) {\n    await setToken(token);\n  }\n  try {\n    const response = await axios.get(`api/route/post/retrieveFeedPosts`, config);\n    if (response) {\n      dispatch({ type: feedTypes.FETCH_POSTS_SUCCESS, payload: response.data.posts });\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      await dispatch({ type: feedTypes.FETCH_POSTS_FAILURE, payload: error.response.data.msg });\n      cogoToast.info(`${error.response.data.msg}`, { position: 'top-center' });\n      if (\n        error.response.data.msg === 'jwt expired' ||\n        error.response.data.msg === `you're not authorised`\n      ) {\n        history.push('/');\n        localStorage.removeItem('authToken');\n      }\n    }\n  }\n};\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostButton/index.js",["334"],"import React, { useState, Fragment, useEffect, useRef } from 'react';\nimport * as Icon from 'react-feather';\nimport { useHistory } from 'react-router-dom';\nimport './style.scss';\nimport * as Routes from '../../routes';\n\nconst NewPostButton = ({ iconName, children }) => {\n  const history = useHistory();\n  const [fileSelected, setFileSelected] = useState(undefined);\n  const fileinput = useRef();\n\n  useEffect(() => {\n    if (fileSelected) {\n      history.push(Routes.NewPostPage, { fileSelected });\n      fileinput.current.value = '';\n    }\n    return () => null;\n  }, [fileSelected]);\n\n  return (\n    <Fragment>\n      <form encType=\"multipart/form-data\">\n        <label htmlFor=\"file-upload\">{!iconName && <Icon.Camera className=\"icon\" />}</label>\n        <input\n          ref={fileinput}\n          name=\"postfile\"\n          type=\"file\"\n          id=\"file-upload\"\n          accept=\"image/*\"\n          className=\"file__input\"\n          onChange={(event) => setFileSelected(event.target.files[0])}\n        />\n      </form>\n    </Fragment>\n  );\n};\n\nexport default NewPostButton;\n","/Users/mac/Documents/mern stack/photoShare/client/src/screens/NewPost/index.js",["335","336"],"import React from 'react';\nimport { useHistory, Redirect } from 'react-router-dom';\nimport NewPost from '../../component/NewPost/NewPost';\nimport NewPostModal from '../../component/NewPost/NewPostModal';\nimport * as Routes from '../../component/routes';\n\nconst NewPostPage = ({ location }) => {\n  const history = useHistory();\n\n  const {\n    state: { fileSelected },\n  } = location;\n\n  return (\n    <>\n      {location.state && location.state.fileSelected ? (\n        <NewPost file={fileSelected} />\n      ) : (\n        <Redirect to={Routes.Dashboard} />\n      )}\n    </>\n  );\n};\n\nexport default NewPostPage;\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPost.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostModal/index.js",["337","338","339","340","341","342"],"import React, { Fragment, useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './style.scss';\nimport * as Routes from '../../routes';\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\nimport { useHistory } from 'react-router-dom';\nimport { createPostFunc } from '../../../redux/Actions/postActions';\n\nimport * as Icon from 'react-feather';\nimport cogoToast from 'cogo-toast';\n\nconst NewPostModal = ({ file }) => {\n  const modalIsOpen = useSelector(({ modal }) => modal.showModal);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [previewImage, setPreviewImage] = useState(undefined);\n  const [caption, setCaption] = useState('');\n\n  // console.log(file)\n\n  useEffect(() => {\n    dispatch(showModal());\n    return () => null;\n  }, []);\n\n  useEffect(() => {\n    if (file.type == 'image/jpeg' || file.type == 'image/png') {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = (event) => {\n        setPreviewImage(event.target.result);\n      };\n    } else {\n      //\n    }\n    return () => null;\n  }, [file]);\n\n  const closeModal = async () => {\n    dispatch(hideModal());\n    history.push(Routes.Dashboard);\n  };\n\n  const handlePost = async (e) => {\n    e.preventDefault();\n    try {\n      // if (!file) {\n      //     cogoToast.warn('no picture has been selected');\n      // }\n\n      const data = await new FormData();\n      data.append('postfile', file);\n      data.append('caption', caption);\n      console.log(data.get('postfile'), data.get('caption'));\n      await dispatch(createPostFunc(data, history));\n      history.push(Routes.Dashboard);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  return (\n    <div className=\"modal__wrapper\">\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        className=\"modal\"\n        overlayClassName=\"overlay\"\n      >\n        <div className=\"modal__header\">\n          <button className=\"goback__btn\" onClick={closeModal}>\n            <Icon.ArrowLeft />\n          </button>\n          <button className=\"share__btn\" type=\"submit\" onClick={handlePost}>\n            {' '}\n            Share\n          </button>\n        </div>\n        <small> New Post</small>\n        {/* caption */}\n        <input\n          placeholder=\" write a Caption\"\n          className=\"caption__box\"\n          name=\"caption\"\n          id=\"caption\"\n          type=\"text\"\n          style={{ resize: 'none' }}\n          value={caption}\n          onChange={(e) => setCaption(e.target.value)}\n        />\n\n        {/* preview image */}\n\n        {previewImage && (\n          <div className=\"preview__wrapper\">\n            <img src={previewImage} className=\"preview\" alt=\"image\" />\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewPostModal;\n","/Users/mac/Documents/mern stack/photoShare/client/src/redux/modal/modalReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/modal/modalTypes.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/modal/modalActions.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/Actions.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/ActionTypes.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/suggestedUsersReducer.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/FollowButton/index.js",["343","344","345","346","347"],"import React, { useState, Fragment, useEffect } from 'react';\nimport './style.scss';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ReactComponent as LoaderSvg } from '../../assets/loader.svg';\nimport axios from 'axios';\nimport CogoToast from 'cogo-toast';\nimport { setToken } from '../../utils';\nimport cogoToast from 'cogo-toast';\nimport Loader from '../Loader';\nconst token = localStorage.getItem('authToken');\n\nconst FollowButton = ({ userId }) => {\n  const dispatch = useDispatch();\n  const currentUser = useSelector(({ user }) => user.currentUser);\n\n  const [following, setFollowed] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleUnfollow = async () => {\n    if (token) {\n      setToken(token);\n    }\n    try {\n      setLoading(true);\n      const response = await axios.post(`/api/route/user/unfollow/${userId}`);\n      if (response) {\n        cogoToast.success(`${response.data.msg}`);\n        setLoading(false);\n        setFollowed(false);\n      }\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n      if (error.response) {\n        cogoToast.error(`${error.response.data.msg}`);\n      }\n    }\n  };\n  const handleFollow = async () => {\n    if (token) {\n      setToken(token);\n    }\n    try {\n      setLoading(true);\n      const response = await axios.post(`/api/route/user/follow/${userId}`);\n      if (response) {\n        cogoToast.success(`${response.data.msg}`);\n        setLoading(false);\n        setFollowed(true);\n      }\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n      if (error.response) {\n        cogoToast.error(`${error.response.data.msg}`);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (currentUser) {\n      const isFollowed = currentUser.following.find((follow) => follow.user === userId);\n      if (isFollowed) {\n        setFollowed(true);\n      } else {\n        setFollowed(false);\n      }\n    }\n\n    return () => null;\n  }, []);\n\n  if (currentUser && currentUser._id == userId) {\n    return <button disabled>follow</button>;\n  }\n  if (following) {\n    return (\n      <button className=\"follow_btn\" onClick={handleUnfollow}>\n        UnFollow\n        {loading && <LoaderSvg />}\n      </button>\n    );\n  }\n  return (\n    <Fragment>\n      {!following && (\n        <button className=\"follow_btn\" onClick={handleFollow}>\n          Follow\n          {loading && <LoaderSvg />}\n        </button>\n      )}\n    </Fragment>\n  );\n};\n\nexport default FollowButton;\n","/Users/mac/Documents/mern stack/photoShare/client/src/screens/ProfilePage/index.js",["348","349"],"/Users/mac/Documents/mern stack/photoShare/client/src/component/changePasswordForm/index.js",["350","351","352"],"import React, { useState, Fragment } from 'react';\nimport './style.scss';\nimport cogoToast from 'cogo-toast';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Avatar from '../../assets/default-avatar.png';\nimport * as Routes from '../routes';\nimport Loader from '../Loader';\n\n\n\nfunction ChangePasswordForm() {\n  const user = useSelector(({ user }) => user.currentUser);\n\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmNewPassword, setConfirmNewPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setIsLoading(true)\n      await cogoToast.info('button has been clicked')\n      setIsLoading(false)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"form__container\">\n      <form action=\"\" onSubmit={handleSubmit} className=\"newPassword__form\">\n        <div className=\"profile__header\">\n          <img src={user ? user.avatar : Avatar} alt=\"\" />\n\n          <div className=\"profile__avatar__wrapper\">\n            <h4> {user && user.username}</h4>\n          </div>\n\n        </div>\n        <input\n          type=\"text\"\n          name=\"oldPassword\"\n          placeholder=\"old password\"\n          value={oldPassword}\n          onChange={(e) => setOldPassword(e.target.value)}\n        />\n\n        <input\n          type=\"text\"\n          name=\"newPassword\"\n          placeholder=\"New Password\"\n          value={newPassword}\n          onChange={(e) => setNewPassword(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          name=\"confirmNewPassword\"\n          placeholder=\"Confirm New Password\"\n          value={confirmNewPassword}\n          onChange={(e) => setConfirmNewPassword(e.target.value)}\n        />\n        <button type=\"submit\">\n          Change password\n        {isLoading && <Loader />}\n        </button>\n        {/*  <Link className=\"forgot__pasword__link\">Forgot Password?</Link> */}\n      </form>\n    </div>\n  );\n}\n\nexport default ChangePasswordForm;\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/EditProfileForm/index.js",["353","354"],"import React, { useState, useEffect, Fragment } from 'react'\nimport { useSelector } from 'react-redux';\nimport './style.scss';\nimport cogoToast from 'cogo-toast';\nimport Avatar from '../../assets/default-avatar.png';\nimport Loader from '../Loader';\n\nfunction EditProFileForm() {\n\n    const user = useSelector(({ user }) => user.currentUser);\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('')\n    const [bio, setBio] = useState('')\n    const [email, setEmail] = useState('');\n    const [profileImg, setProfileImg] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    useEffect(() => {\n        document.title = 'Edit Profile • Photoshare';\n    }, []);\n\n    const handleFormSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            setIsLoading(true)\n            await cogoToast.info('button has been clicked')\n            setIsLoading(false)\n        } catch (error) {\n            throw new Error('something went wrong')\n        }\n\n    }\n\n    return (\n        <div className=\"form_wrapper\">\n            <form action=\"\" className=\"Edit_profile_form\" onSubmit={handleFormSubmit}>\n                <div className=\"profile__header\">\n                    <img src={user ? user.avatar : Avatar} alt=\"\" />\n\n                    <div className=\"profile__avatar__wrapper\">\n                        <h4> {user && user.username}</h4>\n                        <input\n                            id=\"avatar-upload\"\n                            type=\"file\" accept=\"image/*\"\n                            style={{ display: \"none\" }}\n                            onChange={(e) => setProfileImg(e.target.files[0])}\n                        />\n                        <label htmlFor=\"avatar-upload\">Change Profile Photo</label>\n                    </div>\n\n\n                </div>\n\n                <div className=\"name\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input\n                        id=\"name\"\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder={'Name'}\n                        value={user && user.name ? user.name : name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n                </div>\n                <div className=\"username\">\n                    <label htmlFor=\"name\">Username</label>\n                    <input\n                        id=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        placeholder={'Username'}\n                        value={user && user.username ? user.username : username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n\n                </div>\n                <div className=\"bio\">\n                    <label htmlFor=\"bio\">Bio</label>\n                    <input\n                        id=\"bio\"\n                        name=\"bio\"\n                        placeholder={'Bio'}\n                        value={user && user.bio ? user.bio : bio}\n                        onChange={(e) => setBio(e.target.value)}\n                    />\n\n\n                </div>\n                <div className=\"email\">\n                    <label htmlFor=\"name\">Email</label>\n                    <input\n                        id=\"email\"\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder={'Email'}\n                        value={user && user.email ? user.email : email}\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n\n                </div>\n\n                <div className=\"btn__wrapper\">\n\n                    <button className=\"submit__btn\" type=\"submit\">\n                        Submit\n                    {isLoading && <Loader />}\n                    </button>\n                </div>\n\n\n            </form>\n        </div>\n    )\n}\n\nexport default EditProFileForm\n","/Users/mac/Documents/mern stack/photoShare/client/src/screens/SettingsScreen/index.js",["355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"import React, { useState } from 'react';\n\nimport './style.scss';\nimport { Switch, Route, NavLink, useRouteMatch, Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Avatar from '../../assets/default-avatar.png';\nimport * as Icon from 'react-feather';\nimport ChangePasswordForm from '../../component/changePasswordForm';\nimport EditProFileForm from '../../component/EditProfileForm';\nimport Footer from '../../component/Footer'\n\nfunction EditProfilePage() {\n    // useEffect(() => {\n\n    // }, [window.outerWidth]);\n\n    const user = useSelector(({ user }) => user.currentUser);\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [website, setWebsite] = useState('');\n    const [bio, setBio] = useState('');\n\n\n    const handleFormSubmit = (e) => {\n        e.preventDefaut();\n    };\n    let { path, url } = useRouteMatch();\n    return (\n        <div className=\"Edit_wrapper\">\n            <div className=\"form_container\">\n                <div className=\"nav_links\">\n                    <ul>\n                        <NavLink to={path} id=\"edit__profile__link\">\n                            <li>Edit Profile</li>\n                        </NavLink>\n\n                        <NavLink to={`${path}/Password`} id=\"change__password__link\">\n                            <li> Change password</li>\n                        </NavLink>\n                    </ul>\n                </div>\n\n                <div className=\"switch_container\">\n                    <Switch>\n                        <Route exact path={path}>\n                            <EditProFileForm />\n                        </Route>\n                        <Route exact path={`${path}/Password`} render={() => <ChangePasswordForm />} />\n                    </Switch>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n}\n\nexport default EditProfilePage;\n","/Users/mac/Documents/mern stack/photoShare/client/src/component/Divider/index.js",[],"/Users/mac/Documents/mern stack/photoShare/client/src/component/UsersPopUpCard/PopUpCard.js",[],{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","replacedBy":"372"},{"ruleId":"373","severity":1,"message":"374","line":2,"column":18,"nodeType":"375","messageId":"376","endLine":2,"endColumn":26},{"ruleId":"373","severity":1,"message":"377","line":26,"column":8,"nodeType":"375","messageId":"376","endLine":26,"endColumn":14},{"ruleId":"378","severity":1,"message":"379","line":45,"column":6,"nodeType":"380","endLine":45,"endColumn":16,"suggestions":"381"},{"ruleId":"373","severity":1,"message":"382","line":14,"column":13,"nodeType":"375","messageId":"376","endLine":14,"endColumn":19},{"ruleId":"373","severity":1,"message":"383","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"384","line":10,"column":10,"nodeType":"375","messageId":"376","endLine":10,"endColumn":21},{"ruleId":"373","severity":1,"message":"385","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":13},{"ruleId":"373","severity":1,"message":"374","line":3,"column":10,"nodeType":"375","messageId":"376","endLine":3,"endColumn":18},{"ruleId":"373","severity":1,"message":"386","line":9,"column":7,"nodeType":"375","messageId":"376","endLine":9,"endColumn":14},{"ruleId":"373","severity":1,"message":"387","line":12,"column":8,"nodeType":"375","messageId":"376","endLine":12,"endColumn":12},{"ruleId":"373","severity":1,"message":"388","line":18,"column":7,"nodeType":"375","messageId":"376","endLine":18,"endColumn":12},{"ruleId":"378","severity":1,"message":"389","line":41,"column":6,"nodeType":"380","endLine":41,"endColumn":30,"suggestions":"390"},{"ruleId":"373","severity":1,"message":"383","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"391","line":1,"column":38,"nodeType":"375","messageId":"376","endLine":1,"endColumn":46},{"ruleId":"373","severity":1,"message":"382","line":12,"column":13,"nodeType":"375","messageId":"376","endLine":12,"endColumn":19},{"ruleId":"378","severity":1,"message":"389","line":24,"column":6,"nodeType":"380","endLine":24,"endColumn":16,"suggestions":"392"},{"ruleId":"373","severity":1,"message":"393","line":2,"column":10,"nodeType":"375","messageId":"376","endLine":2,"endColumn":23},{"ruleId":"373","severity":1,"message":"382","line":6,"column":13,"nodeType":"375","messageId":"376","endLine":6,"endColumn":19},{"ruleId":"373","severity":1,"message":"386","line":10,"column":7,"nodeType":"375","messageId":"376","endLine":10,"endColumn":14},{"ruleId":"373","severity":1,"message":"394","line":87,"column":13,"nodeType":"375","messageId":"376","endLine":87,"endColumn":19},{"ruleId":"373","severity":1,"message":"395","line":5,"column":8,"nodeType":"375","messageId":"376","endLine":5,"endColumn":14},{"ruleId":"373","severity":1,"message":"396","line":15,"column":11,"nodeType":"375","messageId":"376","endLine":15,"endColumn":19},{"ruleId":"373","severity":1,"message":"397","line":3,"column":13,"nodeType":"375","messageId":"376","endLine":3,"endColumn":17},{"ruleId":"373","severity":1,"message":"398","line":5,"column":22,"nodeType":"375","messageId":"376","endLine":5,"endColumn":26},{"ruleId":"399","severity":1,"message":"400","line":17,"column":20,"nodeType":"401","messageId":"402","endLine":17,"endColumn":23},{"ruleId":"373","severity":1,"message":"403","line":1,"column":46,"nodeType":"375","messageId":"376","endLine":1,"endColumn":57},{"ruleId":"373","severity":1,"message":"404","line":4,"column":10,"nodeType":"375","messageId":"376","endLine":4,"endColumn":20},{"ruleId":"373","severity":1,"message":"405","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":21},{"ruleId":"373","severity":1,"message":"406","line":12,"column":8,"nodeType":"375","messageId":"376","endLine":12,"endColumn":12},{"ruleId":"378","severity":1,"message":"389","line":51,"column":6,"nodeType":"380","endLine":51,"endColumn":29,"suggestions":"407"},{"ruleId":"408","severity":1,"message":"409","line":94,"column":13,"nodeType":"410","endLine":94,"endColumn":57},{"ruleId":"373","severity":1,"message":"398","line":5,"column":10,"nodeType":"375","messageId":"376","endLine":5,"endColumn":14},{"ruleId":"373","severity":1,"message":"385","line":5,"column":8,"nodeType":"375","messageId":"376","endLine":5,"endColumn":13},{"ruleId":"378","severity":1,"message":"411","line":16,"column":6,"nodeType":"380","endLine":16,"endColumn":8,"suggestions":"412"},{"ruleId":"373","severity":1,"message":"413","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":14},{"ruleId":"373","severity":1,"message":"414","line":12,"column":5,"nodeType":"375","messageId":"376","endLine":12,"endColumn":12},{"ruleId":"373","severity":1,"message":"415","line":13,"column":5,"nodeType":"375","messageId":"376","endLine":13,"endColumn":11},{"ruleId":"416","severity":1,"message":"417","line":30,"column":9,"nodeType":"418","messageId":"419","endLine":30,"endColumn":26},{"ruleId":"373","severity":1,"message":"420","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":16},{"ruleId":"373","severity":1,"message":"421","line":8,"column":8,"nodeType":"375","messageId":"376","endLine":8,"endColumn":13},{"ruleId":"373","severity":1,"message":"422","line":27,"column":5,"nodeType":"375","messageId":"376","endLine":27,"endColumn":16},{"ruleId":"373","severity":1,"message":"423","line":28,"column":5,"nodeType":"375","messageId":"376","endLine":28,"endColumn":18},{"ruleId":"373","severity":1,"message":"424","line":31,"column":5,"nodeType":"375","messageId":"376","endLine":31,"endColumn":10},{"ruleId":"416","severity":1,"message":"417","line":101,"column":17,"nodeType":"418","messageId":"419","endLine":101,"endColumn":47},{"ruleId":"416","severity":1,"message":"417","line":102,"column":17,"nodeType":"418","messageId":"419","endLine":102,"endColumn":46},{"ruleId":"373","severity":1,"message":"425","line":3,"column":8,"nodeType":"375","messageId":"376","endLine":3,"endColumn":19},{"ruleId":"408","severity":1,"message":"409","line":41,"column":13,"nodeType":"410","endLine":45,"endColumn":15},{"ruleId":"426","severity":1,"message":"427","line":51,"column":34,"nodeType":"428","messageId":"402","endLine":51,"endColumn":36},{"ruleId":"373","severity":1,"message":"429","line":1,"column":8,"nodeType":"375","messageId":"376","endLine":1,"endColumn":19},{"ruleId":"430","severity":1,"message":"431","line":5,"column":3,"nodeType":"375","messageId":"432","endLine":5,"endColumn":11},{"ruleId":"426","severity":1,"message":"427","line":15,"column":29,"nodeType":"428","messageId":"402","endLine":15,"endColumn":31},{"ruleId":"378","severity":1,"message":"433","line":23,"column":6,"nodeType":"380","endLine":23,"endColumn":16,"suggestions":"434"},{"ruleId":"373","severity":1,"message":"382","line":7,"column":13,"nodeType":"375","messageId":"376","endLine":7,"endColumn":19},{"ruleId":"378","severity":1,"message":"389","line":18,"column":6,"nodeType":"380","endLine":18,"endColumn":20,"suggestions":"435"},{"ruleId":"373","severity":1,"message":"436","line":4,"column":8,"nodeType":"375","messageId":"376","endLine":4,"endColumn":20},{"ruleId":"373","severity":1,"message":"437","line":8,"column":9,"nodeType":"375","messageId":"376","endLine":8,"endColumn":16},{"ruleId":"373","severity":1,"message":"391","line":1,"column":17,"nodeType":"375","messageId":"376","endLine":1,"endColumn":25},{"ruleId":"373","severity":1,"message":"438","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":17},{"ruleId":"378","severity":1,"message":"411","line":25,"column":6,"nodeType":"380","endLine":25,"endColumn":8,"suggestions":"439"},{"ruleId":"426","severity":1,"message":"427","line":28,"column":19,"nodeType":"428","messageId":"402","endLine":28,"endColumn":21},{"ruleId":"426","severity":1,"message":"427","line":28,"column":48,"nodeType":"428","messageId":"402","endLine":28,"endColumn":50},{"ruleId":"408","severity":1,"message":"409","line":96,"column":13,"nodeType":"410","endLine":96,"endColumn":71},{"ruleId":"373","severity":1,"message":"440","line":7,"column":8,"nodeType":"375","messageId":"376","endLine":7,"endColumn":17},{"ruleId":"373","severity":1,"message":"441","line":10,"column":8,"nodeType":"375","messageId":"376","endLine":10,"endColumn":14},{"ruleId":"373","severity":1,"message":"442","line":14,"column":9,"nodeType":"375","messageId":"376","endLine":14,"endColumn":17},{"ruleId":"378","severity":1,"message":"443","line":72,"column":6,"nodeType":"380","endLine":72,"endColumn":8,"suggestions":"444"},{"ruleId":"426","severity":1,"message":"427","line":74,"column":38,"nodeType":"428","messageId":"402","endLine":74,"endColumn":40},{"ruleId":"373","severity":1,"message":"377","line":12,"column":8,"nodeType":"375","messageId":"376","endLine":12,"endColumn":14},{"ruleId":"378","severity":1,"message":"445","line":32,"column":6,"nodeType":"380","endLine":32,"endColumn":8,"suggestions":"446"},{"ruleId":"373","severity":1,"message":"391","line":1,"column":27,"nodeType":"375","messageId":"376","endLine":1,"endColumn":35},{"ruleId":"373","severity":1,"message":"398","line":4,"column":10,"nodeType":"375","messageId":"376","endLine":4,"endColumn":14},{"ruleId":"373","severity":1,"message":"382","line":7,"column":13,"nodeType":"375","messageId":"376","endLine":7,"endColumn":19},{"ruleId":"373","severity":1,"message":"391","line":1,"column":38,"nodeType":"375","messageId":"376","endLine":1,"endColumn":46},{"ruleId":"373","severity":1,"message":"447","line":15,"column":12,"nodeType":"375","messageId":"376","endLine":15,"endColumn":22},{"ruleId":"373","severity":1,"message":"398","line":4,"column":49,"nodeType":"375","messageId":"376","endLine":4,"endColumn":53},{"ruleId":"373","severity":1,"message":"413","line":6,"column":8,"nodeType":"375","messageId":"376","endLine":6,"endColumn":14},{"ruleId":"373","severity":1,"message":"397","line":7,"column":13,"nodeType":"375","messageId":"376","endLine":7,"endColumn":17},{"ruleId":"373","severity":1,"message":"448","line":17,"column":11,"nodeType":"375","messageId":"376","endLine":17,"endColumn":15},{"ruleId":"373","severity":1,"message":"449","line":18,"column":12,"nodeType":"375","messageId":"376","endLine":18,"endColumn":16},{"ruleId":"373","severity":1,"message":"450","line":18,"column":18,"nodeType":"375","messageId":"376","endLine":18,"endColumn":25},{"ruleId":"373","severity":1,"message":"451","line":19,"column":12,"nodeType":"375","messageId":"376","endLine":19,"endColumn":20},{"ruleId":"373","severity":1,"message":"452","line":19,"column":22,"nodeType":"375","messageId":"376","endLine":19,"endColumn":33},{"ruleId":"373","severity":1,"message":"453","line":20,"column":12,"nodeType":"375","messageId":"376","endLine":20,"endColumn":19},{"ruleId":"373","severity":1,"message":"454","line":20,"column":21,"nodeType":"375","messageId":"376","endLine":20,"endColumn":31},{"ruleId":"373","severity":1,"message":"455","line":21,"column":12,"nodeType":"375","messageId":"376","endLine":21,"endColumn":15},{"ruleId":"373","severity":1,"message":"456","line":21,"column":17,"nodeType":"375","messageId":"376","endLine":21,"endColumn":23},{"ruleId":"373","severity":1,"message":"457","line":24,"column":11,"nodeType":"375","messageId":"376","endLine":24,"endColumn":27},{"ruleId":"373","severity":1,"message":"458","line":27,"column":17,"nodeType":"375","messageId":"376","endLine":27,"endColumn":20},"no-native-reassign",["459"],"no-negated-in-lhs",["460"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Footer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'connectSocketIo' and 'history'. Either include them or remove the dependency array. If 'connectSocketIo' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["461"],"'Routes' is defined but never used.","'useState' is defined but never used.","'IconContext' is defined but never used.","'axios' is defined but never used.","'baseUrl' is assigned a value but never used.","'Menu' is defined but never used.","'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["462"],"'Fragment' is defined but never used.",["463"],"'updateComment' is defined but never used.","'config' is assigned a value but never used.","'styled' is defined but never used.","'location' is assigned a value but never used.","'Icon' is defined but never used.","'Link' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useCallback' is defined but never used.","'useHistory' is defined but never used.","'MobileTabMenu' is defined but never used.","'Card' is defined but never used.",["464"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["465"],"'Avatar' is defined but never used.","'urlText' is assigned a value but never used.","'userId' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'CardMenu' is defined but never used.","'dayjs' is defined but never used.","'likedByText' is assigned a value but never used.","'likedByNumber' is assigned a value but never used.","'hours' is assigned a value but never used.","'ProfileIcon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'socketTypes' is defined but never used.","no-const-assign","'comments' is constant.","const","React Hook useEffect has missing dependencies: 'user' and 'userpost'. Either include them or remove the dependency array.",["466"],["467"],"'NewPostModal' is defined but never used.","'history' is assigned a value but never used.","'cogoToast' is defined but never used.",["468"],"'CogoToast' is defined but never used.","'Loader' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'userId'. Either include them or remove the dependency array.",["469"],"React Hook useEffect has a missing dependency: 'getProfile'. Either include it or remove the dependency array.",["470"],"'profileImg' is assigned a value but never used.","'user' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'website' is assigned a value but never used.","'setWebsite' is assigned a value but never used.","'bio' is assigned a value but never used.","'setBio' is assigned a value but never used.","'handleFormSubmit' is assigned a value but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"471","fix":"472"},{"desc":"473","fix":"474"},{"desc":"475","fix":"476"},{"desc":"477","fix":"478"},{"desc":"479","fix":"480"},{"desc":"481","fix":"482"},{"desc":"483","fix":"484"},{"desc":"479","fix":"485"},{"desc":"486","fix":"487"},{"desc":"488","fix":"489"},"Update the dependencies array to be: [connectSocketIo, history, loaduser]",{"range":"490","text":"491"},"Update the dependencies array to be: [history, retrieveFeedPostsStart]",{"range":"492","text":"493"},"Update the dependencies array to be: [getPosts, history]",{"range":"494","text":"495"},"Update the dependencies array to be: [getSinglePost, history, postId]",{"range":"496","text":"497"},"Update the dependencies array to be: [dispatch]",{"range":"498","text":"499"},"Update the dependencies array to be: [likeFunc, user, userpost]",{"range":"500","text":"501"},"Update the dependencies array to be: [fileSelected, history]",{"range":"502","text":"503"},{"range":"504","text":"499"},"Update the dependencies array to be: [currentUser, userId]",{"range":"505","text":"506"},"Update the dependencies array to be: [getProfile]",{"range":"507","text":"508"},[1451,1461],"[connectSocketIo, history, loaduser]",[1161,1185],"[history, retrieveFeedPostsStart]",[894,904],"[getPosts, history]",[1586,1609],"[getSinglePost, history, postId]",[514,516],"[dispatch]",[616,626],"[likeFunc, user, userpost]",[570,584],"[fileSelected, history]",[860,862],[1959,1961],"[currentUser, userId]",[1067,1069],"[getProfile]"]