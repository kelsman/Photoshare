{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/screens/Explore/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './style.scss';\nimport Header from '../../component/Header';\nimport PostCard from '../../component/postcard/PostCard';\nimport { getPosts } from '../../redux/Actions/postActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExploreScreen = ({\n  getPosts,\n  posts\n}) => {\n  _s();\n\n  useEffect(() => {\n    let subscirbe = true;\n\n    if (subscirbe) {\n      getPosts();\n    }\n\n    return () => subscirbe = null;\n  }, []);\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Explore \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-wrapper\",\n      children: posts && posts.length && posts.map(() => {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-container\",\n            children: /*#__PURE__*/_jsxDEV(PostCard, {\n              id: posts_id,\n              date: posts.date,\n              postedBy: posts.postedBy,\n              media: posts.postMedia,\n              likes: posts.likes,\n              comments: posts.comments\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, posts._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ExploreScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ExploreScreen;\n\nconst mapStateTOProps = ({\n  post\n}) => {\n  return {\n    posts: post.posts\n  };\n};\n\nexport default connect(mapStateTOProps, {\n  getPosts\n})(ExploreScreen);\n\nvar _c;\n\n$RefreshReg$(_c, \"ExploreScreen\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/screens/Explore/index.js"],"names":["React","useState","useEffect","Fragment","Header","PostCard","getPosts","connect","ExploreScreen","posts","subscirbe","console","log","length","map","posts_id","date","postedBy","postMedia","likes","comments","_id","mapStateTOProps","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AAEA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEF,EAAAA,QAAF;AAAYG,EAAAA;AAAZ,CAAD,KAAyB;AAAA;;AAE3CP,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,SAAS,GAAG,IAAhB;;AACA,QAAIA,SAAJ,EAAe;AACXJ,MAAAA,QAAQ;AACX;;AACD,WAAO,MAAMI,SAAS,GAAG,IAAzB;AACH,GANQ,EAMN,EANM,CAAT;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAQA,sBAEI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKA,KAAK,IAAIA,KAAK,CAACI,MAAf,IAAyBJ,KAAK,CAACK,GAAN,CAAU,MAAM;AACtC,4BACI,QAAC,QAAD;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACI,QAAC,QAAD;AACI,cAAA,EAAE,EAAEC,QADR;AAEI,cAAA,IAAI,EAAEN,KAAK,CAACO,IAFhB;AAGI,cAAA,QAAQ,EAAEP,KAAK,CAACQ,QAHpB;AAII,cAAA,KAAK,EAAER,KAAK,CAACS,SAJjB;AAKI,cAAA,KAAK,EAAET,KAAK,CAACU,KALjB;AAMI,cAAA,QAAQ,EAAEV,KAAK,CAACW;AANpB;AAAA;AAAA;AAAA;AAAA;AADJ,aAAqCX,KAAK,CAACY,GAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAgBH,OAjByB;AAD9B;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA6BH,CA/CD;;GAAMb,a;;KAAAA,a;;AAiDN,MAAMc,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAClC,SAAO;AACHd,IAAAA,KAAK,EAAEc,IAAI,CAACd;AADT,GAAP;AAGH,CAJD;;AAKA,eAAeF,OAAO,CAACe,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAuCE,aAAvC,CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './style.scss'\nimport Header from '../../component/Header';\nimport PostCard from '../../component/postcard/PostCard';\n\nimport { getPosts } from '../../redux/Actions/postActions'\nimport { connect } from 'react-redux';\n\nconst ExploreScreen = ({ getPosts, posts }) => {\n\n    useEffect(() => {\n        let subscirbe = true;\n        if (subscirbe) {\n            getPosts()\n        }\n        return () => subscirbe = null\n    }, []);\n\n    console.log(posts)\n\n\n\n\n\n\n\n    return (\n\n        <div className=\"container\">\n            <Header />\n            <p> Explore </p>\n            <div className=\"posts-wrapper\">\n                {posts && posts.length && posts.map(() => {\n                    return (\n                        <Fragment>\n                            <div className=\"post-container\" key={posts._id}>\n                                <PostCard\n                                    id={posts_id}\n                                    date={posts.date}\n                                    postedBy={posts.postedBy}\n                                    media={posts.postMedia}\n                                    likes={posts.likes}\n                                    comments={posts.comments}\n                                />\n\n                            </div>\n\n                        </Fragment>\n                    )\n                })}\n\n            </div>\n\n        </div>\n    )\n};\n\nconst mapStateTOProps = ({ post }) => {\n    return {\n        posts: post.posts\n    }\n}\nexport default connect(mapStateTOProps, { getPosts })(ExploreScreen);"]},"metadata":{},"sourceType":"module"}