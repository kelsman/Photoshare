{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/auth/LogInForm/LogInForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.scss';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signin, loaduser } from '../../../redux/Actions/userActions'; // import { Formik } from 'formik';\n\nimport { useFormik } from 'formik';\nimport { AiOutlineLock, AiOutlineMail } from 'react-icons/ai';\nimport { IconContext } from 'react-icons'; // import cogoToast from 'cogo-toast';\n// Routes\n\nimport * as Routes from '../../routes';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().required('please provide a valid email'),\n  password: Yup.string().required(`password can't be empty`)\n});\n\nconst LogInForm = ({\n  signin\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleFormSubmit = async values => {\n    try {\n      setIsSubmitting(true);\n      await signin(values, history);\n      setIsSubmitting(false); // history.push(Routes.Dashboard);\n    } catch (error) {\n      console.log(error.message);\n      values.email = '';\n      values.password = '';\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema,\n    onSubmit: handleFormSubmit\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email-container\",\n          children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              className: 'react-icons'\n            },\n            children: /*#__PURE__*/_jsxDEV(AiOutlineMail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"email-input\",\n            type: \"email\",\n            name: \"email\",\n            value: formik.values.email,\n            onChange: handleChange,\n            placeholder: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"error\",\n          style: {\n            color: 'red',\n            opacity: 0.7\n          },\n          children: [' ', errors.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-container\",\n          children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              className: 'react-icons'\n            },\n            children: /*#__PURE__*/_jsxDEV(AiOutlineLock, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"password-input\",\n            type: \"password\",\n            name: \"password\",\n            value: values.password,\n            onChange: handleChange,\n            placeholder: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"error\",\n          style: {\n            color: 'red',\n            opacity: 0.7\n          },\n          children: [' ', errors.password]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"password-reset-link reset-password\",\n        to: \"/accounts/password/reset\",\n        children: [\"Forgot your password?\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        disabled: isSubmitting ? true : false,\n        children: isSubmitting ? 'Signing in..' : 'Log in'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [' ', \"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n        className: \"password-reset-link\",\n        to: \"/accounts/signup\",\n        children: [' ', \"Sign up\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogInForm, \"tVpCRvb2tnKzwezZGgT5YPpqSrU=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = LogInForm;\n\nconst mapStateToProps = ({\n  user\n}) => {\n  return {\n    loadUserErrorr: user.authError.loadUserError\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signin,\n  loaduser\n})(LogInForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/auth/LogInForm/LogInForm.js"],"names":["React","useState","Yup","Link","connect","signin","loaduser","useFormik","AiOutlineLock","AiOutlineMail","IconContext","Routes","useHistory","validationSchema","object","shape","email","string","required","password","LogInForm","history","isSubmitting","setIsSubmitting","handleFormSubmit","values","error","console","log","message","formik","initialValues","onSubmit","errors","handleChange","handleSubmit","className","color","opacity","mapStateToProps","user","loadUserErrorr","authError","loadUserError"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './style.scss';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signin, loaduser } from '../../../redux/Actions/userActions';\n// import { Formik } from 'formik';\nimport { useFormik } from 'formik';\nimport { AiOutlineLock, AiOutlineMail } from 'react-icons/ai';\nimport { IconContext } from 'react-icons';\n// import cogoToast from 'cogo-toast';\n\n// Routes\nimport * as Routes from '../../routes';\n\nimport { useHistory } from 'react-router-dom';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().required('please provide a valid email'),\n  password: Yup.string().required(`password can't be empty`),\n});\n\nconst LogInForm = ({ signin }) => {\n  const history = useHistory();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleFormSubmit = async (values) => {\n    try {\n      setIsSubmitting(true);\n      await signin(values, history);\n      setIsSubmitting(false);\n      // history.push(Routes.Dashboard);\n    } catch (error) {\n      console.log(error.message);\n      values.email = '';\n      values.password = '';\n    }\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: handleFormSubmit,\n  });\n\n  const { values, errors, handleChange, handleSubmit } = formik;\n  return (\n    <div>\n      {/* <h1 className=\"logo\">Photogram</h1> */}\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <h2> Log in</h2>\n        <div>\n          <div className=\"email-container\">\n            <IconContext.Provider value={{ className: 'react-icons' }}>\n              <AiOutlineMail />\n            </IconContext.Provider>\n            <input\n              className=\"email-input\"\n              type=\"email\"\n              name=\"email\"\n              value={formik.values.email}\n              onChange={handleChange}\n              placeholder=\"email\"\n            />\n          </div>\n          {errors.email && (\n            <small className=\"error\" style={{ color: 'red', opacity: 0.7 }}>\n              {' '}\n              {errors.email}\n            </small>\n          )}\n        </div>\n        <div>\n          <div className=\"password-container\">\n            <IconContext.Provider value={{ className: 'react-icons' }}>\n              <AiOutlineLock />\n            </IconContext.Provider>\n            <input\n              className=\"password-input\"\n              type=\"password\"\n              name=\"password\"\n              value={values.password}\n              onChange={handleChange}\n              placeholder=\"password\"\n            />\n          </div>\n          {errors.password && (\n            <small className=\"error\" style={{ color: 'red', opacity: 0.7 }}>\n              {' '}\n              {errors.password}\n            </small>\n          )}\n        </div>\n        <Link className=\"password-reset-link reset-password\" to=\"/accounts/password/reset\">\n          Forgot your password?{' '}\n        </Link>\n\n        <button type=\"submit\" className=\"submit-btn\" disabled={isSubmitting ? true : false}>\n          {isSubmitting ? 'Signing in..' : 'Log in'}\n        </button>\n      </form>\n      <p>\n        {' '}\n        Don't have an account?{' '}\n        <Link className=\"password-reset-link\" to=\"/accounts/signup\">\n          {' '}\n          Sign up\n        </Link>\n      </p>\n    </div>\n  );\n};\nconst mapStateToProps = ({ user }) => {\n  return {\n    loadUserErrorr: user.authError.loadUserError,\n  };\n};\nexport default connect(mapStateToProps, { signin, loaduser })(LogInForm);\n"]},"metadata":{},"sourceType":"module"}