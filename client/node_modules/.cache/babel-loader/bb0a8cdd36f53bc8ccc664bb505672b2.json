{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/CommentList/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './style.scss';\nimport ProfileIcon from '../ProfileIcon';\nimport moment from 'moment';\nimport * as Icon from 'react-feather';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteComment } from '../../redux/Actions/postActions';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.relativeTimeThreshold('d', 30 * 12);\nmoment.updateLocale('en', {\n  relativeTime: {\n    dd: '%dd'\n  }\n});\n\nconst CommentList = ({\n  accountName,\n  commentuser,\n  commentImage,\n  commentText,\n  commentId,\n  commentTime,\n  userpost\n}) => {\n  _s();\n\n  const userData = useSelector(({\n    user\n  }) => user.currentUser);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteComment(userpost._id, commentId, history));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentContainer\",\n      children: [commentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: commentImage ? commentImage : require('../../assets/default-avatar.png'),\n          alt: \"image\",\n          \"aria-label\": \"poster-iamge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accountName\",\n        children: accountName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: commentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), userData && commentuser == userData._id && /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: handleDelete,\n        className: \"deletebtn\",\n        children: /*#__PURE__*/_jsxDEV(Icon.Trash2, {\n          size: 13\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comment-time\",\n      children: [\" \", moment(commentTime).fromNow(true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentList, \"vgWDr5HGnxAYYFuohW/SSkiQOro=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = CommentList;\nexport default CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/CommentList/index.js"],"names":["React","ProfileIcon","moment","Icon","useSelector","useDispatch","deleteComment","useHistory","relativeTimeThreshold","updateLocale","relativeTime","dd","CommentList","accountName","commentuser","commentImage","commentText","commentId","commentTime","userpost","userData","user","currentUser","dispatch","history","handleDelete","_id","error","console","log","require","fromNow"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACAL,MAAM,CAACM,qBAAP,CAA6B,GAA7B,EAAkC,KAAK,EAAvC;AACAN,MAAM,CAACO,YAAP,CAAoB,IAApB,EAA0B;AACxBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,EAAE,EAAE;AADQ;AADU,CAA1B;;AAMA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,WADmB;AAEnBC,EAAAA,WAFmB;AAGnBC,EAAAA,YAHmB;AAInBC,EAAAA,WAJmB;AAKnBC,EAAAA,SALmB;AAMnBC,EAAAA,WANmB;AAOnBC,EAAAA;AAPmB,CAAD,KAQd;AAAA;;AACJ,QAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;AAAEiB,IAAAA;AAAF,GAAD,KAAcA,IAAI,CAACC,WAApB,CAA5B;AACA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,OAAO,GAAGjB,UAAU,EAA1B;;AAEA,QAAMkB,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMF,QAAQ,CAACjB,aAAa,CAACa,QAAQ,CAACO,GAAV,EAAeT,SAAf,EAA0BO,OAA1B,CAAd,CAAd;AACD,KAFD,CAEE,OAAOG,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAND;;AAOA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACGZ,YAAY,iBACX;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AACE,UAAA,GAAG,EAAEA,YAAY,GAAGA,YAAH,GAAkBe,OAAO,CAAC,iCAAD,CAD5C;AAEE,UAAA,GAAG,EAAC,OAFN;AAGE,wBAAW;AAHb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAUE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8BjB;AAA9B;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBAA0BG;AAA1B;AAAA;AAAA;AAAA;AAAA,cAXF,EAaGI,QAAQ,IAAIN,WAAW,IAAIM,QAAQ,CAACM,GAApC,iBACC;AAAM,QAAA,OAAO,EAAED,YAAf;AAA6B,QAAA,SAAS,EAAC,WAAvC;AAAA,+BACE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,IAAI,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAqBE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,sBAA+BvB,MAAM,CAACgB,WAAD,CAAN,CAAoBa,OAApB,CAA4B,IAA5B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA7CD;;GAAMnB,W;UASaR,W,EACAC,W,EACDE,U;;;KAXZK,W;AA+CN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport './style.scss';\nimport ProfileIcon from '../ProfileIcon';\nimport moment from 'moment';\nimport * as Icon from 'react-feather';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteComment } from '../../redux/Actions/postActions';\nimport { useHistory } from 'react-router-dom';\nmoment.relativeTimeThreshold('d', 30 * 12);\nmoment.updateLocale('en', {\n  relativeTime: {\n    dd: '%dd',\n  },\n});\n\nconst CommentList = ({\n  accountName,\n  commentuser,\n  commentImage,\n  commentText,\n  commentId,\n  commentTime,\n  userpost,\n}) => {\n  const userData = useSelector(({ user }) => user.currentUser);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteComment(userpost._id, commentId, history));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <React.Fragment>\n      <div className=\"commentContainer\">\n        {commentImage && (\n          <div className=\"profile-icon\">\n            <img\n              src={commentImage ? commentImage : require('../../assets/default-avatar.png')}\n              alt=\"image\"\n              aria-label=\"poster-iamge\"\n            />\n          </div>\n        )}\n        <div className=\"accountName\">{accountName}</div>\n        <div className=\"comment\">{commentText}</div>\n\n        {userData && commentuser == userData._id && (\n          <span onClick={handleDelete} className=\"deletebtn\">\n            <Icon.Trash2 size={13} />\n          </span>\n        )}\n      </div>\n\n      <h3 className=\"comment-time\"> {moment(commentTime).fromNow(true)}</h3>\n    </React.Fragment>\n  );\n};\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}