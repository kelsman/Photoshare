{"ast":null,"code":"import React,{useState,useEffect,Fragment}from'react';import'./style.scss';import Header from'../../component/Header';import PostCard from'../../component/postcard/PostCard';import{getPosts}from'../../redux/Actions/postActions';import{connect}from'react-redux';import{useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExploreScreen=function ExploreScreen(_ref){var getPosts=_ref.getPosts,posts=_ref.posts;var history=useHistory();useEffect(function(){var subscirbe=true;if(subscirbe){getPosts(history);}return function(){return subscirbe=null;};},[]);console.log(posts);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"p\",{children:\" Explore \"}),/*#__PURE__*/_jsx(\"div\",{className:\"posts-wrapper\",children:posts&&posts.length&&posts.map(function(post){var _id=post._id,date=post.date,postedBy=post.postedBy,likes=post.likes,comments=post.comments,postMedia=post.postMedia;return/*#__PURE__*/_jsx(\"div\",{className:\"post-container\",children:/*#__PURE__*/_jsx(PostCard,{id:_id,date:date,postedBy:postedBy,media:postMedia,likes:likes,comments:comments})},_id);})})]});};var mapStateTOProps=function mapStateTOProps(_ref2){var post=_ref2.post;return{posts:post.posts};};export default connect(mapStateTOProps,{getPosts:getPosts})(ExploreScreen);","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/screens/Explore/index.js"],"names":["React","useState","useEffect","Fragment","Header","PostCard","getPosts","connect","useHistory","ExploreScreen","posts","history","subscirbe","console","log","length","map","post","_id","date","postedBy","likes","comments","postMedia","mapStateTOProps"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,QAArC,KAAqD,OAArD,CACA,MAAO,cAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,mCAArB,CAEA,OAASC,QAAT,KAAyB,iCAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAyB,IAAtBH,CAAAA,QAAsB,MAAtBA,QAAsB,CAAZI,KAAY,MAAZA,KAAY,CAE3C,GAAMC,CAAAA,OAAO,CAAGH,UAAU,EAA1B,CACAN,SAAS,CAAC,UAAM,CACZ,GAAIU,CAAAA,SAAS,CAAG,IAAhB,CACA,GAAIA,SAAJ,CAAe,CACXN,QAAQ,CAACK,OAAD,CAAR,CACH,CACD,MAAO,kBAAMC,CAAAA,SAAS,CAAG,IAAlB,EAAP,CACH,CANQ,CAMN,EANM,CAAT,CAQAC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAQA,mBAEI,aAAK,SAAS,CAAC,WAAf,wBACI,KAAC,MAAD,IADJ,cAEI,gCAFJ,cAGI,YAAK,SAAS,CAAC,eAAf,UACKA,KAAK,EAAIA,KAAK,CAACK,MAAf,EAAyBL,KAAK,CAACM,GAAN,CAAU,SAACC,IAAD,CAAU,IAClCC,CAAAA,GADkC,CACkBD,IADlB,CAClCC,GADkC,CAC7BC,IAD6B,CACkBF,IADlB,CAC7BE,IAD6B,CACvBC,QADuB,CACkBH,IADlB,CACvBG,QADuB,CACbC,KADa,CACkBJ,IADlB,CACbI,KADa,CACNC,QADM,CACkBL,IADlB,CACNK,QADM,CACIC,SADJ,CACkBN,IADlB,CACIM,SADJ,CAE1C,mBAEI,YAAK,SAAS,CAAC,gBAAf,uBACI,KAAC,QAAD,EACI,EAAE,CAAEL,GADR,CAEI,IAAI,CAAEC,IAFV,CAGI,QAAQ,CAAEC,QAHd,CAII,KAAK,CAAEG,SAJX,CAKI,KAAK,CAAEF,KALX,CAMI,QAAQ,CAAEC,QANd,EADJ,EAAqCJ,GAArC,CAFJ,CAgBH,CAlByB,CAD9B,EAHJ,GAFJ,CA8BH,CAjDD,CAmDA,GAAMM,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,OAAc,IAAXP,CAAAA,IAAW,OAAXA,IAAW,CAClC,MAAO,CACHP,KAAK,CAAEO,IAAI,CAACP,KADT,CAAP,CAGH,CAJD,CAKA,cAAeH,CAAAA,OAAO,CAACiB,eAAD,CAAkB,CAAElB,QAAQ,CAARA,QAAF,CAAlB,CAAP,CAAuCG,aAAvC,CAAf","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './style.scss'\nimport Header from '../../component/Header';\nimport PostCard from '../../component/postcard/PostCard';\n\nimport { getPosts } from '../../redux/Actions/postActions'\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst ExploreScreen = ({ getPosts, posts }) => {\n\n    const history = useHistory();\n    useEffect(() => {\n        let subscirbe = true;\n        if (subscirbe) {\n            getPosts(history)\n        }\n        return () => subscirbe = null\n    }, []);\n\n    console.log(posts)\n\n\n\n\n\n\n\n    return (\n\n        <div className=\"container\">\n            <Header />\n            <p> Explore </p>\n            <div className=\"posts-wrapper\">\n                {posts && posts.length && posts.map((post) => {\n                    const { _id, date, postedBy, likes, comments, postMedia } = post;\n                    return (\n\n                        <div className=\"post-container\" key={_id}>\n                            <PostCard\n                                id={_id}\n                                date={date}\n                                postedBy={postedBy}\n                                media={postMedia}\n                                likes={likes}\n                                comments={comments}\n                            />\n\n                        </div>\n\n\n                    )\n                })}\n\n            </div>\n\n        </div>\n    )\n};\n\nconst mapStateTOProps = ({ post }) => {\n    return {\n        posts: post.posts\n    }\n}\nexport default connect(mapStateTOProps, { getPosts })(ExploreScreen);"]},"metadata":{},"sourceType":"module"}