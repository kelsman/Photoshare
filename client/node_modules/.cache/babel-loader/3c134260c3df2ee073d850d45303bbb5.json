{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/screens/Home/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './style.scss';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { loaduser } from '../../redux/Actions/userActions';\nimport { retrieveFeedPosts } from '../../redux/Actions/postActions';\nimport { retrieveFeedPostsStart } from '../../redux/feed/feedAction'; // import Header from '../../component/Header';\n\nimport Menu from '../../component/MenuButtons';\nimport NavigationHeader from '../../component/NavigationHeader';\nimport SideBar from '../../component/SideBar';\nimport Cards from '../../component/Cards';\nimport Loader from '../../component/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem('authToken');\n\nconst HomeScreen = ({\n  loaduser,\n  currentUser,\n  retrieveFeedPosts,\n  retrieveFeedPostsStart,\n  posts\n}) => {\n  _s();\n\n  const [isFetching, setIsFetching] = React.useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    let subscribe = true;\n\n    const retrivefeed = async () => {\n      await retrieveFeedPostsStart(history);\n      setIsFetching(false);\n    };\n\n    if (subscribe) {\n      retrivefeed();\n    }\n\n    return () => subscribe = null;\n  }, [retrieveFeedPostsStart]);\n\n  if (!posts && isFetching === true) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeScreen\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Cards, {\n          isFetching: isFetching\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeScreen, \"eJzQI7rqztJW4xu52rD13GTafOQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomeScreen;\n\nconst mapStateToProps = ({\n  user,\n  post,\n  feed\n}) => {\n  return {\n    currentUser: user.currentUser,\n    posts: feed.posts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loaduser,\n  retrieveFeedPosts,\n  retrieveFeedPostsStart\n})(HomeScreen);\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/screens/Home/HomeScreen.js"],"names":["React","useEffect","connect","useHistory","loaduser","retrieveFeedPosts","retrieveFeedPostsStart","Menu","NavigationHeader","SideBar","Cards","Loader","token","localStorage","getItem","HomeScreen","currentUser","posts","isFetching","setIsFetching","useState","history","subscribe","retrivefeed","mapStateToProps","user","post","feed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,sBAAT,QAAuC,6BAAvC,C,CAEA;;AAEA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAClBX,EAAAA,QADkB;AAElBY,EAAAA,WAFkB;AAGlBX,EAAAA,iBAHkB;AAIlBC,EAAAA,sBAJkB;AAKlBW,EAAAA;AALkB,CAAD,KAMb;AAAA;;AACJ,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,KAAK,CAACoB,QAAN,CAAe,IAAf,CAApC;AAEA,QAAMC,OAAO,GAAGlB,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqB,SAAS,GAAG,IAAhB;;AACA,UAAMC,WAAW,GAAG,YAAY;AAC9B,YAAMjB,sBAAsB,CAACe,OAAD,CAA5B;AACAF,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHD;;AAIA,QAAIG,SAAJ,EAAe;AACbC,MAAAA,WAAW;AACZ;;AACD,WAAO,MAAOD,SAAS,GAAG,IAA1B;AACD,GAVQ,EAUN,CAAChB,sBAAD,CAVM,CAAT;;AAYA,MAAI,CAACW,KAAD,IAAUC,UAAU,KAAK,IAA7B,EAAmC;AACjC,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,UAAU,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzCD;;GAAMH,U;UASYZ,U;;;KATZY,U;;AA2CN,MAAMS,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AAChD,SAAO;AACLX,IAAAA,WAAW,EAAES,IAAI,CAACT,WADb;AAELC,IAAAA,KAAK,EAAEU,IAAI,CAACV;AAFP,GAAP;AAID,CALD;;AAOA,eAAef,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA,QAAF;AAAYC,EAAAA,iBAAZ;AAA+BC,EAAAA;AAA/B,CAAlB,CAAP,CACbS,UADa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport './style.scss';\n\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { loaduser } from '../../redux/Actions/userActions';\nimport { retrieveFeedPosts } from '../../redux/Actions/postActions';\nimport { retrieveFeedPostsStart } from '../../redux/feed/feedAction';\n\n// import Header from '../../component/Header';\n\nimport Menu from '../../component/MenuButtons';\nimport NavigationHeader from '../../component/NavigationHeader';\nimport SideBar from '../../component/SideBar';\nimport Cards from '../../component/Cards';\nimport Loader from '../../component/Loader';\n\nconst token = localStorage.getItem('authToken');\n\nconst HomeScreen = ({\n  loaduser,\n  currentUser,\n  retrieveFeedPosts,\n  retrieveFeedPostsStart,\n  posts,\n}) => {\n  const [isFetching, setIsFetching] = React.useState(true);\n\n  const history = useHistory();\n\n  useEffect(() => {\n    let subscribe = true;\n    const retrivefeed = async () => {\n      await retrieveFeedPostsStart(history);\n      setIsFetching(false);\n    };\n    if (subscribe) {\n      retrivefeed();\n    }\n    return () => (subscribe = null);\n  }, [retrieveFeedPostsStart]);\n\n  if (!posts && isFetching === true) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"homeScreen\">\n      {/*  the navigation Header */}\n      <NavigationHeader />\n\n      {/* main */}\n      <main>\n        <div className=\"container\">\n          <Cards isFetching={isFetching} />\n          <SideBar />\n        </div>\n      </main>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ user, post, feed }) => {\n  return {\n    currentUser: user.currentUser,\n    posts: feed.posts,\n  };\n};\n\nexport default connect(mapStateToProps, { loaduser, retrieveFeedPosts, retrieveFeedPostsStart })(\n  HomeScreen,\n);\n"]},"metadata":{},"sourceType":"module"}