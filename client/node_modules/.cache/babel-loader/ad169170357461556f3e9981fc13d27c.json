{"ast":null,"code":"import * as postActionTypes from '../Constants/postConstants';\nimport { updateComment } from '../Helpers';\nconst initState = {\n  isLoading: true,\n  post: null,\n  posts: null,\n  myposts: [],\n  error: {\n    getError: '',\n    postError: '',\n    commentError: '',\n    likeError: ''\n  }\n};\n\nconst postReducer = (state = initState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case postActionTypes.GET_POSTS_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        posts: payload\n      };\n\n    case postActionTypes.GET_POSTS_FAIL:\n      return { ...state,\n        isLoading: false,\n        error: {\n          getError: payload\n        }\n      };\n\n    case postActionTypes.LIKE_POST_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        post: { ...state.post,\n          likes: payload.likes\n        }\n      };\n\n    case postActionTypes.LIKE_POST_FAIL:\n      return { ...state,\n        isLoading: false,\n        error: {\n          likeError: payload\n        }\n      };\n\n    case postActionTypes.COMMENT_POST_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        post: { ...state.post,\n          comment: payload.comments\n        }\n      };\n\n    case postActionTypes.COMMENT_POST_FAIL:\n      return { ...state,\n        isLoading: false,\n        error: {\n          commentError: payload\n        }\n      };\n\n    case postActionTypes.GET_SINGLE_POST_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        post: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/Reducers/postReducer.js"],"names":["postActionTypes","updateComment","initState","isLoading","post","posts","myposts","error","getError","postError","commentError","likeError","postReducer","state","type","payload","GET_POSTS_SUCCESS","GET_POSTS_FAIL","LIKE_POST_SUCCESS","likes","LIKE_POST_FAIL","COMMENT_POST_SUCCESS","comment","comments","COMMENT_POST_FAIL","GET_SINGLE_POST_SUCCESS"],"mappings":"AAAA,OAAO,KAAKA,eAAZ,MAAiC,4BAAjC;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,IAAI,EAAE,IAFQ;AAGdC,EAAAA,KAAK,EAAE,IAHO;AAIdC,EAAAA,OAAO,EAAE,EAJK;AAKdC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,SAAS,EAAE,EAFR;AAGHC,IAAAA,YAAY,EAAE,EAHX;AAIHC,IAAAA,SAAS,EAAE;AAJR;AALO,CAAlB;;AAcA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGX,SAAT,EAAoB;AAAEY,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,KAA0C;AAE1D,UAAQD,IAAR;AACI,SAAKd,eAAe,CAACgB,iBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHV,QAAAA,SAAS,EAAE,KAFR;AAGHE,QAAAA,KAAK,EAAEU;AAHJ,OAAP;;AAKJ,SAAKf,eAAe,CAACiB,cAArB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHV,QAAAA,SAAS,EAAE,KAFR;AAGHI,QAAAA,KAAK,EAAE;AACHC,UAAAA,QAAQ,EAAEO;AADP;AAHJ,OAAP;;AAQJ,SAAKf,eAAe,CAACkB,iBAArB;AACI,aAAO,EACH,GAAGL,KADA;AAEHV,QAAAA,SAAS,EAAE,KAFR;AAGHC,QAAAA,IAAI,EAAE,EACF,GAAGS,KAAK,CAACT,IADP;AAEFe,UAAAA,KAAK,EAAEJ,OAAO,CAACI;AAFb;AAHH,OAAP;;AAQJ,SAAKnB,eAAe,CAACoB,cAArB;AACI,aAAO,EACH,GAAGP,KADA;AAEHV,QAAAA,SAAS,EAAE,KAFR;AAGHI,QAAAA,KAAK,EAAE;AACHI,UAAAA,SAAS,EAAEI;AADR;AAHJ,OAAP;;AAOJ,SAAKf,eAAe,CAACqB,oBAArB;AACI,aAAO,EACH,GAAGR,KADA;AAEHV,QAAAA,SAAS,EAAE,KAFR;AAGHC,QAAAA,IAAI,EAAE,EACF,GAAGS,KAAK,CAACT,IADP;AAEFkB,UAAAA,OAAO,EAAEP,OAAO,CAACQ;AAFf;AAHH,OAAP;;AAQJ,SAAKvB,eAAe,CAACwB,iBAArB;AACI,aAAO,EACH,GAAGX,KADA;AAEHV,QAAAA,SAAS,EAAE,KAFR;AAGHI,QAAAA,KAAK,EAAE;AACHG,UAAAA,YAAY,EAAEK;AADX;AAHJ,OAAP;;AASJ,SAAKf,eAAe,CAACyB,uBAArB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHV,QAAAA,SAAS,EAAE,KAFR;AAGHC,QAAAA,IAAI,EAAEW;AAHH,OAAP;;AAKJ;AACI,aAAOF,KAAP;AA3DR;AA+DH,CAjED;;AAmEA,eAAeD,WAAf","sourcesContent":["import * as postActionTypes from '../Constants/postConstants'\nimport { updateComment } from '../Helpers';\nconst initState = {\n    isLoading: true,\n    post: null,\n    posts: null,\n    myposts: [],\n    error: {\n        getError: '',\n        postError: '',\n        commentError: '',\n        likeError: '',\n    }\n};\n\n\nconst postReducer = (state = initState, { type, payload }) => {\n\n    switch (type) {\n        case postActionTypes.GET_POSTS_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                posts: payload\n            }\n        case postActionTypes.GET_POSTS_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    getError: payload\n                }\n            };\n\n        case postActionTypes.LIKE_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: {\n                    ...state.post,\n                    likes: payload.likes\n                }\n            }\n        case postActionTypes.LIKE_POST_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    likeError: payload\n                }\n            }\n        case postActionTypes.COMMENT_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: {\n                    ...state.post,\n                    comment: payload.comments\n                }\n            }\n        case postActionTypes.COMMENT_POST_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    commentError: payload\n                }\n            }\n\n\n        case postActionTypes.GET_SINGLE_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: payload\n            }\n        default:\n            return state;\n\n\n    }\n};\n\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}