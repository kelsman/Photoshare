{"ast":null,"code":"import { suggestedUserTypes } from './ActionTypes';\nimport { setToken } from '../../utils';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\nconst token = localStorage.getItem('authToken');\nexport const getSuggestedUser = () => async dispatch => {\n  if (token) {\n    setToken(token);\n  }\n\n  try {\n    const response = await axios.get('api/route/user/suggestedUsers');\n\n    if (response) {\n      dispatch({\n        type: suggestedUserTypes.FETCH_SUGGESTED_USERS_SUCCESS,\n        payload: response.data.users\n      });\n    }\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: suggestedUserTypes.FETCH_SUGGESTED_USERS_FAIL,\n        payload: error.response.data\n      });\n      cogoToast.error(`${error.response.data.msg}`);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/Actions.js"],"names":["suggestedUserTypes","setToken","cogoToast","axios","token","localStorage","getItem","getSuggestedUser","dispatch","response","get","type","FETCH_SUGGESTED_USERS_SUCCESS","payload","data","users","error","FETCH_SUGGESTED_USERS_FAIL","msg"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,eAAnC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,MAAIJ,KAAJ,EAAW;AACTH,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACD;;AACD,MAAI;AACF,UAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,+BAAV,CAAvB;;AACA,QAAID,QAAJ,EAAc;AACZD,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEX,kBAAkB,CAACY,6BADlB;AAEPC,QAAAA,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcC;AAFhB,OAAD,CAAR;AAID;AACF,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACP,QAAV,EAAoB;AAClBD,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEX,kBAAkB,CAACiB,0BADlB;AAEPJ,QAAAA,OAAO,EAAEG,KAAK,CAACP,QAAN,CAAeK;AAFjB,OAAD,CAAR;AAIAZ,MAAAA,SAAS,CAACc,KAAV,CAAiB,GAAEA,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBI,GAAI,EAA3C;AACD;AACF;AACF,CArBM","sourcesContent":["import { suggestedUserTypes } from './ActionTypes';\nimport { setToken } from '../../utils';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\nconst token = localStorage.getItem('authToken');\n\nexport const getSuggestedUser = () => async (dispatch) => {\n  if (token) {\n    setToken(token);\n  }\n  try {\n    const response = await axios.get('api/route/user/suggestedUsers');\n    if (response) {\n      dispatch({\n        type: suggestedUserTypes.FETCH_SUGGESTED_USERS_SUCCESS,\n        payload: response.data.users,\n      });\n    }\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: suggestedUserTypes.FETCH_SUGGESTED_USERS_FAIL,\n        payload: error.response.data,\n      });\n      cogoToast.error(`${error.response.data.msg}`);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}