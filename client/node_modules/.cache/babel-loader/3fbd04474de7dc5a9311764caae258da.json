{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/screens/PostPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport './style.scss';\nimport { useHistory } from 'react-router-dom'; // componnets\n\nimport NavigationHeader from '../../component/NavigationHeader';\nimport CommentList from '../../component/CommentList';\nimport Profile from '../../component/Profile';\nimport CardMenu from '../../component/Cards/CardMenu';\nimport MobileTabMenu from '../../component/MobileTabMenu';\nimport Card from '../../component/Cards/Card'; // external liberires\n\nimport * as Icon from 'react-feather';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExploreMobileCard from '../../component/Cards/ExploreCard';\nimport { commentPost } from '../../redux/Actions/postActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostPage({\n  commentPost,\n  socket\n}) {\n  _s();\n\n  const history = useHistory();\n  const [commentText, setCommentText] = React.useState('');\n  const [comments, setComments] = useState(history.location.state.post.comments);\n  const [post, setPost] = React.useState(history.location.state.post);\n  const inputRef = useRef();\n\n  const focus = () => {\n    inputRef.current.focus();\n  };\n\n  console.log(comments);\n\n  const handleCommentPost = async event => {\n    event.preventDefault();\n    console.info('submitting btn');\n\n    try {\n      await commentPost(post._id, commentText);\n\n      if (socket) {\n        socket.on('addComment', data => {\n          // const newComent = {\n          //     name: data.name,\n          // }\n          // setComments(prevState => [...prevState, data])\n          console.log(data);\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; // console.log(post);\n\n\n  const {\n    location: {\n      pathname,\n      state\n    }\n  } = history;\n  const {\n    avatar,\n    postedBy,\n    likes,\n    date,\n    postMedia\n  } = post;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(NavigationHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: postMedia,\n            alt: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile\",\n            children: [/*#__PURE__*/_jsxDEV(Profile, {\n              image: postedBy.avatar,\n              iconSize: \"medium\",\n              username: postedBy.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Icon.MoreHorizontal, {\n              className: \"more-icon\",\n              size: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-section\",\n            children: comments.map(comment => /*#__PURE__*/_jsxDEV(CommentList, {\n              accountName: comment.name,\n              comment: comment.text,\n              commentImage: comment.avatar,\n              commentTime: comment.date\n            }, uuidv4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card_icon_menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-menu\",\n              children: /*#__PURE__*/_jsxDEV(CardMenu, {\n                focus: focus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), !likes.length ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"like-title\",\n              children: [\" Be the first to \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"like this\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 80\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [likes.length, \" Likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"post-date\",\n              children: moment(date).format('MMM D')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addComment\",\n            onSubmit: handleCommentPost,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: inputRef,\n              value: commentText,\n              onChange: e => setCommentText(e.target.value),\n              type: \"text\",\n              placeholder: \"Add a comment...\",\n              className: \"commentText\",\n              name: \"commentText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: commentText ? false : true,\n              type: \"submit\",\n              className: \"postText-btn\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile_post_content\",\n        children: /*#__PURE__*/_jsxDEV(ExploreMobileCard, {\n          likes: likes,\n          comments: comments,\n          image: postMedia,\n          postedBy: postedBy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostPage, \"LlRKxIU8qoP3AEmtjg8Ez24C10k=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostPage;\n\nconst mapStateToProps = ({\n  socket\n}) => {\n  return {\n    socket: socket.socket\n  };\n};\n\nexport default connect(mapStateToProps, {\n  commentPost\n})(PostPage); //  image,\n// comments,\n// likedByText,\n// likedByNumber,\n// hours\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/screens/PostPage/index.js"],"names":["React","useRef","useState","useHistory","NavigationHeader","CommentList","Profile","CardMenu","MobileTabMenu","Card","Icon","moment","v4","uuidv4","ExploreMobileCard","commentPost","connect","PostPage","socket","history","commentText","setCommentText","comments","setComments","location","state","post","setPost","inputRef","focus","current","console","log","handleCommentPost","event","preventDefault","info","_id","on","data","error","pathname","avatar","postedBy","likes","date","postMedia","username","map","comment","name","text","length","format","e","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\n\nimport './style.scss';\nimport { useHistory } from 'react-router-dom';\n\n// componnets\nimport NavigationHeader from '../../component/NavigationHeader';\nimport CommentList from '../../component/CommentList';\nimport Profile from '../../component/Profile';\nimport CardMenu from '../../component/Cards/CardMenu';\nimport MobileTabMenu from '../../component/MobileTabMenu';\nimport Card from '../../component/Cards/Card'\n// external liberires\nimport * as Icon from 'react-feather'\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExploreMobileCard from '../../component/Cards/ExploreCard';\n\nimport { commentPost } from '../../redux/Actions/postActions';\nimport { connect } from 'react-redux';\n\n\nfunction PostPage({ commentPost, socket }) {\n\n    const history = useHistory();\n\n    const [commentText, setCommentText] = React.useState('');\n    const [comments, setComments] = useState(history.location.state.post.comments);\n\n    const [post, setPost] = React.useState(history.location.state.post)\n    const inputRef = useRef()\n\n    const focus = () => {\n        inputRef.current.focus()\n    };\n    console.log(comments)\n    const handleCommentPost = async (event) => {\n        event.preventDefault();\n        console.info('submitting btn')\n        try {\n            await commentPost(post._id, commentText);\n            if (socket) {\n                socket.on('addComment', (data) => {\n                    // const newComent = {\n                    //     name: data.name,\n\n                    // }\n                    // setComments(prevState => [...prevState, data])\n                    console.log(data)\n                })\n\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    // console.log(post);\n    const { location: { pathname, state } } = history;\n    const { avatar, postedBy, likes, date, postMedia, } = post;\n    return (\n        <div className=\"post-page\">\n            <header>\n                <NavigationHeader />\n            </header>\n\n            <main>\n                <div className=\"post_content\">\n\n                    <div className=\"post_image\">\n                        <img src={postMedia} alt=\"image\" />\n                    </div>\n                    <div className=\"post_details\">\n                        <div className=\"profile\">\n                            <Profile image={postedBy.avatar} iconSize=\"medium\" username={postedBy.username} />\n                            <Icon.MoreHorizontal className=\"more-icon\" size={26} />\n                        </div>\n\n                        {/* comment section */}\n                        <div className=\"comment-section\">\n                            {comments.map((comment) => (\n                                <CommentList\n                                    key={uuidv4()}\n                                    accountName={comment.name}\n                                    comment={comment.text}\n                                    commentImage={comment.avatar}\n                                    commentTime={comment.date}\n                                />\n                            ))}\n\n                        </div>\n\n                        {/* icons*/}\n                        <div className=\"card_icon_menu\">\n                            <div className=\"card-menu\">\n                                <CardMenu focus={focus} />\n                            </div>\n                            {!likes.length ?\n                                <small className=\"like-title\"> Be the first to <b>like this</b></small>\n                                :\n                                <small>{likes.length} Likes</small>\n                            }\n\n\n                            <small className=\"post-date\">\n                                {\n                                    moment(date).format('MMM D')\n                                }\n                            </small>\n                        </div>\n\n                        {/*  add a comment form */}\n                        <form className=\"addComment\" onSubmit={handleCommentPost}>\n                            <input\n                                ref={inputRef}\n                                value={commentText}\n                                onChange={(e) => setCommentText(e.target.value)}\n                                type=\"text\"\n                                placeholder=\"Add a comment...\"\n                                className=\"commentText\"\n                                name=\"commentText\"\n                            />\n                            <button\n\n                                disabled={commentText ? false : true}\n                                type=\"submit\"\n                                className=\"postText-btn\">Post</button>\n                        </form>\n\n                    </div>\n\n                </div>\n                <div className=\"mobile_post_content\">\n                    <ExploreMobileCard\n                        likes={likes}\n                        comments={comments}\n                        image={postMedia}\n                        postedBy={postedBy}\n                    />\n                </div>\n\n            </main>\n\n        </div>\n    )\n}\nconst mapStateToProps = ({ socket }) => {\n    return {\n        socket: socket.socket\n    }\n}\nexport default connect(mapStateToProps, { commentPost })(PostPage)\n//  image,\n// comments,\n// likedByText,\n// likedByNumber,\n// hours\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}