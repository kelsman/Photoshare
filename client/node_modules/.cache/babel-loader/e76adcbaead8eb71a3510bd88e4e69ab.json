{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/screens/PostPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport './style.scss';\nimport { useHistory, useParams } from 'react-router-dom'; // componnets\n\nimport NavigationHeader from '../../component/NavigationHeader';\nimport CommentList from '../../component/CommentList';\nimport Profile from '../../component/Profile';\nimport CardMenu from '../../component/Cards/CardMenu';\nimport MobileTabMenu from '../../component/MobileTabMenu';\nimport Card from '../../component/Cards/Card'; // external liberires\n\nimport * as Icon from 'react-feather';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExploreMobileCard from '../../component/Cards/ExploreCard'; // redux imports\n\nimport { commentPost, getPosts, getSinglePost, likePost, unLikePost } from '../../redux/Actions/postActions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { truncate } from 'fs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostPage({\n  commentPost,\n  socket,\n  getPosts,\n  user,\n  userpost,\n  getSinglePost,\n  history,\n  likePost,\n  unLikePost\n}) {\n  _s();\n\n  //    get postId from params\n  const {\n    postId\n  } = useParams(); //  states \n\n  const [commentText, setCommentText] = React.useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLikedButtonClicked, setIsLikedButtonClicked] = useState(false);\n  const inputRef = useRef();\n\n  const focus = () => {\n    inputRef.current.focus();\n  };\n\n  useEffect(async () => {\n    let subscribe = true;\n\n    if (subscribe) {\n      try {\n        await getSinglePost(postId);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n\n    return () => subscribe = null;\n  }, [getSinglePost]); //  @ functions  all functions defined here\n\n  const ifUserLiked = () => {\n    const doesExist = userpost.likes.filter(like => {\n      like.likedBy.toString() === user._id.toString();\n    });\n\n    if (doesExist) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const likeFunc = async () => {\n    try {\n      await likePost(userpost._id, socket, history);\n      setIsLikedButtonClicked(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const unlikeFunc = async () => {\n    try {\n      await unLikePost(userpost._id, socket, history);\n      setIsLikedButtonClicked(false);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // const getUserPost = async (postId) => {\n  //     try {\n  //         await getSinglePost(postId)\n  //     } catch (error) {\n  //         console.log(error)\n  //     }\n  // };\n\n\n  const handleCommentPost = async event => {\n    event.preventDefault();\n    console.info('submitting btn');\n\n    try {\n      await commentPost(userpost._id, commentText, socket, history);\n      setCommentText('');\n    } catch (error) {\n      console.log(error.message);\n    }\n  }; // const { location: { pathname, state } } = history;\n\n\n  const handleCommentTextChange = e => {\n    setCommentText(e.target.value);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(NavigationHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: userpost.postMedia,\n            alt: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile\",\n            children: [/*#__PURE__*/_jsxDEV(Profile, {\n              image: userpost.postedBy.avatar,\n              iconSize: \"medium\",\n              username: userpost.postedBy.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Icon.MoreHorizontal, {\n              className: \"more-icon\",\n              size: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-section\",\n            children: userpost.comments.map(comment => /*#__PURE__*/_jsxDEV(CommentList, {\n              accountName: comment.name,\n              comment: comment.text,\n              commentImage: comment.avatar,\n              commentTime: comment.date\n            }, uuidv4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card_icon_menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-menu\",\n              children: /*#__PURE__*/_jsxDEV(CardMenu, {\n                checkUserLiked: ifUserLiked,\n                focus: focus,\n                likeFunc: likeFunc,\n                isLiked: isLikedButtonClicked,\n                unlikeFunc: unlikeFunc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), !userpost.likes.length ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"like-title\",\n              children: [\" Be the first to \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"like this\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 80\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [userpost.likes.length, \" Likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"post-date\",\n              children: moment(userpost.date).format('MMM D')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addComment\",\n            onSubmit: handleCommentPost,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: inputRef,\n              value: commentText,\n              onChange: handleCommentTextChange,\n              type: \"text\",\n              placeholder: \"Add a comment...\",\n              className: \"commentText\",\n              name: \"commentText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: commentText ? false : true,\n              type: \"submit\",\n              className: \"postText-btn\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile_post_content\",\n        children: /*#__PURE__*/_jsxDEV(ExploreMobileCard, {\n          likeFunc: likeFunc,\n          isLiked: isLikedButtonClicked,\n          unlikeFunc: unlikeFunc,\n          likes: userpost.likes,\n          comments: userpost.comments,\n          image: userpost.postMedia,\n          postedBy: userpost.postedBy,\n          handleCommentPost: handleCommentPost,\n          commenText: commentText,\n          onChange: handleCommentTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostPage, \"goFdAG9D/rxAdoGagAoFV8iFNyM=\", false, function () {\n  return [useParams];\n});\n\n_c = PostPage;\n\nconst mapStateToProps = ({\n  socket,\n  post,\n  user\n}) => {\n  return {\n    socket: socket.socket,\n    userpost: post.post,\n    user: user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  commentPost,\n  getPosts,\n  getSinglePost,\n  likePost,\n  unLikePost\n})(withRouter(PostPage));\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/screens/PostPage/index.js"],"names":["React","useRef","useState","useEffect","useHistory","useParams","NavigationHeader","CommentList","Profile","CardMenu","MobileTabMenu","Card","Icon","moment","v4","uuidv4","ExploreMobileCard","commentPost","getPosts","getSinglePost","likePost","unLikePost","connect","withRouter","truncate","PostPage","socket","user","userpost","history","postId","commentText","setCommentText","isLoading","setIsLoading","isLikedButtonClicked","setIsLikedButtonClicked","inputRef","focus","current","subscribe","error","console","log","message","ifUserLiked","doesExist","likes","filter","like","likedBy","toString","_id","likeFunc","unlikeFunc","handleCommentPost","event","preventDefault","info","handleCommentTextChange","e","target","value","postMedia","postedBy","avatar","username","comments","map","comment","name","text","date","length","format","mapStateToProps","post","currentUser"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport './style.scss';\nimport { useHistory, useParams } from 'react-router-dom';\n\n// componnets\nimport NavigationHeader from '../../component/NavigationHeader';\nimport CommentList from '../../component/CommentList';\nimport Profile from '../../component/Profile';\nimport CardMenu from '../../component/Cards/CardMenu';\nimport MobileTabMenu from '../../component/MobileTabMenu';\nimport Card from '../../component/Cards/Card'\n\n// external liberires\nimport * as Icon from 'react-feather'\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExploreMobileCard from '../../component/Cards/ExploreCard';\n\n// redux imports\nimport { commentPost, getPosts, getSinglePost, likePost, unLikePost } from '../../redux/Actions/postActions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { truncate } from 'fs';\n\n\nfunction PostPage({ commentPost, socket, getPosts, user, userpost, getSinglePost, history, likePost, unLikePost }) {\n\n    //    get postId from params\n    const { postId } = useParams();\n\n    //  states \n    const [commentText, setCommentText] = React.useState('');\n    const [isLoading, setIsLoading] = useState(true);\n    const [isLikedButtonClicked, setIsLikedButtonClicked] = useState(false)\n    const inputRef = useRef()\n\n    const focus = () => {\n        inputRef.current.focus()\n    };\n\n\n    useEffect(async () => {\n        let subscribe = true;\n        if (subscribe) {\n            try {\n                await getSinglePost(postId)\n                setIsLoading(false)\n            } catch (error) {\n                console.log(error.message)\n            }\n\n        }\n        return () => subscribe = null;\n    }, [getSinglePost]);\n\n\n\n    //  @ functions  all functions defined here\n    const ifUserLiked = () => {\n        const doesExist = userpost.likes.filter((like) => {\n            like.likedBy.toString() === user._id.toString()\n        })\n        if (doesExist) {\n            return true\n        } else {\n            return false\n        }\n    }\n    const likeFunc = async () => {\n        try {\n            await likePost(userpost._id, socket, history)\n            setIsLikedButtonClicked(true)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    const unlikeFunc = async () => {\n        try {\n            await unLikePost(userpost._id, socket, history)\n            setIsLikedButtonClicked(false)\n\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    // const getUserPost = async (postId) => {\n    //     try {\n    //         await getSinglePost(postId)\n    //     } catch (error) {\n    //         console.log(error)\n    //     }\n    // };\n\n    const handleCommentPost = async (event) => {\n        event.preventDefault();\n        console.info('submitting btn')\n        try {\n            await commentPost(userpost._id, commentText, socket, history);\n            setCommentText('');\n\n\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n\n    // const { location: { pathname, state } } = history;\n\n    const handleCommentTextChange = (e) => {\n        setCommentText(e.target.value)\n    }\n\n    if (isLoading) {\n        return <p>Loading...</p>\n    }\n    return (\n        <div className=\"post-page\">\n\n\n            <header>\n                <NavigationHeader />\n            </header>\n\n            <main>\n                <div className=\"post_content\">\n\n                    <div className=\"post_image\">\n                        <img src={userpost.postMedia} alt=\"image\" />\n                    </div>\n                    <div className=\"post_details\">\n                        <div className=\"profile\">\n                            <Profile image={userpost.postedBy.avatar} iconSize=\"medium\" username={userpost.postedBy.username} />\n                            <Icon.MoreHorizontal className=\"more-icon\" size={26} />\n                        </div>\n\n                        {/* comment section */}\n                        <div className=\"comment-section\">\n                            {userpost.comments.map((comment) => (\n                                <CommentList\n                                    key={uuidv4()}\n                                    accountName={comment.name}\n                                    comment={comment.text}\n                                    commentImage={comment.avatar}\n                                    commentTime={comment.date}\n                                />\n                            ))}\n\n                        </div>\n\n                        {/* icons*/}\n                        <div className=\"card_icon_menu\">\n                            <div className=\"card-menu\">\n                                <CardMenu\n                                    checkUserLiked={ifUserLiked}\n                                    focus={focus}\n                                    likeFunc={likeFunc}\n                                    isLiked={isLikedButtonClicked}\n                                    unlikeFunc={unlikeFunc} />\n                            </div>\n                            {!userpost.likes.length ?\n                                <small className=\"like-title\"> Be the first to <b>like this</b></small>\n                                :\n                                <small>{userpost.likes.length} Likes</small>\n                            }\n\n\n                            <small className=\"post-date\">\n                                {\n                                    moment(userpost.date).format('MMM D')\n                                }\n                            </small>\n                        </div>\n\n                        {/*  add a comment form */}\n                        <form className=\"addComment\" onSubmit={handleCommentPost}>\n                            <input\n                                ref={inputRef}\n                                value={commentText}\n                                onChange={handleCommentTextChange}\n                                type=\"text\"\n                                placeholder=\"Add a comment...\"\n                                className=\"commentText\"\n                                name=\"commentText\"\n                            />\n                            <button\n\n                                disabled={commentText ? false : true}\n                                type=\"submit\"\n                                className=\"postText-btn\">Post</button>\n                        </form>\n\n                    </div>\n\n                </div>\n                <div className=\"mobile_post_content\">\n                    <ExploreMobileCard\n                        likeFunc={likeFunc}\n                        isLiked={isLikedButtonClicked}\n                        unlikeFunc={unlikeFunc}\n                        likes={userpost.likes}\n                        comments={userpost.comments}\n                        image={userpost.postMedia}\n                        postedBy={userpost.postedBy}\n                        handleCommentPost={handleCommentPost}\n                        commenText={commentText}\n\n                        onChange={handleCommentTextChange}\n                    />\n                </div>\n\n            </main>\n\n\n\n\n\n        </div>\n    )\n}\nconst mapStateToProps = ({ socket, post, user }) => {\n    return {\n        socket: socket.socket,\n        userpost: post.post,\n        user: user.currentUser\n    }\n}\nexport default connect(mapStateToProps,\n    { commentPost, getPosts, getSinglePost, likePost, unLikePost }\n)(withRouter(PostPage))\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}