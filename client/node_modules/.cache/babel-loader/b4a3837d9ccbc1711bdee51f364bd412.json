{"ast":null,"code":"import { suggestedUserTypes } from './ActionTypes';\nimport { setToken } from '../../utils';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\nconst token = localStorage.getItem('authToken');\nexport const getSuggestedUser = () => async dispatch => {\n  if (token) {\n    setToken(token);\n  }\n\n  try {\n    const response = await axios.get('api/route/user/suggestedUsers');\n\n    if (response) {\n      dispatch({\n        type: suggestedUserTypes.FETCH_SUGGESTED_USERS_SUCCESS,\n        payload: response.data.users\n      });\n    }\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: suggestedUserTypes.FETCH_SUGGESTED_USERS_FAIL,\n        payload: error.response.data\n      });\n      cogoToast.error(`${error.response.data.msg}`);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/Actions.js"],"names":["suggestedUserTypes","setToken","cogoToast","axios","token","localStorage","getItem","getSuggestedUser","dispatch","response","get","type","FETCH_SUGGESTED_USERS_SUCCESS","payload","data","users","error","FETCH_SUGGESTED_USERS_FAIL","msg"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,eAAnC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACpD,MAAIJ,KAAJ,EAAW;AACPH,IAAAA,QAAQ,CAACG,KAAD,CAAR;AACH;;AACD,MAAI;AACA,UAAMK,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,+BAAV,CAAvB;;AACA,QAAID,QAAJ,EAAc;AACVD,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEX,kBAAkB,CAACY,6BAA3B;AAA0DC,QAAAA,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcC;AAAjF,OAAD,CAAR;AAEH;AACJ,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,QAAIA,KAAK,CAACP,QAAV,EAAoB;AAChBD,MAAAA,QAAQ,CAAC;AAAEG,QAAAA,IAAI,EAAEX,kBAAkB,CAACiB,0BAA3B;AAAuDJ,QAAAA,OAAO,EAAEG,KAAK,CAACP,QAAN,CAAeK;AAA/E,OAAD,CAAR;AACAZ,MAAAA,SAAS,CAACc,KAAV,CAAiB,GAAEA,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBI,GAAI,EAA3C;AACH;AACJ;AACJ,CAhBM","sourcesContent":["import { suggestedUserTypes } from './ActionTypes'\nimport { setToken } from '../../utils'\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios'\nconst token = localStorage.getItem('authToken');\n\nexport const getSuggestedUser = () => async dispatch => {\n    if (token) {\n        setToken(token)\n    }\n    try {\n        const response = await axios.get('api/route/user/suggestedUsers');\n        if (response) {\n            dispatch({ type: suggestedUserTypes.FETCH_SUGGESTED_USERS_SUCCESS, payload: response.data.users })\n\n        }\n    } catch (error) {\n        if (error.response) {\n            dispatch({ type: suggestedUserTypes.FETCH_SUGGESTED_USERS_FAIL, payload: error.response.data })\n            cogoToast.error(`${error.response.data.msg}`)\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}