{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/Card/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './style.scss';\nimport { ReactComponent as CardButton } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/cardButton.svg\";\nimport CardMenu from '../CardMenu';\nimport CommentList from '../../CommentList';\nimport Profile from '../../Profile';\nimport moment from 'moment';\nimport ExploreCardMenu from '../../ExplorePostCardMenu';\nimport { commentPost } from '../../../redux/Actions/postActions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { likePost } from '../../../redux/Actions/postActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const [commentText, setCommentText] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const inputRef = useRef();\n  const {\n    storyBorder,\n    feed,\n    image,\n    comments,\n    likedByText,\n    likedByNumber,\n    accountName,\n    avatar,\n    hours\n  } = props;\n\n  const handlePost = async e => {\n    try {\n      e.preventDefault();\n      await dispatch(commentPost(feed._id, commentText, history));\n      setCommentText('');\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const likeFunc = async () => {\n    try {\n      await dispatch(likePost(feed._id, history)); // setIsLikedButtonClicked(true)\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const focus = () => {\n    inputRef.current.focus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Profile, {\n        iconSize: \"medium\",\n        image: avatar,\n        username: accountName,\n        storyBorder: storyBorder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardButton, {\n        className: \"cardButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"cardImage\",\n      src: image,\n      alt: \"card content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(ExploreCardMenu, {\n      focus: focus,\n      likeFunc: likeFunc,\n      userpost: feed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"likedBy\",\n      children: !feed.likes ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"like-title\",\n        children: [\" Be the first to \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"like this\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [feed.likes.length, \" Likes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments && comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(CommentList, {\n          accountName: comment.user,\n          comment: comment,\n          commentId: comment._id,\n          commentuser: comment._user,\n          commentText: comment.commentText,\n          userpost: feed,\n          accountName: comment.username,\n          comment: comment.commentText,\n          commentImage: comment.avatar,\n          commentTime: comment.commentDate\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timePosted\",\n      children: [moment().fromNow(feed.date, 'MM'), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePost,\n      className: \"addComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: commentText,\n        onChange: e => setCommentText(e.target.value),\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        className: \"commentText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: commentText ? false : true,\n        className: \"postText-btn\",\n        onSubmit: handlePost,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"B7OHORdzpUUU/bpmlLiOfrZphEc=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/Card/index.js"],"names":["React","useState","useRef","CardMenu","CommentList","Profile","moment","ExploreCardMenu","commentPost","useDispatch","useHistory","likePost","Card","props","commentText","setCommentText","history","dispatch","inputRef","storyBorder","feed","image","comments","likedByText","likedByNumber","accountName","avatar","hours","handlePost","e","preventDefault","_id","error","console","log","message","likeFunc","focus","current","likes","length","map","comment","user","_user","username","commentDate","fromNow","date","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react'\nimport './style.scss';\nimport { ReactComponent as CardButton } from '../../../assets/cardButton.svg'\nimport CardMenu from '../CardMenu';\nimport CommentList from '../../CommentList';\nimport Profile from '../../Profile';\nimport moment from 'moment';\nimport ExploreCardMenu from '../../ExplorePostCardMenu'\nimport { commentPost } from '../../../redux/Actions/postActions';\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { likePost } from '../../../redux/Actions/postActions'\n\nfunction Card(props) {\n\n    const [commentText, setCommentText] = useState('');\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const inputRef = useRef();\n\n    const { storyBorder,\n        feed,\n        image,\n        comments,\n        likedByText,\n        likedByNumber,\n        accountName,\n        avatar,\n        hours,\n    } = props;\n\n    const handlePost = async (e) => {\n        try {\n            e.preventDefault();\n            await dispatch(commentPost(feed._id, commentText, history))\n            setCommentText('')\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    const likeFunc = async () => {\n        try {\n            await dispatch(likePost(feed._id, history))\n            // setIsLikedButtonClicked(true)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const focus = () => {\n        inputRef.current.focus()\n    };\n    return (\n        <div className=\"card\">\n            <header>\n                <Profile iconSize=\"medium\" image={avatar} username={accountName} storyBorder={storyBorder} />\n                <CardButton className=\"cardButton\" />\n            </header>\n            <img className=\"cardImage\" src={image} alt=\"card content\" />\n            {/*  <CardMenu /> */}  <ExploreCardMenu focus={focus}\n                likeFunc={likeFunc} userpost={feed} />\n            <div className=\"likedBy\">\n                {/*  <Profile iconSize=\"small\" hideAccountName={true} /> */}\n                {/*  <span>\n                    Liked by <strong>{likedByText}</strong> and{\" \"}\n                    <strong>{likedByNumber} others</strong>\n                </span> */}\n                {!feed.likes ?\n                    <span className=\"like-title\"> Be the first to <b>like this</b></span>\n                    :\n                    <span>{feed.likes.length} Likes</span>\n                }\n\n            </div>\n            <div className=\"comments\">\n                {comments && comments.map((comment) => {\n                    return (\n                        <CommentList\n                            key={comment._id}\n                            accountName={comment.user}\n                            comment={comment}\n                            commentId={comment._id}\n                            commentuser={comment._user}\n                            commentText={comment.commentText}\n                            userpost={feed}\n                            accountName={comment.username}\n                            comment={comment.commentText}\n                            commentImage={comment.avatar}\n                            commentTime={comment.commentDate}\n\n                        />\n                    );\n                })}\n            </div>\n            <div className=\"timePosted\">{moment().fromNow(feed.date, 'MM')} </div>\n            <form onSubmit={handlePost} className=\"addComment\">\n                <input ref={inputRef} value={commentText} onChange={(e) => setCommentText(e.target.value)} type=\"text\" placeholder=\"Add a comment...\" className=\"commentText\" />\n                <button type='submit' disabled={commentText ? false : true} className=\"postText-btn\" onSubmit={handlePost}>Post</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}