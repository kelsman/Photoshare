{"ast":null,"code":"import feedTypes from './feedTypes';\nimport * as postActionTypes from '../Constants/postConstants';\nconst initState = {\n  posts: null,\n  fetching: true,\n  error: false,\n  hasMore: false\n};\n\nconst feedReducer = (state = initState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case feedTypes.FETCH_POSTS_SUCCESS:\n      return { ...state,\n        error: false,\n        fetching: false,\n        posts: payload\n      };\n\n    case feedTypes.FETCH_POSTS_FAILURE:\n      return { ...state,\n        fetching: false,\n        error: true\n      };\n\n    case postActionTypes.DELETE_COMMENT_SUCCESS:\n      return { ...state,\n        posts: state.posts.map(post => {\n          return post._id === payload._post ? { ...post,\n            comments: payload.comments\n          } : post;\n        })\n      };\n\n    case postActionTypes.COMMENT_POST_SUCCESS:\n      return { ...state,\n        posts: state.posts.map(post => {\n          return post._id === payload._post ? { ...post,\n            comments: payload.comments\n          } : post;\n        })\n      };\n\n    case postActionTypes.LIKE_POST_SUCCESS:\n      return { ...state,\n        posts: state.posts.map(post => {\n          return post._id === payload._post ? { ...post,\n            likes: payload.likes\n          } : post;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default feedReducer;","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedReducer.js"],"names":["feedTypes","postActionTypes","initState","posts","fetching","error","hasMore","feedReducer","state","type","payload","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","DELETE_COMMENT_SUCCESS","map","post","_id","_post","comments","COMMENT_POST_SUCCESS","LIKE_POST_SUCCESS","likes"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,OAAO,KAAKC,eAAZ,MAAiC,4BAAjC;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,IADO;AAEdC,EAAAA,QAAQ,EAAE,IAFI;AAGdC,EAAAA,KAAK,EAAE,KAHO;AAIdC,EAAAA,OAAO,EAAE;AAJK,CAAlB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,SAAT,EAAoB;AAAEO,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAApB,KAA0C;AAE1D,UAAQD,IAAR;AACI,SAAKT,SAAS,CAACW,mBAAf;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,KAAK,EAAE,KAFJ;AAGHD,QAAAA,QAAQ,EAAE,KAHP;AAIHD,QAAAA,KAAK,EAAEO;AAJJ,OAAP;;AAOJ,SAAKV,SAAS,CAACY,mBAAf;AACI,aAAO,EACH,GAAGJ,KADA;AAEHJ,QAAAA,QAAQ,EAAE,KAFP;AAGHC,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKJ,eAAe,CAACY,sBAArB;AAGI,aAAO,EACH,GAAGL,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAiBC,IAAD,IAAU;AAC7B,iBAAOA,IAAI,CAACC,GAAL,KAAaN,OAAO,CAACO,KAArB,GAA6B,EAAE,GAAGF,IAAL;AAAWG,YAAAA,QAAQ,EAAER,OAAO,CAACQ;AAA7B,WAA7B,GAAuEH,IAA9E;AACH,SAFM;AAFJ,OAAP;;AAMJ,SAAKd,eAAe,CAACkB,oBAArB;AACI,aAAO,EACH,GAAGX,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAiBC,IAAD,IAAU;AAC7B,iBAAOA,IAAI,CAACC,GAAL,KAAaN,OAAO,CAACO,KAArB,GAA6B,EAAE,GAAGF,IAAL;AAAWG,YAAAA,QAAQ,EAAER,OAAO,CAACQ;AAA7B,WAA7B,GAAuEH,IAA9E;AACH,SAFM;AAFJ,OAAP;;AAMJ,SAAKd,eAAe,CAACmB,iBAArB;AACI,aAAO,EACH,GAAGZ,KADA;AAEHL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAiBC,IAAD,IAAU;AAC7B,iBAAOA,IAAI,CAACC,GAAL,KAAaN,OAAO,CAACO,KAArB,GAA6B,EAAE,GAAGF,IAAL;AAAWM,YAAAA,KAAK,EAAEX,OAAO,CAACW;AAA1B,WAA7B,GAAiEN,IAAxE;AACH,SAFM;AAFJ,OAAP;;AAMJ;AACI,aAAOP,KAAP;AAvCR;AAyCH,CA3CD;;AA6CA,eAAeD,WAAf","sourcesContent":["import feedTypes from './feedTypes';\nimport * as postActionTypes from '../Constants/postConstants'\nconst initState = {\n    posts: null,\n    fetching: true,\n    error: false,\n    hasMore: false,\n};\n\nconst feedReducer = (state = initState, { type, payload }) => {\n\n    switch (type) {\n        case feedTypes.FETCH_POSTS_SUCCESS:\n            return {\n                ...state,\n                error: false,\n                fetching: false,\n                posts: payload\n            }\n\n        case feedTypes.FETCH_POSTS_FAILURE:\n            return {\n                ...state,\n                fetching: false,\n                error: true\n            }\n        case postActionTypes.DELETE_COMMENT_SUCCESS:\n\n\n            return {\n                ...state,\n                posts: state.posts.map((post) => {\n                    return post._id === payload._post ? { ...post, comments: payload.comments } : post\n                })\n            }\n        case postActionTypes.COMMENT_POST_SUCCESS:\n            return {\n                ...state,\n                posts: state.posts.map((post) => {\n                    return post._id === payload._post ? { ...post, comments: payload.comments } : post\n                })\n            }\n        case postActionTypes.LIKE_POST_SUCCESS:\n            return {\n                ...state,\n                posts: state.posts.map((post) => {\n                    return post._id === payload._post ? { ...post, likes: payload.likes } : post\n                })\n            }\n        default:\n            return state;\n    }\n}\n\nexport default feedReducer;"]},"metadata":{},"sourceType":"module"}