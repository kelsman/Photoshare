{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/Documents/mern stack/photoShare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Documents/mern stack/photoShare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import*as postActionTypes from'../Constants/postConstants';import{setToken}from'../../utils';import axios from'axios';import cogoToast from'cogo-toast';import*as Routes from'../../component/routes';var token=localStorage.getItem('authToken');var baseUrl=process.env.REACT_APP_BASE_URL||'http://localhost:9000';// @create post\nexport var createPostFunc=function createPostFunc(data,history){var token=localStorage.getItem('authToken');return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!token){_context.next=4;break;}_context.next=4;return setToken(token);case 4:config={headers:{'Content-Type':'multipart/form-data'}};cogoToast.loading('posting');_context.next=8;return axios.post('/api/route/post/createPost',data,config);case 8:response=_context.sent;if(!response){_context.next=13;break;}_context.next=12;return dispatch({type:postActionTypes.CREATE_POST_SUCCESS,payload:response.data.msg});case 12:cogoToast.success('post created');case 13:_context.next=22;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);if(!_context.t0.response){_context.next=22;break;}cogoToast.error(\"\".concat(_context.t0.response.data.msg));_context.next=21;return dispatch({type:postActionTypes.CREATE_POST_FAIL,payload:_context.t0.response.data});case 21:if(_context.t0.response.data.msg==='jwt expired'||_context.t0.response.data.msg===\"you're not authorised\"){history.push('/');localStorage.removeItem('authToken');cogoToast.info('session expired');}case 22:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function(_x){return _ref.apply(this,arguments);};}();};//  load explore posts\nexport var getPosts=function getPosts(history){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var token,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:token=localStorage.getItem('authToken');_context2.prev=1;if(!token){_context2.next=5;break;}_context2.next=5;return setToken(token);case 5:_context2.next=7;return axios.get(\"/api/route/post/retrieveExplorePost\");case 7:response=_context2.sent;if(response){dispatch({type:postActionTypes.GET_POSTS_SUCCESS,payload:response.data.posts});}_context2.next=18;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);if(!_context2.t0.response){_context2.next=18;break;}console.log(_context2.t0.response.data);_context2.next=17;return dispatch({type:postActionTypes.GET_POSTS_FAIL,payload:_context2.t0.response.data});case 17:if(_context2.t0.response.data.msg==='jwt expired'||_context2.t0.response.data.msg===\"you're not authorised\"){localStorage.removeItem('authToken');history.push('/');}// cogoToast.error(`${error.response.data.msg}`, { position: \"top-right\" })\ncase 18:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};//  @comment on a post with a given post id passed as a param to the url\nexport var commentPost=function commentPost(postId,commentText,socket,history){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!token){_context3.next=3;break;}_context3.next=3;return setToken(token);case 3:_context3.prev=3;config={headers:{'Content-Type':'application/json'}};_context3.next=7;return axios.post(\"/api/route/post/comment/\".concat(postId),{commentText:commentText});case 7:response=_context3.sent;if(response){dispatch({type:postActionTypes.COMMENT_POST_SUCCESS,payload:response.data.data});console.log(response.data.data);}_context3.next=18;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](3);if(!_context3.t0.response){_context3.next=18;break;}console.log(_context3.t0.response.data);_context3.next=17;return dispatch({type:postActionTypes.COMMENT_POST_FAIL,payload:_context3.t0.response.data.msg});case 17:if(_context3.t0.response.data.msg==='jwt expired'||_context3.t0.response.data.msg===\"you're not authorised\"){localStorage.removeItem('authToken');history.push('/');}// cogoToast.error(`${error.response.data.msg}`, { position: \"top-right\" })\ncase 18:case\"end\":return _context3.stop();}}},_callee3,null,[[3,11]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};// @delete a commment\nexport var deleteComment=function deleteComment(postid,commentid,history){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var config,response;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;if(!token){_context4.next=4;break;}_context4.next=4;return setToken(token);case 4:config={headers:{'Content-Type':'application/json'}};_context4.next=7;return axios.put(\"/api/route/post/deleteComment/\".concat(postid,\"/\").concat(commentid),config);case 7:response=_context4.sent;if(response){console.log(response.data);dispatch({type:postActionTypes.DELETE_COMMENT_SUCCESS,payload:response.data.data});}_context4.next=18;break;case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](0);if(!_context4.t0.response){_context4.next=18;break;}console.log(_context4.t0.response.data);_context4.next=17;return dispatch({type:postActionTypes.DELETE_COMMENT_FAIL,payload:_context4.t0.response.data.msg});case 17:if(_context4.t0.response.data.msg==='jwt expired'||_context4.t0.response.data.msg===\"you're not authorised\"){localStorage.removeItem('authToken');history.push('/');}case 18:case\"end\":return _context4.stop();}}},_callee4,null,[[0,11]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export var getSinglePost=function getSinglePost(postId,history){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var config,response;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(!token){_context5.next=3;break;}_context5.next=3;return setToken(token);case 3:config={headers:{'Content-Type':'application/json'}};_context5.prev=4;_context5.next=7;return axios.get(\"/api/route/post/singlePost/\".concat(postId),config);case 7:response=_context5.sent;if(response){dispatch({type:postActionTypes.GET_SINGLE_POST_SUCCESS,payload:response.data.post[0]});}_context5.next=18;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](4);if(!_context5.t0.response){_context5.next=18;break;}console.log(_context5.t0.response.data);_context5.next=17;return dispatch({type:postActionTypes.GET_SINGLE_POST_FAIL,payload:_context5.t0.response.data.msg});case 17:if(_context5.t0.response.data.msg==='jwt expired'||_context5.t0.response.data.msg===\"you're not authorised\"){localStorage.removeItem('authToken');history.push('/');}case 18:case\"end\":return _context5.stop();}}},_callee5,null,[[4,11]]);}));return function(_x5){return _ref5.apply(this,arguments);};}();};//  like & unlike  a post\nexport var likePost=function likePost(postId,socket,history){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var token,config,response;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:token=localStorage.getItem('authToken');config={headers:{'Content-Type':'application/json'}};if(!token){_context6.next=5;break;}_context6.next=5;return setToken(token);case 5:_context6.prev=5;_context6.next=8;return axios.put(\"/api/route/post/likePost/\".concat(postId),config);case 8:response=_context6.sent;if(response){dispatch({type:postActionTypes.LIKE_POST_SUCCESS,payload:response.data.data});}_context6.next=20;break;case 12:_context6.prev=12;_context6.t0=_context6[\"catch\"](5);if(!_context6.t0.response){_context6.next=20;break;}console.log(_context6.t0.response.data);_context6.next=18;return dispatch({type:postActionTypes.LIKE_POST_FAIL,payload:_context6.t0.response.data.msg});case 18:cogoToast.info(\"\".concat(_context6.t0.response.data.msg),{position:'top-center'});if(_context6.t0.response.data.msg==='jwt expired'||_context6.t0.response.data.msg===\"you're not authorised\"){localStorage.removeItem('authToken');history.push('/');}case 20:case\"end\":return _context6.stop();}}},_callee6,null,[[5,12]]);}));return function(_x6){return _ref6.apply(this,arguments);};}();};//  load feed posts\nexport var retrieveFeedPosts=function retrieveFeedPosts(history){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var token,config,response;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:token=localStorage.getItem('authToken');config={headers:{'Content-Type':'application/json'}};if(!token){_context7.next=5;break;}_context7.next=5;return setToken(token);case 5:_context7.prev=5;_context7.next=8;return axios.get(\"api/route/post/retrieveFeedPosts\",config);case 8:response=_context7.sent;if(response){console.log(response.data);dispatch({type:postActionTypes.GET_FEEDS_SUCCESS,payload:response.data.posts});}_context7.next=20;break;case 12:_context7.prev=12;_context7.t0=_context7[\"catch\"](5);if(!_context7.t0.response){_context7.next=20;break;}console.log(_context7.t0.response.data);_context7.next=18;return dispatch({type:postActionTypes.GET_FEEDS_FAIL,payload:_context7.t0.response.data.msg});case 18:cogoToast.info(\"\".concat(_context7.t0.response.data.msg),{position:'top-center'});if(_context7.t0.response.data.msg==='jwt expired'||_context7.t0.response.data.msg===\"you're not authorised\"){history.push('/');localStorage.removeItem('authToken');}case 20:case\"end\":return _context7.stop();}}},_callee7,null,[[5,12]]);}));return function(_x7){return _ref7.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/Actions/postActions.js"],"names":["postActionTypes","setToken","axios","cogoToast","Routes","token","localStorage","getItem","baseUrl","process","env","REACT_APP_BASE_URL","createPostFunc","data","history","dispatch","config","headers","loading","post","response","type","CREATE_POST_SUCCESS","payload","msg","success","error","CREATE_POST_FAIL","push","removeItem","info","getPosts","get","GET_POSTS_SUCCESS","posts","console","log","GET_POSTS_FAIL","commentPost","postId","commentText","socket","COMMENT_POST_SUCCESS","COMMENT_POST_FAIL","deleteComment","postid","commentid","put","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAIL","getSinglePost","GET_SINGLE_POST_SUCCESS","GET_SINGLE_POST_FAIL","likePost","LIKE_POST_SUCCESS","LIKE_POST_FAIL","position","retrieveFeedPosts","GET_FEEDS_SUCCESS","GET_FEEDS_FAIL"],"mappings":"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","sourcesContent":["import * as postActionTypes from '../Constants/postConstants';\nimport { setToken } from '../../utils';\n\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport * as Routes from '../../component/routes';\n\nconst token = localStorage.getItem('authToken');\n\nconst baseUrl = process.env.REACT_APP_BASE_URL || 'http://localhost:9000';\n\n// @create post\n\nexport const createPostFunc = (data, history) => {\n  const token = localStorage.getItem('authToken');\n  return async (dispatch) => {\n    try {\n      if (token) {\n        await setToken(token);\n      }\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      };\n      cogoToast.loading('posting');\n      const response = await axios.post('/api/route/post/createPost', data, config);\n      if (response) {\n        await dispatch({ type: postActionTypes.CREATE_POST_SUCCESS, payload: response.data.msg });\n        cogoToast.success('post created');\n      }\n    } catch (error) {\n      if (error.response) {\n        cogoToast.error(`${error.response.data.msg}`);\n        await dispatch({ type: postActionTypes.CREATE_POST_FAIL, payload: error.response.data });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          history.push('/');\n          localStorage.removeItem('authToken');\n          cogoToast.info('session expired');\n        }\n      }\n    }\n  };\n};\n\n//  load explore posts\nexport const getPosts = (history) => {\n  return async (dispatch) => {\n    const token = localStorage.getItem('authToken');\n    try {\n      if (token) {\n        await setToken(token);\n      }\n\n      const response = await axios.get(`/api/route/post/retrieveExplorePost`);\n      if (response) {\n        dispatch({ type: postActionTypes.GET_POSTS_SUCCESS, payload: response.data.posts });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        await dispatch({ type: postActionTypes.GET_POSTS_FAIL, payload: error.response.data });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          localStorage.removeItem('authToken');\n          history.push('/');\n        }\n        // cogoToast.error(`${error.response.data.msg}`, { position: \"top-right\" })\n      }\n    }\n  };\n};\n\n//  @comment on a post with a given post id passed as a param to the url\nexport const commentPost = (postId, commentText, socket, history) => {\n  return async (dispatch) => {\n    if (token) {\n      await setToken(token);\n    }\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const response = await axios.post(`/api/route/post/comment/${postId}`, { commentText });\n      if (response) {\n        dispatch({ type: postActionTypes.COMMENT_POST_SUCCESS, payload: response.data.data });\n        console.log(response.data.data);\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        await dispatch({\n          type: postActionTypes.COMMENT_POST_FAIL,\n          payload: error.response.data.msg,\n        });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          localStorage.removeItem('authToken');\n          history.push('/');\n        }\n        // cogoToast.error(`${error.response.data.msg}`, { position: \"top-right\" })\n      }\n    }\n  };\n};\n\n// @delete a commment\n\nexport const deleteComment = (postid, commentid, history) => async (dispatch) => {\n  try {\n    if (token) {\n      await setToken(token);\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const response = await axios.put(\n      `/api/route/post/deleteComment/${postid}/${commentid}`,\n      config,\n    );\n    if (response) {\n      console.log(response.data);\n      dispatch({ type: postActionTypes.DELETE_COMMENT_SUCCESS, payload: response.data.data });\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      await dispatch({\n        type: postActionTypes.DELETE_COMMENT_FAIL,\n        payload: error.response.data.msg,\n      });\n      if (\n        error.response.data.msg === 'jwt expired' ||\n        error.response.data.msg === `you're not authorised`\n      ) {\n        localStorage.removeItem('authToken');\n        history.push('/');\n      }\n    }\n  }\n};\n\nexport const getSinglePost = (postId, history) => {\n  return async (dispatch) => {\n    if (token) {\n      await setToken(token);\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      const response = await axios.get(`/api/route/post/singlePost/${postId}`, config);\n      if (response) {\n        dispatch({ type: postActionTypes.GET_SINGLE_POST_SUCCESS, payload: response.data.post[0] });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        await dispatch({\n          type: postActionTypes.GET_SINGLE_POST_FAIL,\n          payload: error.response.data.msg,\n        });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          localStorage.removeItem('authToken');\n          history.push('/');\n        }\n      }\n    }\n  };\n};\n\n//  like & unlike  a post\n\nexport const likePost = (postId, socket, history) => {\n  return async (dispatch) => {\n    const token = localStorage.getItem('authToken');\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    if (token) {\n      await setToken(token);\n    }\n    try {\n      const response = await axios.put(`/api/route/post/likePost/${postId}`, config);\n      if (response) {\n        dispatch({ type: postActionTypes.LIKE_POST_SUCCESS, payload: response.data.data });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        await dispatch({ type: postActionTypes.LIKE_POST_FAIL, payload: error.response.data.msg });\n        cogoToast.info(`${error.response.data.msg}`, { position: 'top-center' });\n        if (\n          error.response.data.msg === 'jwt expired' ||\n          error.response.data.msg === `you're not authorised`\n        ) {\n          localStorage.removeItem('authToken');\n          history.push('/');\n        }\n      }\n    }\n  };\n};\n\n//  load feed posts\n\nexport const retrieveFeedPosts = (history) => async (dispatch) => {\n  const token = localStorage.getItem('authToken');\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  if (token) {\n    await setToken(token);\n  }\n  try {\n    const response = await axios.get(`api/route/post/retrieveFeedPosts`, config);\n    if (response) {\n      console.log(response.data);\n      dispatch({ type: postActionTypes.GET_FEEDS_SUCCESS, payload: response.data.posts });\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      await dispatch({ type: postActionTypes.GET_FEEDS_FAIL, payload: error.response.data.msg });\n      cogoToast.info(`${error.response.data.msg}`, { position: 'top-center' });\n      if (\n        error.response.data.msg === 'jwt expired' ||\n        error.response.data.msg === `you're not authorised`\n      ) {\n        history.push('/');\n        localStorage.removeItem('authToken');\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}