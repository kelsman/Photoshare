{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './style.scss';\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPostModal = ({\n  file\n}) => {\n  _s();\n\n  const modalIsOpen = useSelector(({\n    modal\n  }) => modal.showModal);\n  const dispatch = useDispatch();\n  const [previewImage, setPreviewImage] = useState(undefined);\n  useEffect(() => {\n    dispatch(showModal());\n    return () => null;\n  }, []);\n  useEffect(() => {\n    if (file.type == \"image/jpeg\" || file.type == \"image/png\") {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onLoad(event => {\n        setPreviewImage(event.target.result);\n      });\n    } else {// \n    }\n\n    return () => null;\n  }, [file]);\n\n  const closeModal = () => {\n    dispatch(hideModal());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \" Add a Caption\",\n        className: \"caption__box\",\n        name: \"caption\",\n        id: \"caption\",\n        cols: \"30\",\n        rows: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), previewImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewImage,\n        className: \"preview\",\n        alt: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \" hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPostModal, \"8bNF4SLPjuxK4BpTadcArwmra0w=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = NewPostModal;\nexport default NewPostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPostModal\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostModal/index.js"],"names":["React","Fragment","useEffect","useState","Modal","useDispatch","useSelector","showModal","hideModal","NewPostModal","file","modalIsOpen","modal","dispatch","previewImage","setPreviewImage","undefined","type","reader","FileReader","readAsDataURL","onLoad","event","target","result","closeModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,cAAP;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,mCAArC;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC/B,QAAMC,WAAW,GAAGL,WAAW,CAAC,CAAC;AAAEM,IAAAA;AAAF,GAAD,KAAeA,KAAK,CAACL,SAAtB,CAA/B;AACA,QAAMM,QAAQ,GAAGR,WAAW,EAA5B;AAEA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAACa,SAAD,CAAhD;AAKAd,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACN,SAAS,EAAV,CAAR;AACA,WAAO,MAAM,IAAb;AACH,GAHQ,EAGN,EAHM,CAAT;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIQ,IAAI,CAACO,IAAL,IAAa,YAAb,IAA6BP,IAAI,CAACO,IAAL,IAAa,WAA9C,EAA2D;AACvD,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,aAAP,CAAqBV,IAArB;AACAQ,MAAAA,MAAM,CAACG,MAAP,CAAeC,KAAD,IAAW;AACrBP,QAAAA,eAAe,CAACO,KAAK,CAACC,MAAN,CAAaC,MAAd,CAAf;AACH,OAFD;AAGH,KAND,MAMO,CACH;AACH;;AACD,WAAO,MAAM,IAAb;AACH,GAXQ,EAWN,CAACd,IAAD,CAXM,CAAT;;AAcA,QAAMe,UAAU,GAAG,MAAM;AACrBZ,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI,QAAC,KAAD;AACI,MAAA,MAAM,EAAEG,WADZ;AAGI,MAAA,cAAc,EAAEc,UAHpB;AAII,MAAA,SAAS,EAAC,OAJd;AAKI,MAAA,gBAAgB,EAAC,SALrB;AAAA,8BAOI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI;AACI,QAAA,WAAW,EAAC,gBADhB;AAEI,QAAA,SAAS,EAAC,cAFd;AAGI,QAAA,IAAI,EAAC,SAHT;AAII,QAAA,EAAE,EAAC,SAJP;AAKI,QAAA,IAAI,EAAC,IALT;AAMI,QAAA,IAAI,EAAC;AANT;AAAA;AAAA;AAAA;AAAA,cAbJ,EAwBKX,YAAY,iBAAI;AAAK,QAAA,GAAG,EAAEA,YAAV;AAAwB,QAAA,SAAS,EAAC,SAAlC;AAA4C,QAAA,GAAG,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAxBrB,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA0BI;AAAQ,QAAA,OAAO,EAAEW,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA/DD;;GAAMhB,Y;UACkBH,W,EACHD,W;;;KAFfI,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './style.scss';\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\n\nconst NewPostModal = ({ file }) => {\n    const modalIsOpen = useSelector(({ modal }) => modal.showModal)\n    const dispatch = useDispatch()\n\n    const [previewImage, setPreviewImage] = useState(undefined)\n\n\n\n\n    useEffect(() => {\n        dispatch(showModal())\n        return () => null;\n    }, [])\n\n    useEffect(() => {\n        if (file.type == \"image/jpeg\" || file.type == \"image/png\") {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onLoad((event) => {\n                setPreviewImage(event.target.result)\n            })\n        } else {\n            // \n        }\n        return () => null\n    }, [file])\n\n\n    const closeModal = () => {\n        dispatch(hideModal())\n    }\n    return (\n        <div className=\"modal__wrapper\">\n            <Modal\n                isOpen={modalIsOpen}\n\n                onRequestClose={closeModal}\n                className=\"modal\"\n                overlayClassName=\"overlay\"\n            >\n                <div>\n                    <button>go back</button>\n                    <button> Share</button>\n\n                </div>\n                {/* caption */}\n                <textarea\n                    placeholder=\" Add a Caption\"\n                    className=\"caption__box\"\n                    name=\"caption\"\n                    id=\"caption\"\n                    cols=\"30\"\n                    rows=\"10\"\n                />\n\n                {/* preview image */}\n\n                {previewImage && <img src={previewImage} className=\"preview\" alt=\"image\" />}\n                <h4> hello</h4>\n                <button onClick={closeModal}>close</button>\n            </Modal>\n        </div>\n    )\n};\n\nexport default NewPostModal"]},"metadata":{},"sourceType":"module"}