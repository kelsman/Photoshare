{"ast":null,"code":"import _objectSpread from\"/Users/mac/Documents/mern stack/photoShare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as postActionTypes from'../Constants/postConstants';import{updateComment}from'../Helpers';var initState={isLoading:true,post:null,posts:null,myposts:[],feeds:null,error:{getError:'',postError:'',commentError:'',likeError:'',deleteCommentError:'',createPostError:''}};var postReducer=function postReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case postActionTypes.GET_POSTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{isLoading:false,posts:payload});case postActionTypes.GET_POSTS_FAIL:return _objectSpread(_objectSpread({},state),{},{isLoading:false,error:{getError:payload}});case postActionTypes.LIKE_POST_SUCCESS:return _objectSpread(_objectSpread({},state),{},{isLoading:false,post:_objectSpread(_objectSpread({},state.post),{},{likes:payload.likes})});case postActionTypes.LIKE_POST_FAIL:return _objectSpread(_objectSpread({},state),{},{isLoading:false,error:{likeError:payload}});case postActionTypes.COMMENT_POST_SUCCESS:return _objectSpread(_objectSpread({},state),{},{isLoading:false,post:_objectSpread(_objectSpread({},state.post),{},{comments:payload.comments})});case postActionTypes.COMMENT_POST_FAIL:return _objectSpread(_objectSpread({},state),{},{isLoading:false,error:{commentError:payload}});case postActionTypes.DELETE_COMMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{isLoading:false,post:_objectSpread(_objectSpread({},state.post),{},{comments:payload.comments})});case postActionTypes.DELETE_COMMENT_FAIL:return _objectSpread(_objectSpread({},state),{},{isLoading:false,deleteCommentError:payload});case postActionTypes.GET_SINGLE_POST_SUCCESS:return _objectSpread(_objectSpread({},state),{},{isLoading:false,post:payload});default:return state;}};export default postReducer;","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/Reducers/postReducer.js"],"names":["postActionTypes","updateComment","initState","isLoading","post","posts","myposts","feeds","error","getError","postError","commentError","likeError","deleteCommentError","createPostError","postReducer","state","type","payload","GET_POSTS_SUCCESS","GET_POSTS_FAIL","LIKE_POST_SUCCESS","likes","LIKE_POST_FAIL","COMMENT_POST_SUCCESS","comments","COMMENT_POST_FAIL","DELETE_COMMENT_SUCCESS","DELETE_COMMENT_FAIL","GET_SINGLE_POST_SUCCESS"],"mappings":"uKAAA,MAAO,GAAKA,CAAAA,eAAZ,KAAiC,4BAAjC,CACA,OAASC,aAAT,KAA8B,YAA9B,CACA,GAAMC,CAAAA,SAAS,CAAG,CACdC,SAAS,CAAE,IADG,CAEdC,IAAI,CAAE,IAFQ,CAGdC,KAAK,CAAE,IAHO,CAIdC,OAAO,CAAE,EAJK,CAKdC,KAAK,CAAE,IALO,CAMdC,KAAK,CAAE,CACHC,QAAQ,CAAE,EADP,CAEHC,SAAS,CAAE,EAFR,CAGHC,YAAY,CAAE,EAHX,CAIHC,SAAS,CAAE,EAJR,CAKHC,kBAAkB,CAAE,EALjB,CAMHC,eAAe,CAAE,EANd,CANO,CAAlB,CAiBA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA0C,IAAzCC,CAAAA,KAAyC,2DAAjCd,SAAiC,oDAApBe,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAE1D,OAAQD,IAAR,EAEI,IAAKjB,CAAAA,eAAe,CAACmB,iBAArB,CACI,sCACOH,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIE,KAAK,CAAEa,OAHX,GAKJ,IAAKlB,CAAAA,eAAe,CAACoB,cAArB,CACI,sCACOJ,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIK,KAAK,CAAE,CACHC,QAAQ,CAAES,OADP,CAHX,GAQJ,IAAKlB,CAAAA,eAAe,CAACqB,iBAArB,CACI,sCACOL,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIC,IAAI,gCACGY,KAAK,CAACZ,IADT,MAEAkB,KAAK,CAAEJ,OAAO,CAACI,KAFf,EAHR,GAQJ,IAAKtB,CAAAA,eAAe,CAACuB,cAArB,CACI,sCACOP,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIK,KAAK,CAAE,CACHI,SAAS,CAAEM,OADR,CAHX,GAOJ,IAAKlB,CAAAA,eAAe,CAACwB,oBAArB,CACI,sCACOR,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIC,IAAI,gCACGY,KAAK,CAACZ,IADT,MAEAqB,QAAQ,CAAEP,OAAO,CAACO,QAFlB,EAHR,GAQJ,IAAKzB,CAAAA,eAAe,CAAC0B,iBAArB,CACI,sCACOV,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIK,KAAK,CAAE,CACHG,YAAY,CAAEO,OADX,CAHX,GAQJ,IAAKlB,CAAAA,eAAe,CAAC2B,sBAArB,CACI,sCACOX,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIC,IAAI,gCACGY,KAAK,CAACZ,IADT,MAEAqB,QAAQ,CAAEP,OAAO,CAACO,QAFlB,EAHR,GAWJ,IAAKzB,CAAAA,eAAe,CAAC4B,mBAArB,CACI,sCACOZ,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIU,kBAAkB,CAAEK,OAHxB,GAOJ,IAAKlB,CAAAA,eAAe,CAAC6B,uBAArB,CACI,sCACOb,KADP,MAEIb,SAAS,CAAE,KAFf,CAGIC,IAAI,CAAEc,OAHV,GAOJ,QACI,MAAOF,CAAAA,KAAP,CAjFR,CAqFH,CAvFD,CAyFA,cAAeD,CAAAA,WAAf","sourcesContent":["import * as postActionTypes from '../Constants/postConstants'\nimport { updateComment } from '../Helpers';\nconst initState = {\n    isLoading: true,\n    post: null,\n    posts: null,\n    myposts: [],\n    feeds: null,\n    error: {\n        getError: '',\n        postError: '',\n        commentError: '',\n        likeError: '',\n        deleteCommentError: '',\n        createPostError: '',\n    }\n};\n\n\nconst postReducer = (state = initState, { type, payload }) => {\n\n    switch (type) {\n\n        case postActionTypes.GET_POSTS_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                posts: payload\n            }\n        case postActionTypes.GET_POSTS_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    getError: payload\n                }\n            };\n\n        case postActionTypes.LIKE_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: {\n                    ...state.post,\n                    likes: payload.likes\n                }\n            }\n        case postActionTypes.LIKE_POST_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    likeError: payload\n                }\n            }\n        case postActionTypes.COMMENT_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: {\n                    ...state.post,\n                    comments: payload.comments\n                }\n            }\n        case postActionTypes.COMMENT_POST_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                error: {\n                    commentError: payload\n                }\n            }\n\n        case postActionTypes.DELETE_COMMENT_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: {\n                    ...state.post,\n                    comments: payload.comments\n                },\n\n\n            }\n\n        case postActionTypes.DELETE_COMMENT_FAIL:\n            return {\n                ...state,\n                isLoading: false,\n                deleteCommentError: payload\n            }\n\n\n        case postActionTypes.GET_SINGLE_POST_SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                post: payload\n            }\n\n\n        default:\n            return state;\n\n\n    }\n};\n\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}