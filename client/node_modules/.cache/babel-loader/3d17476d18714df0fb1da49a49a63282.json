{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/screens/ProfilePage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Fragment } from 'react';\nimport './style.scss';\nimport * as Routes from '../../component/routes';\nimport axios from 'axios';\nimport { setToken } from '../../utils';\nimport Loader from '../../component/Loader';\nimport cogoToast from 'cogo-toast';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Avatar from '../../assets/default-avatar.png';\nimport * as Icon from 'react-feather';\nimport Footer from '../../component/Footer';\nimport PostCard from '../../component/Explorepostcard/PostCard';\nimport { v4 as uuidv4 } from 'uuid';\nimport FollowButton from '../../component/FollowButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = localStorage.getItem('authToken');\n\nconst ProfilePage = () => {\n  _s();\n\n  const [profile, setProfile] = useState(undefined);\n  const {\n    username\n  } = useParams();\n  const currentUser = useSelector(({\n    user\n  }) => user.currentUser);\n  const history = useHistory();\n  useEffect(() => {\n    let sub = true;\n\n    if (sub) {\n      getProfile();\n    }\n\n    return () => sub = null;\n  }, []);\n\n  const getProfile = async () => {\n    if (token) {\n      setToken(token);\n    }\n\n    const config = {\n      headers: {\n        'Content-Type': 'applocation/json'\n      }\n    };\n\n    try {\n      const response = await axios.get(`/api/route/user/userprofile/${username}`, config);\n\n      if (response) {\n        const data = response.data.userProfile[0];\n        await setProfile(data);\n      }\n    } catch (error) {\n      if (error) {\n        cogoToast.error(`${error.message}`);\n      }\n\n      console.log(error);\n    }\n  };\n\n  if (!profile) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profilepage__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profile.avatar ? profile.avatar : Avatar,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [\" \", profile.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), currentUser && profile && profile._id !== currentUser._id ? /*#__PURE__*/_jsxDEV(FollowButton, {\n              userId: profile && profile._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"settings__btn\",\n                onClick: () => history.push(Routes.SettingsPage),\n                children: \"Edit Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"icon_btn\",\n                children: /*#__PURE__*/_jsxDEV(Icon.Settings, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"follow__details\",\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: [profile.posts && profile.posts.length ? profile.posts.length : 0, \" posts\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [profile.followers && profile.followers.length ? profile.followers.length : 0, ' ', \"followers\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [' ', profile.following && profile.following.length ? profile.following.length : 0, ' ', \"following\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", profile.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__title\",\n        children: /*#__PURE__*/_jsxDEV(Icon.Grid, {\n          className: \"grid__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), profile.posts ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts__gallery\",\n      children: profile.posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(PostCard // src={post.postMedia}\n        , {\n          alt: \"post image\",\n          post: post\n        }, uuidv4(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" no posts to show \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfilePage, \"fv4Q34AQen7tpR4ogffGqo57SXQ=\", false, function () {\n  return [useParams, useSelector, useHistory];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/screens/ProfilePage/index.js"],"names":["React","useState","useEffect","Fragment","Routes","axios","setToken","Loader","cogoToast","useParams","useHistory","useSelector","Avatar","Icon","Footer","PostCard","v4","uuidv4","FollowButton","token","localStorage","getItem","ProfilePage","profile","setProfile","undefined","username","currentUser","user","history","sub","getProfile","config","headers","response","get","data","userProfile","error","message","console","log","avatar","_id","push","SettingsPage","posts","length","followers","following","name","width","map","post"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\nimport './style.scss';\nimport * as Routes from '../../component/routes';\nimport axios from 'axios';\nimport { setToken } from '../../utils';\nimport Loader from '../../component/Loader';\nimport cogoToast from 'cogo-toast';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport Avatar from '../../assets/default-avatar.png';\nimport * as Icon from 'react-feather';\nimport Footer from '../../component/Footer';\nimport PostCard from '../../component/Explorepostcard/PostCard';\nimport { v4 as uuidv4 } from 'uuid';\nimport FollowButton from '../../component/FollowButton';\n\nconst token = localStorage.getItem('authToken');\n\nconst ProfilePage = () => {\n  const [profile, setProfile] = useState(undefined);\n  const { username } = useParams();\n  const currentUser = useSelector(({ user }) => user.currentUser);\n  const history = useHistory();\n\n  useEffect(() => {\n    let sub = true;\n    if (sub) {\n      getProfile();\n    }\n\n    return () => (sub = null);\n  }, []);\n  const getProfile = async () => {\n    if (token) {\n      setToken(token);\n    }\n    const config = {\n      headers: {\n        'Content-Type': 'applocation/json',\n      },\n    };\n    try {\n      const response = await axios.get(`/api/route/user/userprofile/${username}`, config);\n      if (response) {\n        const data = response.data.userProfile[0];\n        await setProfile(data);\n      }\n    } catch (error) {\n      if (error) {\n        cogoToast.error(`${error.message}`);\n      }\n      console.log(error);\n    }\n  };\n\n  if (!profile) {\n    return <Loader />;\n  }\n\n  return (\n    <div className=\"profilepage__wrapper\">\n      <header className=\"header\">\n        <div className=\"header__content\">\n          <div className=\"profile__image\">\n            <img src={profile.avatar ? profile.avatar : Avatar} alt=\"\" />\n          </div>\n          <div className=\"profile__details\">\n            <div className=\"username\">\n              <h2> {profile.username}</h2>\n              {currentUser && profile && profile._id !== currentUser._id ? (\n                <FollowButton userId={profile && profile._id} />\n              ) : (\n                <Fragment>\n                  <button\n                    className=\"settings__btn\"\n                    onClick={() => history.push(Routes.SettingsPage)}\n                  >\n                    Edit Profile\n                  </button>\n                  <button className=\"icon_btn\">\n                    <Icon.Settings />\n                  </button>\n                </Fragment>\n              )}\n            </div>\n\n            <div className=\"follow__details\">\n              <small>\n                {profile.posts && profile.posts.length ? profile.posts.length : 0} posts\n              </small>\n              <small>\n                {profile.followers && profile.followers.length ? profile.followers.length : 0}{' '}\n                followers\n              </small>\n              <small>\n                {' '}\n                {profile.following && profile.following.length ? profile.following.length : 0}{' '}\n                following\n              </small>\n            </div>\n\n            <div className=\"name\">\n              <p> {profile.name}</p>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <section style={{ width: '100%' }}>\n        <div className=\"post__title\">\n          <Icon.Grid className=\"grid__icon\" />\n        </div>\n      </section>\n\n      {profile.posts ? (\n        <div className=\"posts__gallery\">\n          {profile.posts.map((post) => {\n            return (\n              <PostCard\n                // src={post.postMedia}\n                key={uuidv4()}\n                alt=\"post image\"\n                post={post}\n              />\n            );\n          })}\n        </div>\n      ) : (\n        <h4> no posts to show </h4>\n      )}\n\n    </div>\n  );\n};\n\nexport default ProfilePage;\n"]},"metadata":{},"sourceType":"module"}