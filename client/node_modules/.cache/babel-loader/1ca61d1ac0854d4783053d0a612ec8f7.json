{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mac/Documents/mern stack/photoShare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mac/Documents/mern stack/photoShare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{suggestedUserTypes}from'./ActionTypes';import{setToken}from'../../utils';import cogoToast from'cogo-toast';import axios from'axios';var token=localStorage.getItem('authToken');export var getSuggestedUser=function getSuggestedUser(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(token){setToken(token);}_context.prev=1;_context.next=4;return axios.get('api/route/user/suggestedUsers');case 4:response=_context.sent;if(response){dispatch({type:suggestedUserTypes.FETCH_SUGGESTED_USERS_SUCCESS,payload:response.data.users});}_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](1);if(_context.t0.response){dispatch({type:suggestedUserTypes.FETCH_SUGGESTED_USERS_FAIL,payload:_context.t0.response.data});cogoToast.error(\"\".concat(_context.t0.response.data.msg));}case 11:case\"end\":return _context.stop();}}},_callee,null,[[1,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/SuggestedUsers/Actions.js"],"names":["suggestedUserTypes","setToken","cogoToast","axios","token","localStorage","getItem","getSuggestedUser","dispatch","get","response","type","FETCH_SUGGESTED_USERS_SUCCESS","payload","data","users","FETCH_SUGGESTED_USERS_FAIL","error","msg"],"mappings":"6UAAA,OAASA,kBAAT,KAAmC,eAAnC,CACA,OAASC,QAAT,KAAyB,aAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,KAAK,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,kGAAM,iBAAOC,QAAP,+HACpC,GAAIJ,KAAJ,CAAW,CACTH,QAAQ,CAACG,KAAD,CAAR,CACD,CAHmC,sCAKXD,CAAAA,KAAK,CAACM,GAAN,CAAU,+BAAV,CALW,QAK5BC,QAL4B,eAMlC,GAAIA,QAAJ,CAAc,CACZF,QAAQ,CAAC,CACPG,IAAI,CAAEX,kBAAkB,CAACY,6BADlB,CAEPC,OAAO,CAAEH,QAAQ,CAACI,IAAT,CAAcC,KAFhB,CAAD,CAAR,CAID,CAXiC,+EAalC,GAAI,YAAML,QAAV,CAAoB,CAClBF,QAAQ,CAAC,CACPG,IAAI,CAAEX,kBAAkB,CAACgB,0BADlB,CAEPH,OAAO,CAAE,YAAMH,QAAN,CAAeI,IAFjB,CAAD,CAAR,CAIAZ,SAAS,CAACe,KAAV,WAAmB,YAAMP,QAAN,CAAeI,IAAf,CAAoBI,GAAvC,GACD,CAnBiC,oEAAN,gEAAzB","sourcesContent":["import { suggestedUserTypes } from './ActionTypes';\nimport { setToken } from '../../utils';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\nconst token = localStorage.getItem('authToken');\n\nexport const getSuggestedUser = () => async (dispatch) => {\n  if (token) {\n    setToken(token);\n  }\n  try {\n    const response = await axios.get('api/route/user/suggestedUsers');\n    if (response) {\n      dispatch({\n        type: suggestedUserTypes.FETCH_SUGGESTED_USERS_SUCCESS,\n        payload: response.data.users,\n      });\n    }\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: suggestedUserTypes.FETCH_SUGGESTED_USERS_FAIL,\n        payload: error.response.data,\n      });\n      cogoToast.error(`${error.response.data.msg}`);\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}