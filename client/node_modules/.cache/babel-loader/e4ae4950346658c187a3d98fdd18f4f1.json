{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/CommentList/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './style.scss';\nimport ProfileIcon from '../ProfileIcon';\nimport moment from 'moment';\nimport * as Icon from 'react-feather';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteComment } from '../../redux/Actions/postActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmoment.relativeTimeThreshold('d', 30 * 12);\nmoment.updateLocale('en', {\n  relativeTime: {\n    dd: \"%dd\"\n  }\n});\n\nconst CommentList = ({\n  accountName,\n  commentuser,\n  commentImage,\n  commentText,\n  commentId,\n  commentTime,\n  userpost\n}) => {\n  _s();\n\n  const userData = useSelector(({\n    user\n  }) => user.currentUser);\n  const dispatch = useDispatch();\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteComment(userpost._id, commentId, history));\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentContainer\",\n      children: [commentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: commentImage ? commentImage : require('../../assets/default-avatar.png'),\n          alt: \"image\",\n          \"aria-label\": \"poster-iamge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accountName\",\n        children: accountName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: commentText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), userData && commentuser == userData._id && /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: handleDelete,\n        className: \"deletebtn\",\n        children: /*#__PURE__*/_jsxDEV(Icon.Trash2, {\n          size: 13\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 113\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 62\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"comment-time\",\n      children: [\" \", moment(commentTime).fromNow(true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentList, \"roTYIaY3UgK8tbZHPSA7ko6sqaE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CommentList;\nexport default CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/CommentList/index.js"],"names":["React","ProfileIcon","moment","Icon","useSelector","useDispatch","deleteComment","relativeTimeThreshold","updateLocale","relativeTime","dd","CommentList","accountName","commentuser","commentImage","commentText","commentId","commentTime","userpost","userData","user","currentUser","dispatch","handleDelete","_id","history","error","require","fromNow"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,iCAA9B;;AACAJ,MAAM,CAACK,qBAAP,CAA6B,GAA7B,EAAkC,KAAK,EAAvC;AACAL,MAAM,CAACM,YAAP,CAAoB,IAApB,EAA0B;AACtBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,EAAE,EAAE;AADM;AADQ,CAA1B;;AAMA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,WAAf;AAA4BC,EAAAA,YAA5B;AAA0CC,EAAAA,WAA1C;AAAuDC,EAAAA,SAAvD;AAAkEC,EAAAA,WAAlE;AAA+EC,EAAAA;AAA/E,CAAD,KAA+F;AAAA;;AAE/G,QAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;AAAEgB,IAAAA;AAAF,GAAD,KAAcA,IAAI,CAACC,WAApB,CAA5B;AACA,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,QAAMkB,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAMD,QAAQ,CAAChB,aAAa,CAACY,QAAQ,CAACM,GAAV,EAAeR,SAAf,EAA0BS,OAA1B,CAAd,CAAd;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACJ,GAND;;AAOA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,iBACKZ,YAAY,iBACT;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEA,YAAY,GAAGA,YAAH,GAAkBa,OAAO,CAAC,iCAAD,CAA/C;AAAoF,UAAA,GAAG,EAAC,OAAxF;AAAgG,wBAAW;AAA3G;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFR,eAMI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8Bf;AAA9B;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,kBAA0BG;AAA1B;AAAA;AAAA;AAAA;AAAA,cAPJ,EASKI,QAAQ,IAAIN,WAAW,IAAIM,QAAQ,CAACK,GAApC,iBAA4C;AAAM,QAAA,OAAO,EAAED,YAAf;AAA6B,QAAA,SAAS,EAAC,WAAvC;AAAA,+BAAmD,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,IAAI,EAAE;AAAnB;AAAA;AAAA;AAAA;AAAA;AAAnD;AAAA;AAAA;AAAA;AAAA,cATjD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,sBAA+BrB,MAAM,CAACe,WAAD,CAAN,CAAoBW,OAApB,CAA4B,IAA5B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAjCD;;GAAMjB,W;UAEeP,W,EACAC,W;;;KAHfM,W;AAmCN,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport './style.scss';\nimport ProfileIcon from '../ProfileIcon';\nimport moment from 'moment';\nimport * as Icon from 'react-feather'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deleteComment } from '../../redux/Actions/postActions';\nmoment.relativeTimeThreshold('d', 30 * 12);\nmoment.updateLocale('en', {\n    relativeTime: {\n        dd: \"%dd\",\n    }\n});\n\nconst CommentList = ({ accountName, commentuser, commentImage, commentText, commentId, commentTime, userpost }) => {\n\n    const userData = useSelector(({ user }) => user.currentUser)\n    const dispatch = useDispatch();\n\n    const handleDelete = async () => {\n        try {\n            await dispatch(deleteComment(userpost._id, commentId, history))\n        } catch (error) {\n\n        }\n    }\n    return (\n        <React.Fragment>\n            <div className=\"commentContainer\">\n                {commentImage && (\n                    <div className=\"profile-icon\">\n                        <img src={commentImage ? commentImage : require('../../assets/default-avatar.png')} alt=\"image\" aria-label=\"poster-iamge\" />\n                    </div>\n                )}\n                <div className=\"accountName\">{accountName}</div>\n                <div className=\"comment\">{commentText}</div>\n\n                {userData && commentuser == userData._id && (<span onClick={handleDelete} className=\"deletebtn\"><Icon.Trash2 size={13} /></span>)}\n\n\n            </div>\n\n            <h3 className=\"comment-time\"> {moment(commentTime).fromNow(true)}</h3>\n\n        </React.Fragment>\n\n    )\n};\n\nexport default CommentList;"]},"metadata":{},"sourceType":"module"}