{"ast":null,"code":"import _objectSpread from\"/Users/mac/Documents/mern stack/photoShare/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import feedTypes from'./feedTypes';import*as postActionTypes from'../Constants/postConstants';var initState={posts:null,fetching:true,error:false,hasMore:false};var feedReducer=function feedReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var _ref=arguments.length>1?arguments[1]:undefined,type=_ref.type,payload=_ref.payload;switch(type){case feedTypes.FETCH_POSTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{error:false,fetching:false,posts:payload});case feedTypes.FETCH_POSTS_FAILURE:return _objectSpread(_objectSpread({},state),{},{fetching:false,error:true});case postActionTypes.DELETE_COMMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===payload._post?_objectSpread(_objectSpread({},post),{},{comments:payload.comments}):post;})});case postActionTypes.COMMENT_POST_SUCCESS:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===payload._post?_objectSpread(_objectSpread({},post),{},{comments:payload.comments}):post;})});case postActionTypes.LIKE_POST_SUCCESS:return _objectSpread(_objectSpread({},state),{},{posts:state.posts.map(function(post){return post._id===payload._post?_objectSpread(_objectSpread({},post),{},{likes:payload.likes}):post;})});default:return state;}};export default feedReducer;","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedReducer.js"],"names":["feedTypes","postActionTypes","initState","posts","fetching","error","hasMore","feedReducer","state","type","payload","FETCH_POSTS_SUCCESS","FETCH_POSTS_FAILURE","DELETE_COMMENT_SUCCESS","map","post","_id","_post","comments","COMMENT_POST_SUCCESS","LIKE_POST_SUCCESS","likes"],"mappings":"uKAAA,MAAOA,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAO,GAAKC,CAAAA,eAAZ,KAAiC,4BAAjC,CACA,GAAMC,CAAAA,SAAS,CAAG,CACdC,KAAK,CAAE,IADO,CAEdC,QAAQ,CAAE,IAFI,CAGdC,KAAK,CAAE,KAHO,CAIdC,OAAO,CAAE,KAJK,CAAlB,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAA0C,IAAzCC,CAAAA,KAAyC,2DAAjCN,SAAiC,oDAApBO,IAAoB,MAApBA,IAAoB,CAAdC,OAAc,MAAdA,OAAc,CAE1D,OAAQD,IAAR,EACI,IAAKT,CAAAA,SAAS,CAACW,mBAAf,CACI,sCACOH,KADP,MAEIH,KAAK,CAAE,KAFX,CAGID,QAAQ,CAAE,KAHd,CAIID,KAAK,CAAEO,OAJX,GAOJ,IAAKV,CAAAA,SAAS,CAACY,mBAAf,CACI,sCACOJ,KADP,MAEIJ,QAAQ,CAAE,KAFd,CAGIC,KAAK,CAAE,IAHX,GAKJ,IAAKJ,CAAAA,eAAe,CAACY,sBAArB,CAGI,sCACOL,KADP,MAEIL,KAAK,CAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAgB,SAACC,IAAD,CAAU,CAC7B,MAAOA,CAAAA,IAAI,CAACC,GAAL,GAAaN,OAAO,CAACO,KAArB,gCAAkCF,IAAlC,MAAwCG,QAAQ,CAAER,OAAO,CAACQ,QAA1D,GAAuEH,IAA9E,CACH,CAFM,CAFX,GAMJ,IAAKd,CAAAA,eAAe,CAACkB,oBAArB,CACI,sCACOX,KADP,MAEIL,KAAK,CAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAgB,SAACC,IAAD,CAAU,CAC7B,MAAOA,CAAAA,IAAI,CAACC,GAAL,GAAaN,OAAO,CAACO,KAArB,gCAAkCF,IAAlC,MAAwCG,QAAQ,CAAER,OAAO,CAACQ,QAA1D,GAAuEH,IAA9E,CACH,CAFM,CAFX,GAMJ,IAAKd,CAAAA,eAAe,CAACmB,iBAArB,CACI,sCACOZ,KADP,MAEIL,KAAK,CAAEK,KAAK,CAACL,KAAN,CAAYW,GAAZ,CAAgB,SAACC,IAAD,CAAU,CAC7B,MAAOA,CAAAA,IAAI,CAACC,GAAL,GAAaN,OAAO,CAACO,KAArB,gCAAkCF,IAAlC,MAAwCM,KAAK,CAAEX,OAAO,CAACW,KAAvD,GAAiEN,IAAxE,CACH,CAFM,CAFX,GAMJ,QACI,MAAOP,CAAAA,KAAP,CAvCR,CAyCH,CA3CD,CA6CA,cAAeD,CAAAA,WAAf","sourcesContent":["import feedTypes from './feedTypes';\nimport * as postActionTypes from '../Constants/postConstants'\nconst initState = {\n    posts: null,\n    fetching: true,\n    error: false,\n    hasMore: false,\n};\n\nconst feedReducer = (state = initState, { type, payload }) => {\n\n    switch (type) {\n        case feedTypes.FETCH_POSTS_SUCCESS:\n            return {\n                ...state,\n                error: false,\n                fetching: false,\n                posts: payload\n            }\n\n        case feedTypes.FETCH_POSTS_FAILURE:\n            return {\n                ...state,\n                fetching: false,\n                error: true\n            }\n        case postActionTypes.DELETE_COMMENT_SUCCESS:\n\n\n            return {\n                ...state,\n                posts: state.posts.map((post) => {\n                    return post._id === payload._post ? { ...post, comments: payload.comments } : post\n                })\n            }\n        case postActionTypes.COMMENT_POST_SUCCESS:\n            return {\n                ...state,\n                posts: state.posts.map((post) => {\n                    return post._id === payload._post ? { ...post, comments: payload.comments } : post\n                })\n            }\n        case postActionTypes.LIKE_POST_SUCCESS:\n            return {\n                ...state,\n                posts: state.posts.map((post) => {\n                    return post._id === payload._post ? { ...post, likes: payload.likes } : post\n                })\n            }\n        default:\n            return state;\n    }\n}\n\nexport default feedReducer;"]},"metadata":{},"sourceType":"module"}