{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './style.scss';\nimport * as Routes from '../../routes';\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\nimport { useHistory } from 'react-router-dom';\nimport { createPostFunc } from '../../../redux/Actions/postActions';\nimport * as Icon from 'react-feather';\nimport cogoToast from 'cogo-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPostModal = ({\n  file\n}) => {\n  _s();\n\n  const modalIsOpen = useSelector(({\n    modal\n  }) => modal.showModal);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [previewImage, setPreviewImage] = useState(undefined);\n  const [caption, setCaption] = useState('');\n  useEffect(() => {\n    dispatch(showModal());\n    return () => null;\n  }, []);\n  useEffect(() => {\n    if (file.type == \"image/jpeg\" || file.type == \"image/png\") {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = event => {\n        setPreviewImage(event.target.result);\n      };\n    } else {// \n    }\n\n    return () => null;\n  }, [file]);\n\n  const closeModal = async () => {\n    dispatch(hideModal());\n    history.push(Routes.Dashboard);\n  };\n\n  const handlePost = async e => {\n    e.preventDefault();\n\n    try {\n      if (!previewImage) {\n        cogoToast.warn('no picture has been selected');\n      }\n\n      const data = await new FormData();\n      data.append('caption', caption);\n      data.append('postfile', previewImage);\n      await dispatch(createPostFunc(data, history));\n      history.push(Routes.Dashboard);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"goback__btn\",\n          onClick: closeModal,\n          children: /*#__PURE__*/_jsxDEV(Icon.ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share__btn\",\n          type: \"submit\",\n          onClick: handlePost,\n          children: \" Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \" Create Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \" write a Caption\",\n        className: \"caption__box\",\n        name: \"caption\",\n        id: \"caption\",\n        type: \"text\",\n        style: {\n          resize: \"none\"\n        },\n        value: caption,\n        onChange: e => setCaption(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewImage,\n          className: \"preview\",\n          alt: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPostModal, \"tMJqFvV9Iq0N8xLss5kOvx60u+U=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = NewPostModal;\nexport default NewPostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPostModal\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostModal/index.js"],"names":["React","Fragment","useEffect","useState","Modal","useDispatch","useSelector","Routes","showModal","hideModal","useHistory","createPostFunc","Icon","cogoToast","NewPostModal","file","modalIsOpen","modal","dispatch","history","previewImage","setPreviewImage","undefined","caption","setCaption","type","reader","FileReader","readAsDataURL","onload","event","target","result","closeModal","push","Dashboard","handlePost","e","preventDefault","warn","data","FormData","append","error","console","log","resize","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './style.scss';\nimport * as Routes from '../../routes'\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\nimport { useHistory } from 'react-router-dom'\nimport { createPostFunc } from '../../../redux/Actions/postActions';\n\nimport * as Icon from 'react-feather';\nimport cogoToast from 'cogo-toast';\n\nconst NewPostModal = ({ file }) => {\n    const modalIsOpen = useSelector(({ modal }) => modal.showModal)\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const [previewImage, setPreviewImage] = useState(undefined)\n    const [caption, setCaption] = useState('')\n\n\n\n    useEffect(() => {\n        dispatch(showModal())\n        return () => null;\n    }, [])\n\n    useEffect(() => {\n        if (file.type == \"image/jpeg\" || file.type == \"image/png\") {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = (event) => {\n                setPreviewImage(event.target.result);\n            };\n        } else {\n            // \n        }\n        return () => null\n    }, [file])\n\n\n    const closeModal = async () => {\n        dispatch(hideModal())\n        history.push(Routes.Dashboard)\n    }\n\n    const handlePost = async (e) => {\n        e.preventDefault();\n        try {\n            if (!previewImage) {\n                cogoToast.warn('no picture has been selected');\n            }\n\n            const data = await new FormData();\n            data.append('caption', caption);\n            data.append('postfile', previewImage)\n            await dispatch(createPostFunc(data, history))\n            history.push(Routes.Dashboard);\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    return (\n        <div className=\"modal__wrapper\">\n            <Modal\n                isOpen={modalIsOpen}\n\n                onRequestClose={closeModal}\n                className=\"modal\"\n                overlayClassName=\"overlay\"\n            >\n                <div className=\"modal__header\">\n                    <button className=\"goback__btn\" onClick={closeModal}><Icon.ArrowLeft /></button>\n                    <button className=\"share__btn\" type=\"submit\" onClick={handlePost}> Share</button>\n                </div>\n                <small > Create Post</small>\n                {/* caption */}\n                <input\n                    placeholder=\" write a Caption\"\n                    className=\"caption__box\"\n                    name=\"caption\"\n                    id=\"caption\"\n                    type=\"text\"\n                    style={{ resize: \"none\" }}\n                    value={caption}\n                    onChange={(e) => setCaption(e.target.value)}\n                />\n\n                {/* preview image */}\n\n                {previewImage && (<div className=\"preview__wrapper\">\n                    <img src={previewImage} className=\"preview\" alt=\"image\" />\n                </div>)}\n\n            </Modal>\n        </div>\n    )\n};\n\nexport default NewPostModal"]},"metadata":{},"sourceType":"module"}