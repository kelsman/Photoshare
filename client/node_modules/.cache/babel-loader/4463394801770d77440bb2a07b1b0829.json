{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/Card/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.scss';\nimport { ReactComponent as CardButton } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/cardButton.svg\";\nimport CardMenu from '../CardMenu';\nimport CommentList from '../../CommentList';\nimport Profile from '../../Profile';\nimport moment from 'moment';\nimport ExploreCardMenu from '../../ExplorePostCardMenu';\nimport { commentPost } from '../../../redux/Actions/postActions';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Card(props) {\n  _s();\n\n  const [commentText, setCommentText] = useState('');\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    storyBorder,\n    image,\n    comments,\n    likedByText,\n    likedByNumber,\n    accountName,\n    avatar,\n    hours,\n    feed\n  } = props;\n\n  const handlePost = async e => {\n    try {\n      e.preventDefault();\n      await dispatch(commentPost(feed._id, commentText, history));\n      setCommentText('');\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(Profile, {\n        iconSize: \"medium\",\n        image: avatar,\n        username: accountName,\n        storyBorder: storyBorder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardButton, {\n        className: \"cardButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"cardImage\",\n      src: image,\n      alt: \"card content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"likedBy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: comments && comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(CommentList, {\n          accountName: comment.user,\n          comment: comment,\n          commentId: comment._id,\n          commentuser: comment._user,\n          commentText: comment.commentText,\n          userpost: feed,\n          accountName: comment.username,\n          comment: comment.commentText,\n          commentImage: comment.avatar,\n          commentTime: comment.commentDate\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timePosted\",\n      children: [hours, \" HOURS AGO\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handlePost,\n      className: \"addComment\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: commentText,\n        onChange: e => setCommentText(e.target.value),\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        className: \"commentText\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: commentText ? false : true,\n        className: \"postText-btn\",\n        onSubmit: handlePost,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Card, \"2NHocO0ttub1EtTF4BBAQBjRTN4=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/Cards/Card/index.js"],"names":["React","useState","CardMenu","CommentList","Profile","moment","ExploreCardMenu","commentPost","useDispatch","useHistory","Card","props","commentText","setCommentText","history","dispatch","storyBorder","image","comments","likedByText","likedByNumber","accountName","avatar","hours","feed","handlePost","e","preventDefault","_id","error","console","log","message","map","comment","user","_user","username","commentDate","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport './style.scss';\nimport { ReactComponent as CardButton } from '../../../assets/cardButton.svg'\nimport CardMenu from '../CardMenu';\nimport CommentList from '../../CommentList';\nimport Profile from '../../Profile';\nimport moment from 'moment';\nimport ExploreCardMenu from '../../ExplorePostCardMenu'\nimport { commentPost } from '../../../redux/Actions/postActions';\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nfunction Card(props) {\n\n    const [commentText, setCommentText] = useState('');\n    const history = useHistory();\n    const dispatch = useDispatch()\n    const { storyBorder,\n        image,\n        comments,\n        likedByText,\n        likedByNumber,\n        accountName,\n        avatar,\n        hours,\n        feed, } = props;\n\n    const handlePost = async (e) => {\n        try {\n            e.preventDefault();\n            await dispatch(commentPost(feed._id, commentText, history))\n            setCommentText('')\n        } catch (error) {\n            console.log(error.message)\n        }\n    }\n    return (\n        <div className=\"card\">\n            <header>\n                <Profile iconSize=\"medium\" image={avatar} username={accountName} storyBorder={storyBorder} />\n                <CardButton className=\"cardButton\" />\n            </header>\n            <img className=\"cardImage\" src={image} alt=\"card content\" />\n            <CardMenu />\n            <div className=\"likedBy\">\n                {/*  <Profile iconSize=\"small\" hideAccountName={true} /> */}\n                {/*  <span>\n                    Liked by <strong>{likedByText}</strong> and{\" \"}\n                    <strong>{likedByNumber} others</strong>\n                </span> */}\n            </div>\n            <div className=\"comments\">\n                {comments && comments.map((comment) => {\n                    return (\n                        <CommentList\n                            key={comment._id}\n                            accountName={comment.user}\n                            comment={comment}\n                            commentId={comment._id}\n                            commentuser={comment._user}\n                            commentText={comment.commentText}\n                            userpost={feed}\n                            accountName={comment.username}\n                            comment={comment.commentText}\n                            commentImage={comment.avatar}\n                            commentTime={comment.commentDate}\n\n                        />\n                    );\n                })}\n            </div>\n            <div className=\"timePosted\">{hours} HOURS AGO</div>\n            <form onSubmit={handlePost} className=\"addComment\">\n                <input value={commentText} onChange={(e) => setCommentText(e.target.value)} type=\"text\" placeholder=\"Add a comment...\" className=\"commentText\" />\n                <button type='submit' disabled={commentText ? false : true} className=\"postText-btn\" onSubmit={handlePost}>Post</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}