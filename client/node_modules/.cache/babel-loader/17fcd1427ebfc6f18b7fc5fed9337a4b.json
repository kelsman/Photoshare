{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostModal/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './style.scss';\nimport * as Routes from '../../routes';\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\nimport { useHistory } from 'react-router-dom';\nimport { createPostFunc } from '../../../redux/Actions/postActions';\nimport * as Icon from 'react-feather';\nimport cogoToast from 'cogo-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPostModal = ({\n  file\n}) => {\n  _s();\n\n  const modalIsOpen = useSelector(({\n    modal\n  }) => modal.showModal);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [previewImage, setPreviewImage] = useState(undefined);\n  const [caption, setCaption] = useState(''); // console.log(file)\n\n  useEffect(() => {\n    dispatch(showModal());\n    return () => null;\n  }, []);\n  useEffect(() => {\n    if (file.type == 'image/jpeg' || file.type == 'image/png') {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      reader.onload = event => {\n        setPreviewImage(event.target.result);\n      };\n    } else {//\n    }\n\n    return () => null;\n  }, [file]);\n\n  const closeModal = async () => {\n    dispatch(hideModal());\n    history.push(Routes.Dashboard);\n  };\n\n  const handlePost = async e => {\n    e.preventDefault();\n\n    try {\n      // if (!file) {\n      //     cogoToast.warn('no picture has been selected');\n      // }\n      const data = await new FormData();\n      data.append('postfile', file);\n      data.append('caption', caption);\n      console.log(data.get('postfile'), data.get('caption'));\n      await dispatch(createPostFunc(data, history));\n      history.push(Routes.Dashboard);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal__wrapper\",\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      onRequestClose: closeModal,\n      className: \"modal\",\n      overlayClassName: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"goback__btn\",\n          onClick: closeModal,\n          children: /*#__PURE__*/_jsxDEV(Icon.ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"share__btn\",\n          type: \"submit\",\n          onClick: handlePost,\n          children: [' ', \"Share\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \" New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \" write a Caption\",\n        className: \"caption__box\",\n        name: \"caption\",\n        id: \"caption\",\n        type: \"text\",\n        style: {\n          resize: 'none'\n        },\n        value: caption,\n        onChange: e => setCaption(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), previewImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewImage,\n          className: \"preview\",\n          alt: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPostModal, \"tMJqFvV9Iq0N8xLss5kOvx60u+U=\", false, function () {\n  return [useSelector, useDispatch, useHistory];\n});\n\n_c = NewPostModal;\nexport default NewPostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPostModal\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/NewPost/NewPostModal/index.js"],"names":["React","Fragment","useEffect","useState","Modal","useDispatch","useSelector","Routes","showModal","hideModal","useHistory","createPostFunc","Icon","cogoToast","NewPostModal","file","modalIsOpen","modal","dispatch","history","previewImage","setPreviewImage","undefined","caption","setCaption","type","reader","FileReader","readAsDataURL","onload","event","target","result","closeModal","push","Dashboard","handlePost","e","preventDefault","data","FormData","append","console","log","get","error","message","resize","value"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './style.scss';\nimport * as Routes from '../../routes';\nimport { showModal, hideModal } from '../../../redux/modal/modalActions';\nimport { useHistory } from 'react-router-dom';\nimport { createPostFunc } from '../../../redux/Actions/postActions';\n\nimport * as Icon from 'react-feather';\nimport cogoToast from 'cogo-toast';\n\nconst NewPostModal = ({ file }) => {\n  const modalIsOpen = useSelector(({ modal }) => modal.showModal);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [previewImage, setPreviewImage] = useState(undefined);\n  const [caption, setCaption] = useState('');\n\n  // console.log(file)\n\n  useEffect(() => {\n    dispatch(showModal());\n    return () => null;\n  }, []);\n\n  useEffect(() => {\n    if (file.type == 'image/jpeg' || file.type == 'image/png') {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = (event) => {\n        setPreviewImage(event.target.result);\n      };\n    } else {\n      //\n    }\n    return () => null;\n  }, [file]);\n\n  const closeModal = async () => {\n    dispatch(hideModal());\n    history.push(Routes.Dashboard);\n  };\n\n  const handlePost = async (e) => {\n    e.preventDefault();\n    try {\n      // if (!file) {\n      //     cogoToast.warn('no picture has been selected');\n      // }\n\n      const data = await new FormData();\n      data.append('postfile', file);\n      data.append('caption', caption);\n      console.log(data.get('postfile'), data.get('caption'));\n      await dispatch(createPostFunc(data, history));\n      history.push(Routes.Dashboard);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n  return (\n    <div className=\"modal__wrapper\">\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        className=\"modal\"\n        overlayClassName=\"overlay\"\n      >\n        <div className=\"modal__header\">\n          <button className=\"goback__btn\" onClick={closeModal}>\n            <Icon.ArrowLeft />\n          </button>\n          <button className=\"share__btn\" type=\"submit\" onClick={handlePost}>\n            {' '}\n            Share\n          </button>\n        </div>\n        <small> New Post</small>\n        {/* caption */}\n        <input\n          placeholder=\" write a Caption\"\n          className=\"caption__box\"\n          name=\"caption\"\n          id=\"caption\"\n          type=\"text\"\n          style={{ resize: 'none' }}\n          value={caption}\n          onChange={(e) => setCaption(e.target.value)}\n        />\n\n        {/* preview image */}\n\n        {previewImage && (\n          <div className=\"preview__wrapper\">\n            <img src={previewImage} className=\"preview\" alt=\"image\" />\n          </div>\n        )}\n      </Modal>\n    </div>\n  );\n};\n\nexport default NewPostModal;\n"]},"metadata":{},"sourceType":"module"}