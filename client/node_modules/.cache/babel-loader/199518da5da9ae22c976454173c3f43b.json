{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/screens/PostPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport './style.scss';\nimport { useHistory } from 'react-router-dom'; // componnets\n\nimport NavigationHeader from '../../component/NavigationHeader';\nimport CommentList from '../../component/CommentList';\nimport Profile from '../../component/Profile';\nimport CardMenu from '../../component/Cards/CardMenu';\nimport MobileTabMenu from '../../component/MobileTabMenu';\nimport Card from '../../component/Cards/Card'; // external liberires\n\nimport * as Icon from 'react-feather';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExploreMobileCard from '../../component/Cards/ExploreCard';\nimport { commentPost, getPosts, getSinglePost } from '../../redux/Actions/postActions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostPage({\n  commentPost,\n  socket,\n  getPosts,\n  userPost,\n  getSinglePost\n}) {\n  _s();\n\n  const history = useHistory();\n  const [commentText, setCommentText] = React.useState('');\n  const [comments, setComments] = useState(history.location.state.comments);\n  const [loading, setIsLoading] = useState(true);\n  const [post, setPost] = React.useState(history.location.state.post);\n  const inputRef = useRef();\n\n  const focus = () => {\n    inputRef.current.focus();\n  };\n\n  useEffect(() => {\n    let subscribe = true;\n\n    if (subscribe) {\n      const getUserPost = async () => {\n        try {\n          await getSinglePost(history.location.state.post._id);\n          setIsLoading(false);\n        } catch (error) {\n          console.log(error);\n        }\n      };\n\n      getUserPost();\n    }\n\n    return () => subscribe = null;\n  }, [loading]); // console.log(comments)\n\n  const handleCommentPost = async event => {\n    event.preventDefault();\n    console.info('submitting btn');\n\n    try {\n      await commentPost(post._id, commentText);\n      event.target.reset();\n      socket.on('addComment', data => {\n        if (data) {\n          console.log('new comment added', data);\n          setComments(data);\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // const { location: { pathname, state } } = history;\n\n\n  const handleCommentTextChange = e => {\n    setCommentText(e.target.value);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 16\n    }, this);\n  }\n\n  const {\n    postedBy,\n    likes,\n    date,\n    postMedia\n  } = userPost;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(NavigationHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post_content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: postMedia,\n            alt: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile\",\n            children: [/*#__PURE__*/_jsxDEV(Profile, {\n              image: postedBy.avatar,\n              iconSize: \"medium\",\n              username: postedBy.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Icon.MoreHorizontal, {\n              className: \"more-icon\",\n              size: 26\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-section\",\n            children: comments.map(comment => /*#__PURE__*/_jsxDEV(CommentList, {\n              accountName: comment.name,\n              comment: comment.text,\n              commentImage: comment.avatar,\n              commentTime: comment.date\n            }, uuidv4(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card_icon_menu\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-menu\",\n              children: /*#__PURE__*/_jsxDEV(CardMenu, {\n                focus: focus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), !likes.length ? /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"like-title\",\n              children: [\" Be the first to \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"like this\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 80\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [likes.length, \" Likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"post-date\",\n              children: moment(date).format('MMM D')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"addComment\",\n            onSubmit: handleCommentPost,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: inputRef,\n              value: commentText,\n              onChange: handleCommentTextChange,\n              type: \"text\",\n              placeholder: \"Add a comment...\",\n              className: \"commentText\",\n              name: \"commentText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: commentText ? false : true,\n              type: \"submit\",\n              className: \"postText-btn\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile_post_content\",\n        children: /*#__PURE__*/_jsxDEV(ExploreMobileCard, {\n          likes: likes,\n          comments: comments,\n          image: postMedia,\n          postedBy: postedBy,\n          handleCommentPost: handleCommentPost,\n          commenText: commentText,\n          onChange: handleCommentTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostPage, \"spxvUYmvhkdZEr2HmKBDhrHTn5Q=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostPage;\n\nconst mapStateToProps = ({\n  socket,\n  post\n}) => {\n  return {\n    socket: socket.socket,\n    userpost: post.post\n  };\n};\n\nexport default connect(mapStateToProps, {\n  commentPost,\n  getPosts,\n  getSinglePost\n})(PostPage); //  image,\n// comments,\n// likedByText,\n// likedByNumber,\n// hours\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/screens/PostPage/index.js"],"names":["React","useRef","useState","useEffect","useHistory","NavigationHeader","CommentList","Profile","CardMenu","MobileTabMenu","Card","Icon","moment","v4","uuidv4","ExploreMobileCard","commentPost","getPosts","getSinglePost","connect","PostPage","socket","userPost","history","commentText","setCommentText","comments","setComments","location","state","loading","setIsLoading","post","setPost","inputRef","focus","current","subscribe","getUserPost","_id","error","console","log","handleCommentPost","event","preventDefault","info","target","reset","on","data","handleCommentTextChange","e","value","postedBy","likes","date","postMedia","avatar","username","map","comment","name","text","length","format","mapStateToProps","userpost"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nimport './style.scss';\nimport { useHistory } from 'react-router-dom';\n\n// componnets\nimport NavigationHeader from '../../component/NavigationHeader';\nimport CommentList from '../../component/CommentList';\nimport Profile from '../../component/Profile';\nimport CardMenu from '../../component/Cards/CardMenu';\nimport MobileTabMenu from '../../component/MobileTabMenu';\nimport Card from '../../component/Cards/Card'\n// external liberires\nimport * as Icon from 'react-feather'\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport ExploreMobileCard from '../../component/Cards/ExploreCard';\n\nimport { commentPost, getPosts, getSinglePost } from '../../redux/Actions/postActions';\nimport { connect } from 'react-redux';\n\n\nfunction PostPage({ commentPost, socket, getPosts, userPost, getSinglePost }) {\n\n    const history = useHistory();\n\n    const [commentText, setCommentText] = React.useState('');\n    const [comments, setComments] = useState(history.location.state.comments);\n    const [loading, setIsLoading] = useState(true)\n\n    const [post, setPost] = React.useState(history.location.state.post)\n    const inputRef = useRef()\n\n    const focus = () => {\n        inputRef.current.focus()\n    };\n\n    useEffect(() => {\n        let subscribe = true;\n        if (subscribe) {\n            const getUserPost = async () => {\n                try {\n                    await getSinglePost(history.location.state.post._id)\n                    setIsLoading(false)\n\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n            getUserPost();\n\n        }\n        return () => subscribe = null;\n    }, [loading])\n\n    // console.log(comments)\n    const handleCommentPost = async (event) => {\n        event.preventDefault();\n        console.info('submitting btn')\n        try {\n            await commentPost(post._id, commentText);\n            event.target.reset()\n\n            socket.on('addComment', (data) => {\n                if (data) {\n                    console.log('new comment added', data)\n                    setComments(data)\n                }\n            })\n\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // const { location: { pathname, state } } = history;\n\n    const handleCommentTextChange = (e) => {\n        setCommentText(e.target.value)\n    }\n\n    if (loading) {\n        return <p> Loading</p>\n    }\n    const { postedBy, likes, date, postMedia, } = userPost;\n    return (\n        <div className=\"post-page\">\n            <header>\n                <NavigationHeader />\n            </header>\n\n            <main>\n                <div className=\"post_content\">\n\n                    <div className=\"post_image\">\n                        <img src={postMedia} alt=\"image\" />\n                    </div>\n                    <div className=\"post_details\">\n                        <div className=\"profile\">\n                            <Profile image={postedBy.avatar} iconSize=\"medium\" username={postedBy.username} />\n                            <Icon.MoreHorizontal className=\"more-icon\" size={26} />\n                        </div>\n\n                        {/* comment section */}\n                        <div className=\"comment-section\">\n                            {comments.map((comment) => (\n                                <CommentList\n                                    key={uuidv4()}\n                                    accountName={comment.name}\n                                    comment={comment.text}\n                                    commentImage={comment.avatar}\n                                    commentTime={comment.date}\n                                />\n                            ))}\n\n                        </div>\n\n                        {/* icons*/}\n                        <div className=\"card_icon_menu\">\n                            <div className=\"card-menu\">\n                                <CardMenu focus={focus} />\n                            </div>\n                            {!likes.length ?\n                                <small className=\"like-title\"> Be the first to <b>like this</b></small>\n                                :\n                                <small>{likes.length} Likes</small>\n                            }\n\n\n                            <small className=\"post-date\">\n                                {\n                                    moment(date).format('MMM D')\n                                }\n                            </small>\n                        </div>\n\n                        {/*  add a comment form */}\n                        <form className=\"addComment\" onSubmit={handleCommentPost}>\n                            <input\n                                ref={inputRef}\n                                value={commentText}\n                                onChange={handleCommentTextChange}\n                                type=\"text\"\n                                placeholder=\"Add a comment...\"\n                                className=\"commentText\"\n                                name=\"commentText\"\n                            />\n                            <button\n\n                                disabled={commentText ? false : true}\n                                type=\"submit\"\n                                className=\"postText-btn\">Post</button>\n                        </form>\n\n                    </div>\n\n                </div>\n                <div className=\"mobile_post_content\">\n                    <ExploreMobileCard\n                        likes={likes}\n                        comments={comments}\n                        image={postMedia}\n                        postedBy={postedBy}\n                        handleCommentPost={handleCommentPost}\n                        commenText={commentText}\n                        onChange={handleCommentTextChange}\n                    />\n                </div>\n\n            </main>\n\n        </div>\n    )\n}\nconst mapStateToProps = ({ socket, post }) => {\n    return {\n        socket: socket.socket,\n        userpost: post.post\n    }\n}\nexport default connect(mapStateToProps, { commentPost, getPosts, getSinglePost })(PostPage)\n//  image,\n// comments,\n// likedByText,\n// likedByNumber,\n// hours\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}