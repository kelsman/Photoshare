{"ast":null,"code":"import React,{useEffect}from'react';import{Switch,Redirect,Route}from'react-router-dom';// screens\nimport Error404 from'./screens/Error404Screen';import LoginScreen from'./screens/LoginScreen';import SignUpScreen from'./screens/SignUpScreen';import HomeScreen from'./screens/Home/HomeScreen';import ExploreScreen from'./screens/Explore';import NewPostPage from'./screens/NewPost';import EditProfilePage from'./screens/SettingsScreen';import PostPage from'./screens/PostPage';import{useHistory}from'react-router-dom';import*as Routes from'./component/routes';import{loaduser}from'./redux/Actions/userActions';import{connect}from'react-redux';import ErrorBoundary from'./component/ErrorBounday';// import UserProfile from './screens/UserProfile';\nimport{connectSocketIo}from'./redux/Socket/socketActions';import ProfilePage from'./screens/ProfilePage';// components\nimport NavigationHeader from'./component/NavigationHeader';import MobileTabMenu from'./component/MobileTabMenu';import Footer from'./component/Footer';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var token=localStorage.getItem('authToken');function App(_ref){var loaduser=_ref.loaduser,connectSocketIo=_ref.connectSocketIo;var _useHistory=useHistory(),history=_useHistory.history,pathname=_useHistory.location.pathname;useEffect(function(){var subscribe=true;if(subscribe){if(token){connectSocketIo();loaduser(history);}}return function(){return subscribe=null;};},[loaduser]);// useEffect(() => {\n//   let subscribe = true;\n//   if (subscribe) {\n//     if (token) {\n//     }\n//   }\n//   return () => subscribe = null;\n// }, [loaduser]);\nreturn/*#__PURE__*/_jsx(ErrorBoundary,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[pathname!=='/'&&pathname!==Routes.SignUp&&pathname!==Routes.NewPostPage&&/*#__PURE__*/_jsx(NavigationHeader,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:Routes.Login,render:function render(){return/*#__PURE__*/_jsx(LoginScreen,{});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:Routes.SignUp,render:function render(){return/*#__PURE__*/_jsx(SignUpScreen,{});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:Routes.Dashboard,render:function render(){return/*#__PURE__*/_jsx(HomeScreen,{});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:Routes.Explore,render:function render(){return/*#__PURE__*/_jsx(ExploreScreen,{});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:Routes.NewPostPage,component:NewPostPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(Routes.PostPage,\"/:postId\"),component:PostPage}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(Routes.ProfilePage,\"/:username\"),component:ProfilePage}),/*#__PURE__*/_jsx(Route,{path:Routes.SettingsPage,component:EditProfilePage}),/*#__PURE__*/_jsx(Route,{component:Error404})]}),pathname!==Routes.SignUp&&pathname!==Routes.NewPostPage&&/*#__PURE__*/_jsx(MobileTabMenu,{})]})});}export default connect(null,{loaduser:loaduser,connectSocketIo:connectSocketIo})(App);","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/App.js"],"names":["React","useEffect","Switch","Redirect","Route","Error404","LoginScreen","SignUpScreen","HomeScreen","ExploreScreen","NewPostPage","EditProfilePage","PostPage","useHistory","Routes","loaduser","connect","ErrorBoundary","connectSocketIo","ProfilePage","NavigationHeader","MobileTabMenu","Footer","token","localStorage","getItem","App","history","pathname","location","subscribe","SignUp","Login","Dashboard","Explore","SettingsPage"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\n\n// screens\nimport Error404 from './screens/Error404Screen';\nimport LoginScreen from './screens/LoginScreen';\nimport SignUpScreen from './screens/SignUpScreen';\nimport HomeScreen from './screens/Home/HomeScreen';\nimport ExploreScreen from './screens/Explore';\nimport NewPostPage from './screens/NewPost';\nimport EditProfilePage from './screens/SettingsScreen';\nimport PostPage from './screens/PostPage';\n\nimport { useHistory } from 'react-router-dom';\nimport * as Routes from './component/routes';\nimport { loaduser } from './redux/Actions/userActions';\nimport { connect } from 'react-redux';\nimport ErrorBoundary from './component/ErrorBounday';\n// import UserProfile from './screens/UserProfile';\n\nimport { connectSocketIo } from './redux/Socket/socketActions';\nimport ProfilePage from './screens/ProfilePage';\n// components\nimport NavigationHeader from './component/NavigationHeader';\nimport MobileTabMenu from './component/MobileTabMenu';\nimport Footer from './component/Footer';\n\n\nconst token = localStorage.getItem('authToken');\nfunction App({ loaduser, connectSocketIo }) {\n  const {\n    history,\n    location: { pathname },\n  } = useHistory();\n\n  useEffect(() => {\n    let subscribe = true;\n    if (subscribe) {\n      if (token) {\n        connectSocketIo();\n        loaduser(history);\n      }\n    }\n    return () => (subscribe = null);\n  }, [loaduser]);\n\n  // useEffect(() => {\n  //   let subscribe = true;\n  //   if (subscribe) {\n  //     if (token) {\n  //     }\n  //   }\n  //   return () => subscribe = null;\n  // }, [loaduser]);\n\n  return (\n    <ErrorBoundary>\n      <div className=\"App\">\n        {pathname !== '/' &&\n          pathname !== Routes.SignUp &&\n          pathname !== Routes.NewPostPage && <NavigationHeader />}\n\n        <Switch>\n          <Route exact path={Routes.Login} render={() => <LoginScreen />} />\n          <Route exact path={Routes.SignUp} render={() => <SignUpScreen />} />\n          <Route exact path={Routes.Dashboard} render={() => <HomeScreen />} />\n          <Route exact path={Routes.Explore} render={() => <ExploreScreen />} />\n\n          <Route exact path={Routes.NewPostPage} component={NewPostPage} />\n          <Route exact path={`${Routes.PostPage}/:postId`} component={PostPage} />\n          <Route exact path={`${Routes.ProfilePage}/:username`} component={ProfilePage} />\n          <Route path={Routes.SettingsPage} component={EditProfilePage} />\n          {/* <Route exact path={Routes.ProfilePage} component={UserProfile} /> */}\n          <Route component={Error404} />\n        </Switch>\n\n        {\n          pathname !== Routes.SignUp &&\n          pathname !== Routes.NewPostPage &&\n          < MobileTabMenu />}\n\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default connect(null, { loaduser, connectSocketIo })(App);\n"]},"metadata":{},"sourceType":"module"}