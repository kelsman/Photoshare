{"ast":null,"code":"import { setToken } from '../../utils';\nimport feedTypes from './feedTypes';\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport * as Routes from '../../component/routes';\nexport const retrieveFeedPostsStart = history => async dispatch => {\n  const token = localStorage.getItem('authToken');\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  if (token) {\n    await setToken(token);\n  }\n\n  try {\n    const response = await axios.get(`api/route/post/retrieveFeedPosts`, config);\n\n    if (response) {\n      dispatch({\n        type: feedTypes.FETCH_POSTS_SUCCESS,\n        payload: response.data.posts\n      });\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      await dispatch({\n        type: feedTypes.FETCH_POSTS_FAILURE,\n        payload: error.response.data.msg\n      });\n      cogoToast.info(`${error.response.data.msg}`, {\n        position: 'top-center'\n      });\n\n      if (error.response.data.msg === 'jwt expired' || error.response.data.msg === `you're not authorised`) {\n        history.push('/');\n        localStorage.removeItem('authToken');\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/feed/feedAction.js"],"names":["setToken","feedTypes","axios","cogoToast","Routes","retrieveFeedPostsStart","history","dispatch","token","localStorage","getItem","config","headers","response","get","type","FETCH_POSTS_SUCCESS","payload","data","posts","error","console","log","FETCH_POSTS_FAILURE","msg","info","position","push","removeItem"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;AAEA,OAAO,MAAMC,sBAAsB,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AACrE,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAd;AAEA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf;;AAKA,MAAIJ,KAAJ,EAAW;AACT,UAAMR,QAAQ,CAACQ,KAAD,CAAd;AACD;;AACD,MAAI;AACF,UAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,kCAAX,EAA8CH,MAA9C,CAAvB;;AACA,QAAIE,QAAJ,EAAc;AACZN,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEd,SAAS,CAACe,mBAAlB;AAAuCC,QAAAA,OAAO,EAAEJ,QAAQ,CAACK,IAAT,CAAcC;AAA9D,OAAD,CAAR;AACD;AACF,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,QAAIA,KAAK,CAACP,QAAV,EAAoB;AAClBQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACP,QAAN,CAAeK,IAA3B;AACA,YAAMX,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAEd,SAAS,CAACsB,mBAAlB;AAAuCN,QAAAA,OAAO,EAAEG,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBM;AAApE,OAAD,CAAd;AACArB,MAAAA,SAAS,CAACsB,IAAV,CAAgB,GAAEL,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBM,GAAI,EAA1C,EAA6C;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAA7C;;AACA,UACEN,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBM,GAApB,KAA4B,aAA5B,IACAJ,KAAK,CAACP,QAAN,CAAeK,IAAf,CAAoBM,GAApB,KAA6B,uBAF/B,EAGE;AACAlB,QAAAA,OAAO,CAACqB,IAAR,CAAa,GAAb;AACAlB,QAAAA,YAAY,CAACmB,UAAb,CAAwB,WAAxB;AACD;AACF;AACF;AACF,CA9BM","sourcesContent":["import { setToken } from '../../utils';\n\nimport feedTypes from './feedTypes';\n\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nimport * as Routes from '../../component/routes';\n\nexport const retrieveFeedPostsStart = (history) => async (dispatch) => {\n  const token = localStorage.getItem('authToken');\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  if (token) {\n    await setToken(token);\n  }\n  try {\n    const response = await axios.get(`api/route/post/retrieveFeedPosts`, config);\n    if (response) {\n      dispatch({ type: feedTypes.FETCH_POSTS_SUCCESS, payload: response.data.posts });\n    }\n  } catch (error) {\n    if (error.response) {\n      console.log(error.response.data);\n      await dispatch({ type: feedTypes.FETCH_POSTS_FAILURE, payload: error.response.data.msg });\n      cogoToast.info(`${error.response.data.msg}`, { position: 'top-center' });\n      if (\n        error.response.data.msg === 'jwt expired' ||\n        error.response.data.msg === `you're not authorised`\n      ) {\n        history.push('/');\n        localStorage.removeItem('authToken');\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}