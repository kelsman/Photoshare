{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/mern stack/photoShare/client/src/component/auth/LogInForm/LogInForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './style.scss';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signin, loaduser } from '../../../redux/Actions/userActions'; // import { Formik } from 'formik';\n\nimport { useFormik } from 'formik';\nimport { AiOutlineLock, AiOutlineMail } from 'react-icons/ai';\nimport { IconContext } from \"react-icons\"; // import cogoToast from 'cogo-toast';\n// Routes \n\nimport * as Routes from '../../routes';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email().min(5).required('please provide a valid email'),\n  password: Yup.string().min(6, 'password must have at least 6 characters').required()\n});\n\nconst LogInForm = ({\n  signin\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleFormSubmit = async values => {\n    try {\n      setIsSubmitting(true);\n      await signin(values);\n      setIsSubmitting(false);\n      history.push(Routes.Dashboard);\n    } catch (error) {\n      console.log(error.message);\n      values.email = \"\";\n      values.password = \"\";\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema,\n    onSubmit: handleFormSubmit\n  });\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"logo\",\n      children: \"Photogram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-container\",\n        children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            className: \"react-icons\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AiOutlineMail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"email-input\",\n          type: \"email\",\n          name: \"email\",\n          value: formik.values.email,\n          onChange: handleChange,\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          color: \"red\",\n          opacity: .7\n        },\n        children: [\" \", errors.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-container\",\n        children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            className: \"react-icons\"\n          },\n          children: /*#__PURE__*/_jsxDEV(AiOutlineLock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"password-input\",\n          type: \"password\",\n          name: \"password\",\n          value: values.password,\n          onChange: handleChange,\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"small\", {\n        style: {\n          color: \"red\",\n          opacity: .7\n        },\n        children: [\" \", errors.password]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"password-reset-link\",\n        to: \"/accounts/password/reset\",\n        children: \"Forgot your password? \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        disabled: isSubmitting ? true : false,\n        children: isSubmitting ? \"Signing in..\" : \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        className: \"password-reset-link\",\n        to: \"/accounts/signup\",\n        children: \" Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LogInForm, \"tVpCRvb2tnKzwezZGgT5YPpqSrU=\", false, function () {\n  return [useHistory, useFormik];\n});\n\n_c = LogInForm;\n\nconst mapStateToProps = ({\n  user\n}) => {\n  return {\n    loadUserErrorr: user.authError.loadUserError\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signin,\n  loaduser\n})(LogInForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"LogInForm\");","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/component/auth/LogInForm/LogInForm.js"],"names":["React","useState","Yup","Link","connect","signin","loaduser","useFormik","AiOutlineLock","AiOutlineMail","IconContext","Routes","useHistory","validationSchema","object","shape","email","string","min","required","password","LogInForm","history","isSubmitting","setIsSubmitting","handleFormSubmit","values","push","Dashboard","error","console","log","message","formik","initialValues","onSubmit","errors","handleChange","handleSubmit","className","color","opacity","mapStateToProps","user","loadUserErrorr","authError","loadUserError"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './style.scss';\nimport * as Yup from 'yup';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signin, loaduser } from '../../../redux/Actions/userActions'\n// import { Formik } from 'formik';\nimport { useFormik } from 'formik'\nimport { AiOutlineLock, AiOutlineMail } from 'react-icons/ai'\nimport { IconContext } from \"react-icons\";\n// import cogoToast from 'cogo-toast';\n\n// Routes \nimport * as Routes from '../../routes';\n\nimport { useHistory } from 'react-router-dom';\n\n\n\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string().email().min(5).required('please provide a valid email'),\n    password: Yup.string().min(6, 'password must have at least 6 characters').required()\n});\nconst LogInForm = ({ signin }) => {\n\n    const history = useHistory();\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleFormSubmit = async (values) => {\n        try {\n            setIsSubmitting(true)\n            await signin(values);\n            setIsSubmitting(false)\n            history.push(Routes.Dashboard);\n\n        } catch (error) {\n            console.log(error.message);\n            values.email = \"\";\n            values.password = \"\"\n        }\n\n    }\n    const formik = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\"\n        },\n        validationSchema,\n        onSubmit: handleFormSubmit\n\n    })\n\n\n    const { values, errors, handleChange, handleSubmit } = formik\n    return (\n\n        <div>\n            <h1 className=\"logo\">Photogram</h1>\n\n            <form onSubmit={handleSubmit} className=\"login-form\">\n                <h2> Log in</h2>\n                <div className=\"email-container\">\n                    <IconContext.Provider value={{ className: \"react-icons\" }}>\n                        <AiOutlineMail />\n\n                    </IconContext.Provider>\n                    <input\n                        className=\"email-input\"\n                        type=\"email\"\n                        name=\"email\"\n                        value={formik.values.email}\n                        onChange={handleChange}\n                        placeholder=\"email\"\n                    />\n                </div>\n                {errors.email && <small style={{ color: \"red\", opacity: .7 }}> {errors.email}</small>}\n\n                <div className=\"password-container\">\n                    <IconContext.Provider value={{ className: \"react-icons\" }}>\n                        <AiOutlineLock />\n                    </IconContext.Provider>\n                    <input\n                        className=\"password-input\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                        placeholder=\"password\"\n                    />\n\n                </div>\n\n                {errors.password && <small style={{ color: \"red\", opacity: .7 }}> {errors.password}</small>}\n                <Link className=\"password-reset-link\" to=\"/accounts/password/reset\">Forgot your password? </Link>\n\n                <button\n                    type=\"submit\"\n                    className=\"submit-btn\"\n                    disabled={isSubmitting ? true : false}>\n                    {isSubmitting ? \"Signing in..\" : \"Log in\"}\n                </button>\n\n\n\n            </form>\n            <p> Don't have an account? <Link className=\"password-reset-link\" to=\"/accounts/signup\"> Sign up</Link></p>\n\n\n\n        </div>\n    )\n};\nconst mapStateToProps = ({ user }) => {\n    return {\n        loadUserErrorr: user.authError.loadUserError\n    }\n}\nexport default connect(mapStateToProps, { signin, loaduser })(LogInForm);\n\n"]},"metadata":{},"sourceType":"module"}