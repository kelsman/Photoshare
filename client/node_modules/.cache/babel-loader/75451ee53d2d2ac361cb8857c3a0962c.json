{"ast":null,"code":"import { userActionTypes } from '../Constants/userConstants';\nimport { setToken } from '../../utils';\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\nconst baseUrl = process.env.REACT_APP_BASE_URL || \"http://localhost:9000\";\nexport const signup = (data, history) => {\n  return async dispatch => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const response = await axios.post(`${baseUrl}/api/route/user/register`, data);\n      await dispatch({\n        type: userActionTypes.SIGN_UP_SUCESS,\n        payload: response.data\n      });\n      cogoToast.sucess('Registerd successfully');\n      history.push('/');\n    } catch (error) {\n      console.log(error.message);\n\n      if (error.response) {\n        await dispatch({\n          type: userActionTypes.SIGN_UP_FAIL,\n          payload: error.response.data\n        });\n        cogoToast.error(error.response.data);\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/mac/Documents/mern stack/photoShare/client/src/redux/Actions/userActions.js"],"names":["userActionTypes","setToken","axios","cogoToast","baseUrl","process","env","REACT_APP_BASE_URL","signup","data","history","dispatch","config","headers","response","post","type","SIGN_UP_SUCESS","payload","sucess","push","error","console","log","message","SIGN_UP_FAIL"],"mappings":"AAAA,SAASA,eAAT,QAAgC,4BAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,uBAAlD;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACrC,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AADE,OAAf;AAMA,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAY,GAAEX,OAAQ,0BAAtB,EAAiDK,IAAjD,CAAvB;AAEA,YAAME,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAEhB,eAAe,CAACiB,cAAxB;AAAwCC,QAAAA,OAAO,EAAEJ,QAAQ,CAACL;AAA1D,OAAD,CAAd;AACAN,MAAAA,SAAS,CAACgB,MAAV,CAAiB,wBAAjB;AACAT,MAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AAEH,KAbD,CAaE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;;AACA,UAAIH,KAAK,CAACP,QAAV,EAAoB;AAChB,cAAMH,QAAQ,CAAC;AAAEK,UAAAA,IAAI,EAAEhB,eAAe,CAACyB,YAAxB;AAAsCP,UAAAA,OAAO,EAAEG,KAAK,CAACP,QAAN,CAAeL;AAA9D,SAAD,CAAd;AACAN,QAAAA,SAAS,CAACkB,KAAV,CAAgBA,KAAK,CAACP,QAAN,CAAeL,IAA/B;AACH;AACJ;AACJ,GArBD;AAsBH,CAvBM","sourcesContent":["import { userActionTypes } from '../Constants/userConstants';\nimport { setToken } from '../../utils'\n\nimport axios from 'axios';\nimport cogoToast from 'cogo-toast';\n\nconst baseUrl = process.env.REACT_APP_BASE_URL || \"http://localhost:9000\"\n\nexport const signup = (data, history) => {\n    return async (dispatch) => {\n        try {\n            const config = {\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            }\n\n            const response = await axios.post(`${baseUrl}/api/route/user/register`, data);\n\n            await dispatch({ type: userActionTypes.SIGN_UP_SUCESS, payload: response.data });\n            cogoToast.sucess('Registerd successfully');\n            history.push('/')\n\n        } catch (error) {\n            console.log(error.message)\n            if (error.response) {\n                await dispatch({ type: userActionTypes.SIGN_UP_FAIL, payload: error.response.data })\n                cogoToast.error(error.response.data)\n            }\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}